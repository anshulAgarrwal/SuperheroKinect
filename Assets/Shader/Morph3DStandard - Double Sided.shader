Shader "Morph3D/Standard - Double Sided" {
	Properties {
		_Color ("Color", Vector) = (1,1,1,1)
		_MainTex ("Albedo", 2D) = "white" {}
		_Cutoff ("Alpha Cutoff", Range(0, 1)) = 0.5
		_Glossiness ("Smoothness", Range(0, 1)) = 0.5
		_GlossMapScale ("Smoothness Scale", Range(0, 1)) = 1
		[Gamma] _Metallic ("Metallic", Range(0, 1)) = 0
		_MetallicGlossMap ("Metallic", 2D) = "white" {}
		_BumpScale ("Scale", Float) = 1
		_BumpMap ("Normal Map", 2D) = "bump" {}
		_Parallax ("Height Scale", Range(0.005, 0.08)) = 0.02
		_ParallaxMap ("Height Map", 2D) = "black" {}
		_OcclusionStrength ("Strength", Range(0, 1)) = 1
		_OcclusionMap ("Occlusion", 2D) = "white" {}
		_EmissionColor ("Color", Vector) = (0,0,0,1)
		_EmissionMap ("Emission", 2D) = "white" {}
		_DetailMask ("Detail Mask", 2D) = "white" {}
		_DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" {}
		_DetailNormalMapScale ("Scale", Float) = 1
		_DetailNormalMap ("Normal Map", 2D) = "bump" {}
		[Enum(UV0,0,UV1,1)] _UVSec ("UV Set for secondary textures", Float) = 0
		[HideInInspector] _EmissionScaleUI ("Scale", Float) = 0
		[HideInInspector] _EmissionColorUI ("Color", Vector) = (1,1,1,1)
		[HideInInspector] _Mode ("__mode", Float) = 0
		[HideInInspector] _SrcBlend ("__src", Float) = 1
		[HideInInspector] _DstBlend ("__dst", Float) = 0
		[HideInInspector] _ZWrite ("__zw", Float) = 1
	}
	SubShader {
		LOD 300
		Tags { "PerformanceChecks" = "False" "RenderType" = "Opaque" }
		Pass {
			Name "FORWARD"
			LOD 300
			Tags { "LIGHTMODE" = "FORWARDBASE" "PerformanceChecks" = "False" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Blend Zero Zero, Zero Zero
			ZWrite Off
			Cull Off
			GpuProgramID 12148
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb2[42].xyzw, r1.xyzw
					dp4 r0.y, cb2[43].xyzw, r1.xyzw
					dp4 r0.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.w, v4.w, cb3[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb2[42].xyzw, r1.xyzw
					dp4 r0.y, cb2[43].xyzw, r1.xyzw
					dp4 r0.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.w, v4.w, cb3[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb2[42].xyzw, r1.xyzw
					dp4 r0.y, cb2[43].xyzw, r1.xyzw
					dp4 r0.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb2[42].xyzw, r1.xyzw
					dp4 r0.y, cb2[43].xyzw, r1.xyzw
					dp4 r0.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o8.xyz, r0.xyzx
					mov o2.w, l(0)
					mul r0.xyz, v4.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r0.w, v1.xyzx, v1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v4.yzxy
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r2.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r2.xyz, r2.xyzx, v4.wwww
					dp3 o4.w, r2.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v4.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb2[42].xyzw, r1.xyzw
					dp4 r0.y, cb2[43].xyzw, r1.xyzw
					dp4 r0.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb2[42].xyzw, r1.xyzw
					dp4 r0.y, cb2[43].xyzw, r1.xyzw
					dp4 r0.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.w, v4.w, cb3[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb2[42].xyzw, r1.xyzw
					dp4 r0.y, cb2[43].xyzw, r1.xyzw
					dp4 r0.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.w, v4.w, cb3[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb2[42].xyzw, r1.xyzw
					dp4 r0.y, cb2[43].xyzw, r1.xyzw
					dp4 r0.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r0.w, v4.w, cb3[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb2[42].xyzw, r1.xyzw
					dp4 r0.y, cb2[43].xyzw, r1.xyzw
					dp4 r0.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o8.xyz, r0.xyzx
					mov o2.w, l(0)
					mul r0.xyz, v4.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r0.w, v1.xyzx, v1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v4.yzxy
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r2.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r2.xyz, r2.xyzx, v4.wwww
					dp3 o4.w, r2.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.yzxy, r1.zxyz
					mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
					mul r0.w, v4.w, cb3[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.x, r1.y, r1.y
					mad r0.x, r1.x, r1.x, -r0.x
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb2[42].xyzw, r1.xyzw
					dp4 r0.y, cb2[43].xyzw, r1.xyzw
					dp4 r0.z, cb2[44].xyzw, r1.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o8.xyz, r1.xyzx
					mov o2.w, l(0)
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mul r2.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r2.xyz, cb2[4].xyzx, cb1[4].xxxx, r2.xyzx
					mad r2.xyz, cb2[6].xyzx, cb1[4].zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb2[7].xyzx
					add r2.xyz, r2.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r1.yzxy, r3.zxyz
					mad r1.xyz, r3.yzxy, r1.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.w, v4.w, cb2[9].w
					mul o4.xyz, r1.wwww, r1.xyzx
					dp3 r1.x, v1.xyzx, v1.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, v1.zxyz
					dp3 r1.w, v4.xyzx, v4.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v4.yzxy
					mul r4.xyz, r1.xyzx, r3.xyzx
					mad r1.xyz, r1.zxyz, r3.yzxy, -r4.xyzx
					mul r1.xyz, r1.xyzx, v4.wwww
					dp3 o4.w, r1.xyzx, r2.xyzx
					dp3 o5.w, v1.xyzx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o8.xyz, r1.xyzx
					mov o2.w, l(0)
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mul r2.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r2.xyz, cb2[4].xyzx, cb1[4].xxxx, r2.xyzx
					mad r2.xyz, cb2[6].xyzx, cb1[4].zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb2[7].xyzx
					add r2.xyz, r2.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r1.yzxy, r3.zxyz
					mad r1.xyz, r3.yzxy, r1.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.w, v4.w, cb2[9].w
					mul o4.xyz, r1.wwww, r1.xyzx
					dp3 r1.x, v1.xyzx, v1.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, v1.zxyz
					dp3 r1.w, v4.xyzx, v4.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v4.yzxy
					mul r4.xyz, r1.xyzx, r3.xyzx
					mad r1.xyz, r1.zxyz, r3.yzxy, -r4.xyzx
					mul r1.xyz, r1.xyzx, v4.wwww
					dp3 o4.w, r1.xyzx, r2.xyzx
					dp3 o5.w, v1.xyzx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r3.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r3.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o8.xyz, r1.xyzx
					mov o2.w, l(0)
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mul r2.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r2.xyz, cb3[4].xyzx, cb1[4].xxxx, r2.xyzx
					mad r2.xyz, cb3[6].xyzx, cb1[4].zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb3[7].xyzx
					add r2.xyz, r2.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r2.xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.zxyz
					dp3 r1.w, v4.xyzx, v4.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v4.yzxy
					mul r5.xyz, r3.xyzx, r4.xyzx
					mad r3.xyz, r3.zxyz, r4.yzxy, -r5.xyzx
					mul r3.xyz, r3.xyzx, v4.wwww
					dp3 o4.w, r3.xyzx, r2.xyzx
					dp3 o5.w, v1.xyzx, r2.xyzx
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r2.xyzx
					mul r1.x, r2.y, r2.y
					mad r1.x, r2.x, r2.x, -r1.x
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r3.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r3.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r3.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o8.xyz, r1.xyzx
					mov o2.w, l(0)
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mul r2.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r2.xyz, cb3[4].xyzx, cb1[4].xxxx, r2.xyzx
					mad r2.xyz, cb3[6].xyzx, cb1[4].zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb3[7].xyzx
					add r2.xyz, r2.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r2.xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v1.zxyz
					dp3 r1.w, v4.xyzx, v4.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v4.yzxy
					mul r5.xyz, r3.xyzx, r4.xyzx
					mad r3.xyz, r3.zxyz, r4.yzxy, -r5.xyzx
					mul r3.xyz, r3.xyzx, v4.wwww
					dp3 o4.w, r3.xyzx, r2.xyzx
					dp3 o5.w, v1.xyzx, r2.xyzx
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r2.xyzx
					mul r1.x, r2.y, r2.y
					mad r1.x, r2.x, r2.x, -r1.x
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o8.xyz, r0.xyzx
					mov o2.w, l(0)
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o8.xyz, r0.xyzx
					mov o2.w, l(0)
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
					mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb2[42].xyzw, r1.xyzw
					dp4 r3.y, cb2[43].xyzw, r1.xyzw
					dp4 r3.z, cb2[44].xyzw, r1.xyzw
					mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o3.w, r0.x
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul r0.w, v4.w, cb3[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o5.xyz, r2.xyzx
					add r1.xyzw, -r0.xxxx, cb2[3].xyzw
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.zzzz, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mad o6.xyz, r0.xyzx, r1.xyzx, r2.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o3.w, r0.x
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul r0.w, v4.w, cb3[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o5.xyz, r2.xyzx
					add r1.xyzw, -r0.xxxx, cb2[3].xyzw
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.zzzz, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mad o6.xyz, r0.xyzx, r1.xyzx, r2.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
					mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb2[42].xyzw, r1.xyzw
					dp4 r3.y, cb2[43].xyzw, r1.xyzw
					dp4 r3.z, cb2[44].xyzw, r1.xyzw
					mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mul r2.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r2.xyz, cb3[4].xyzx, cb1[4].xxxx, r2.xyzx
					mad r2.xyz, cb3[6].xyzx, cb1[4].zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb3[7].xyzx
					add r2.xyz, r2.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r2.xyzx
					dp3 r0.w, v1.xyzx, v1.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r4.xyz, r0.wwww, v4.yzxy
					mul r5.xyz, r3.xyzx, r4.xyzx
					mad r3.xyz, r3.zxyz, r4.yzxy, -r5.xyzx
					mul r3.xyz, r3.xyzx, v4.wwww
					dp3 o4.w, r3.xyzx, r2.xyzx
					dp3 o5.w, v1.xyzx, r2.xyzx
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul r0.w, v4.w, cb3[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r2.xyzx
					add r1.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r3.xyzw, r2.yyyy, r1.xyzw
					mul r1.xyzw, r1.xyzw, r1.xyzw
					add r4.xyzw, -r0.xxxx, cb2[3].xyzw
					mad r3.xyzw, r4.xyzw, r2.xxxx, r3.xyzw
					mad r1.xyzw, r4.xyzw, r4.xyzw, r1.xyzw
					add r4.xyzw, -r0.zzzz, cb2[5].xyzw
					mov o8.xyz, r0.xyzx
					mad r0.xyzw, r4.xyzw, r2.zzzz, r3.xyzw
					mad r1.xyzw, r4.xyzw, r4.xyzw, r1.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r1.xyzw, r0.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mad o6.xyz, r0.xyzx, r1.xyzx, r2.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
					mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb2[42].xyzw, r1.xyzw
					dp4 r3.y, cb2[43].xyzw, r1.xyzw
					dp4 r3.z, cb2[44].xyzw, r1.xyzw
					mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
					mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb2[42].xyzw, r1.xyzw
					dp4 r3.y, cb2[43].xyzw, r1.xyzw
					dp4 r3.z, cb2[44].xyzw, r1.xyzw
					mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o3.w, r0.x
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul r0.w, v4.w, cb3[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o5.xyz, r2.xyzx
					add r1.xyzw, -r0.xxxx, cb2[3].xyzw
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.zzzz, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mad o6.xyz, r0.xyzx, r1.xyzx, r2.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o3.w, r0.x
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul r0.w, v4.w, cb3[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o5.xyz, r2.xyzx
					add r1.xyzw, -r0.xxxx, cb2[3].xyzw
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.zzzz, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mad o6.xyz, r0.xyzx, r1.xyzx, r2.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o3.w, r0.x
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul r0.w, v4.w, cb3[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o5.xyz, r2.xyzx
					add r1.xyzw, -r0.xxxx, cb2[3].xyzw
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.zzzz, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mad o6.xyz, r0.xyzx, r1.xyzx, r2.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mul r2.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r2.xyz, cb3[4].xyzx, cb1[4].xxxx, r2.xyzx
					mad r2.xyz, cb3[6].xyzx, cb1[4].zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb3[7].xyzx
					add r2.xyz, r2.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r2.xyzx
					dp3 r0.w, v1.xyzx, v1.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r4.xyz, r0.wwww, v4.yzxy
					mul r5.xyz, r3.xyzx, r4.xyzx
					mad r3.xyz, r3.zxyz, r4.yzxy, -r5.xyzx
					mul r3.xyz, r3.xyzx, v4.wwww
					dp3 o4.w, r3.xyzx, r2.xyzx
					dp3 o5.w, v1.xyzx, r2.xyzx
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul r0.w, v4.w, cb3[9].w
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r2.xyzx
					add r1.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r3.xyzw, r2.yyyy, r1.xyzw
					mul r1.xyzw, r1.xyzw, r1.xyzw
					add r4.xyzw, -r0.xxxx, cb2[3].xyzw
					mad r3.xyzw, r4.xyzw, r2.xxxx, r3.xyzw
					mad r1.xyzw, r4.xyzw, r4.xyzw, r1.xyzw
					add r4.xyzw, -r0.zzzz, cb2[5].xyzw
					mov o8.xyz, r0.xyzx
					mad r0.xyzw, r4.xyzw, r2.zzzz, r3.xyzw
					mad r1.xyzw, r4.xyzw, r4.xyzw, r1.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r1.xyzw, r0.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mad o6.xyz, r0.xyzx, r1.xyzx, r2.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
					mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb2[42].xyzw, r1.xyzw
					dp4 r3.y, cb2[43].xyzw, r1.xyzw
					dp4 r3.z, cb2[44].xyzw, r1.xyzw
					mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o8.xyz, r1.xyzx
					mov o2.w, l(0)
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mul r2.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r2.xyz, cb2[4].xyzx, cb1[4].xxxx, r2.xyzx
					mad r2.xyz, cb2[6].xyzx, cb1[4].zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb2[7].xyzx
					add r2.xyz, r2.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r1.yzxy, r3.zxyz
					mad r1.xyz, r3.yzxy, r1.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.w, v4.w, cb2[9].w
					mul o4.xyz, r1.wwww, r1.xyzx
					dp3 r1.x, v1.xyzx, v1.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, v1.zxyz
					dp3 r1.w, v4.xyzx, v4.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v4.yzxy
					mul r4.xyz, r1.xyzx, r3.xyzx
					mad r1.xyz, r1.zxyz, r3.yzxy, -r4.xyzx
					mul r1.xyz, r1.xyzx, v4.wwww
					dp3 o4.w, r1.xyzx, r2.xyzx
					dp3 o5.w, v1.xyzx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o8.xyz, r1.xyzx
					mov o2.w, l(0)
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mul r2.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r2.xyz, cb2[4].xyzx, cb1[4].xxxx, r2.xyzx
					mad r2.xyz, cb2[6].xyzx, cb1[4].zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb2[7].xyzx
					add r2.xyz, r2.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r1.yzxy, r3.zxyz
					mad r1.xyz, r3.yzxy, r1.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.w, v4.w, cb2[9].w
					mul o4.xyz, r1.wwww, r1.xyzx
					dp3 r1.x, v1.xyzx, v1.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, v1.zxyz
					dp3 r1.w, v4.xyzx, v4.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v4.yzxy
					mul r4.xyz, r1.xyzx, r3.xyzx
					mad r1.xyz, r1.zxyz, r3.yzxy, -r4.xyzx
					mul r1.xyz, r1.xyzx, v4.wwww
					dp3 o4.w, r1.xyzx, r2.xyzx
					dp3 o5.w, v1.xyzx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r2.xyzx
					add r3.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r3.xyzw
					mul r3.xyz, r1.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r2.y, r2.y
					mad r1.w, r2.x, r2.x, -r1.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r4.x, cb2[42].xyzw, r2.xyzw
					dp4 r4.y, cb2[43].xyzw, r2.xyzw
					dp4 r4.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o3.w, r1.x
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r1.xyzw, r3.zzzz, r2.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r2.xyzw
					mul r2.xyz, r1.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r3.y, r3.y
					mad r1.w, r3.x, r3.x, -r1.w
					mul r3.xyzw, r3.yzzx, r3.xyzz
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r3.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r2.xyzx, r3.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o3.w, r1.x
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r1.xyzw, r3.zzzz, r2.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r2.xyzw
					mul r2.xyz, r1.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r3.y, r3.y
					mad r1.w, r3.x, r3.x, -r1.w
					mul r3.xyzw, r3.yzzx, r3.xyzz
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r3.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r2.xyzx, r3.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r2.xyzx
					add r3.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r3.xyzw
					mul r3.xyz, r1.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r2.y, r2.y
					mad r1.w, r2.x, r2.x, -r1.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r4.x, cb2[42].xyzw, r2.xyzw
					dp4 r4.y, cb2[43].xyzw, r2.xyzw
					dp4 r4.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 7
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mul r3.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r3.xyz, cb3[4].xyzx, cb1[4].xxxx, r3.xyzx
					mad r3.xyz, cb3[6].xyzx, cb1[4].zzzz, r3.xyzx
					add r3.xyz, r3.xyzx, cb3[7].xyzx
					add r3.xyz, r3.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r3.xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.zxyz
					dp3 r1.w, v4.xyzx, v4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, v4.yzxy
					mul r6.xyz, r4.xyzx, r5.xyzx
					mad r4.xyz, r4.zxyz, r5.yzxy, -r6.xyzx
					mul r4.xyz, r4.xyzx, v4.wwww
					dp3 o4.w, r4.xyzx, r3.xyzx
					dp3 o5.w, v1.xyzx, r3.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r1.yyyy, cb2[4].xyzw
					mul r4.xyzw, r3.yyyy, r2.xyzw
					mul r2.xyzw, r2.xyzw, r2.xyzw
					add r5.xyzw, -r1.xxxx, cb2[3].xyzw
					mad r4.xyzw, r5.xyzw, r3.xxxx, r4.xyzw
					mad r2.xyzw, r5.xyzw, r5.xyzw, r2.xyzw
					add r5.xyzw, -r1.zzzz, cb2[5].xyzw
					mov o8.xyz, r1.xyzx
					mad r1.xyzw, r5.xyzw, r3.zzzz, r4.xyzw
					mad r2.xyzw, r5.xyzw, r5.xyzw, r2.xyzw
					max r2.xyzw, r2.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r2.xyzw
					mad r2.xyzw, r2.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
					mul r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r2.xyzw, r1.xyzw
					mul r2.xyz, r1.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r3.y, r3.y
					mad r1.w, r3.x, r3.x, -r1.w
					mul r3.xyzw, r3.yzzx, r3.xyzz
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r3.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r2.xyzx, r3.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r2.xyzx
					add r3.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r3.xyzw
					mul r3.xyz, r1.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r2.y, r2.y
					mad r1.w, r2.x, r2.x, -r1.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r4.x, cb2[42].xyzw, r2.xyzw
					dp4 r4.y, cb2[43].xyzw, r2.xyzw
					dp4 r4.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r2.xyzx
					add r3.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r3.xyzw
					mul r3.xyz, r1.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r2.y, r2.y
					mad r1.w, r2.x, r2.x, -r1.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r4.x, cb2[42].xyzw, r2.xyzw
					dp4 r4.y, cb2[43].xyzw, r2.xyzw
					dp4 r4.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o3.w, r1.x
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r1.xyzw, r3.zzzz, r2.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r2.xyzw
					mul r2.xyz, r1.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r3.y, r3.y
					mad r1.w, r3.x, r3.x, -r1.w
					mul r3.xyzw, r3.yzzx, r3.xyzz
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r3.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r2.xyzx, r3.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o3.w, r1.x
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r1.xyzw, r3.zzzz, r2.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r2.xyzw
					mul r2.xyz, r1.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r3.y, r3.y
					mad r1.w, r3.x, r3.x, -r1.w
					mul r3.xyzw, r3.yzzx, r3.xyzz
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r3.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r2.xyzx, r3.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o3.w, r1.x
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r1.xyzw, r3.zzzz, r2.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r2.xyzw
					mul r2.xyz, r1.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r3.y, r3.y
					mad r1.w, r3.x, r3.x, -r1.w
					mul r3.xyzw, r3.yzzx, r3.xyzz
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r3.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r2.xyzx, r3.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 7
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mul r3.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r3.xyz, cb3[4].xyzx, cb1[4].xxxx, r3.xyzx
					mad r3.xyz, cb3[6].xyzx, cb1[4].zzzz, r3.xyzx
					add r3.xyz, r3.xyzx, cb3[7].xyzx
					add r3.xyz, r3.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r3.xyzx
					dp3 r1.w, v1.xyzx, v1.xyzx
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, v1.zxyz
					dp3 r1.w, v4.xyzx, v4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, v4.yzxy
					mul r6.xyz, r4.xyzx, r5.xyzx
					mad r4.xyz, r4.zxyz, r5.yzxy, -r6.xyzx
					mul r4.xyz, r4.xyzx, v4.wwww
					dp3 o4.w, r4.xyzx, r3.xyzx
					dp3 o5.w, v1.xyzx, r3.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r1.yyyy, cb2[4].xyzw
					mul r4.xyzw, r3.yyyy, r2.xyzw
					mul r2.xyzw, r2.xyzw, r2.xyzw
					add r5.xyzw, -r1.xxxx, cb2[3].xyzw
					mad r4.xyzw, r5.xyzw, r3.xxxx, r4.xyzw
					mad r2.xyzw, r5.xyzw, r5.xyzw, r2.xyzw
					add r5.xyzw, -r1.zzzz, cb2[5].xyzw
					mov o8.xyz, r1.xyzx
					mad r1.xyzw, r5.xyzw, r3.zzzz, r4.xyzw
					mad r2.xyzw, r5.xyzw, r5.xyzw, r2.xyzw
					max r2.xyzw, r2.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r2.xyzw
					mad r2.xyzw, r2.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
					mul r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r2.xyzw, r1.xyzw
					mul r2.xyz, r1.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r3.y, r3.y
					mad r1.w, r3.x, r3.x, -r1.w
					mul r3.xyzw, r3.yzzx, r3.xyzz
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r3.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r2.xyzx, r3.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r2.xyzx
					add r3.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r3.xyzw
					mul r3.xyz, r1.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r2.y, r2.y
					mad r1.w, r2.x, r2.x, -r1.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r4.x, cb2[42].xyzw, r2.xyzw
					dp4 r4.y, cb2[43].xyzw, r2.xyzw
					dp4 r4.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o8.xyz, r0.xyzx
					mov o2.w, l(0)
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o8.xyz, r0.xyzx
					mov o2.w, l(0)
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r2.wwww, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s3
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r4.y, cb0[9].y, r3.w
					add r4.x, -cb0[8].w, l(1.000000)
					dp3 r4.y, r3.xyzx, r2.xyzx
					add r4.y, r4.y, r4.y
					mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb2[2].w
					if_nz r2.w
					  dp3 r2.w, r4.yzwy, r4.yzwy
					  rsq r2.w, r2.w
					  mul r6.xyz, r2.wwww, r4.yzwy
					  mov r7.x, v3.w
					  mov r7.y, v4.w
					  mov r7.z, v5.w
					  add r8.xyz, -r7.xyzx, cb2[0].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  add r9.xyz, -r7.xyzx, cb2[1].xyzx
					  div r9.xyz, r9.xyzx, r6.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r7.xyz, r7.xyzx, -cb2[2].xyzx
					  mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.yzwy
					endif 
					mad r2.w, -r4.x, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.x
					mul r2.w, r2.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t2.xyzw, s0, r2.w
					add r5.w, r6.w, l(-1.000000)
					mad r5.w, cb2[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb2[3].x
					mul r7.xyz, r6.xyzx, r5.wwww
					lt r6.w, cb2[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb2[6].w
					  if_nz r6.w
					    dp3 r6.w, r4.yzwy, r4.yzwy
					    rsq r6.w, r6.w
					    mul r8.xyz, r4.yzwy, r6.wwww
					    mov r9.x, v3.w
					    mov r9.y, v4.w
					    mov r9.z, v5.w
					    add r10.xyz, -r9.xyzx, cb2[4].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    add r11.xyz, -r9.xyzx, cb2[5].xyzx
					    div r11.xyz, r11.xyzx, r8.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r9.xyz, r9.xyzx, -cb2[6].xyzx
					    mad r4.yzw, r8.xxyz, r6.wwww, r9.xxyz
					  endif 
					  sample_l r8.xyzw, r4.yzwy, t3.xyzw, s0, r2.w
					  add r2.w, r8.w, l(-1.000000)
					  mad r2.w, cb2[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb2[7].x
					  mul r4.yzw, r8.xxyz, r2.wwww
					  mad r6.xyz, r5.wwww, r6.xyzx, -r4.yzwy
					  mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
					endif 
					mul r4.yzw, r3.wwww, r7.xxyz
					mad r6.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.xxxx
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.x, r4.x
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.x, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r5.xxyz
					mul r5.xyz, r5.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.yzwy, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.x, cb3[0].y, l(1.000000)
					  mul r4.yzw, v4.wwww, cb3[2].xxyz
					  mad r4.yzw, cb3[1].xxyz, v3.wwww, r4.yyzw
					  mad r4.yzw, cb3[3].xxyz, v5.wwww, r4.yyzw
					  add r4.yzw, r4.yyzw, cb3[4].xxyz
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r4.xxxx, r4.yzwy, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.x, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.x
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb1[46].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s3
					add r4.y, -cb0[9].y, l(1.000000)
					mad r4.y, r5.y, cb0[9].y, r4.y
					add r4.z, -cb0[8].w, l(1.000000)
					dp3 r4.w, r3.xyzx, r2.xyzx
					add r4.w, r4.w, r4.w
					mad r5.xyz, r2.xyzx, -r4.wwww, r3.xyzx
					mul r6.xyz, r4.xxxx, cb0[2].xyzx
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r7.xyz, v4.wwww, cb3[2].xyzx
					  mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
					  mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
					  add r7.xyz, r7.xyzx, cb3[4].xyzx
					  mov r8.y, v3.w
					  mov r8.z, v4.w
					  mov r8.w, v5.w
					  movc r7.xyz, r3.wwww, r7.xyzx, r8.yzwy
					  add r7.xyz, r7.xyzx, -cb3[6].xyzx
					  mul r7.yzw, r7.xxyz, cb3[5].xxyz
					  mul r3.w, r7.y, l(0.250000)
					  mul r4.x, cb3[0].z, l(0.500000)
					  mad r4.w, -cb3[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.x
					  min r7.x, r4.w, r3.w
					  sample r8.xyzw, r7.xzwx, t5.xyzw, s1
					  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t5.xyzw, s1
					  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r7.xyzx, t5.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r2.xyzw
					  dp4 r8.y, r9.xyzw, r2.xyzw
					  dp4 r8.z, r7.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r8.x, cb1[39].xyzw, r2.xyzw
					  dp4 r8.y, cb1[40].xyzw, r2.xyzw
					  dp4 r8.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r7.xyz, r8.xyzx, v6.xyzx
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r7.xyz, r7.xyzx
					mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r7.xyz, r7.xyzx
					mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb2[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r8.xyz, r2.wwww, r5.xyzx
					  mov r9.x, v3.w
					  mov r9.y, v4.w
					  mov r9.z, v5.w
					  add r10.xyz, -r9.xyzx, cb2[0].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  add r11.xyz, -r9.xyzx, cb2[1].xyzx
					  div r11.xyz, r11.xyzx, r8.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r9.xyz, r9.xyzx, -cb2[2].xyzx
					  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
					else 
					  mov r8.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.z, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.z
					mul r2.w, r2.w, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t3.xyzw, s0, r2.w
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb2[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb2[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.x, cb2[1].w, l(0.999990)
					if_nz r4.x
					  lt r4.x, l(0.000000), cb2[6].w
					  if_nz r4.x
					    dp3 r4.x, r5.xyzx, r5.xyzx
					    rsq r4.x, r4.x
					    mul r10.xyz, r4.xxxx, r5.xyzx
					    mov r11.x, v3.w
					    mov r11.y, v4.w
					    mov r11.z, v5.w
					    add r12.xyz, -r11.xyzx, cb2[4].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    add r13.xyz, -r11.xyzx, cb2[5].xyzx
					    div r13.xyz, r13.xyzx, r10.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.x, r12.y, r12.x
					    min r4.x, r12.z, r4.x
					    add r11.xyz, r11.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r10.xyzx, r4.xxxx, r11.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r2.w
					  add r2.w, r5.w, l(-1.000000)
					  mad r2.w, cb2[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb2[7].x
					  mul r5.xyz, r5.xyzx, r2.wwww
					  mad r8.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r4.yyyy, r9.xyzx
					mad r8.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
					dp3 r1.w, r8.xyzx, r8.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r8.xyz, r1.wwww, r8.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
					dp3_sat r2.x, r2.xyzx, r8.xyzx
					dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.zzzz
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.z, r4.z
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.z, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mad r3.xzw, r7.xxyz, r4.yyyy, r3.xxzw
					mul r4.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r4.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r5.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t2.xyzw, s4
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.x, cb3[0].y, l(1.000000)
					  mul r4.yzw, v4.wwww, cb3[2].xxyz
					  mad r4.yzw, cb3[1].xxyz, v3.wwww, r4.yyzw
					  mad r4.yzw, cb3[3].xxyz, v5.wwww, r4.yyzw
					  add r4.yzw, r4.yyzw, cb3[4].xxyz
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r4.xxxx, r4.yzwy, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.x, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.x
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb1[46].xyzw
					sample r5.xyzw, v1.xyxx, t2.xyzw, s4
					add r4.y, -cb0[9].y, l(1.000000)
					mad r4.y, r5.y, cb0[9].y, r4.y
					add r4.z, -cb0[8].w, l(1.000000)
					dp3 r4.w, r3.xyzx, r2.xyzx
					add r4.w, r4.w, r4.w
					mad r5.xyz, r2.xyzx, -r4.wwww, r3.xyzx
					mul r6.xyz, r4.xxxx, cb0[2].xyzx
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r7.xyz, v4.wwww, cb3[2].xyzx
					  mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
					  mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
					  add r7.xyz, r7.xyzx, cb3[4].xyzx
					  mov r8.y, v3.w
					  mov r8.z, v4.w
					  mov r8.w, v5.w
					  movc r7.xyz, r3.wwww, r7.xyzx, r8.yzwy
					  add r7.xyz, r7.xyzx, -cb3[6].xyzx
					  mul r7.yzw, r7.xxyz, cb3[5].xxyz
					  mul r3.w, r7.y, l(0.250000)
					  mul r4.x, cb3[0].z, l(0.500000)
					  mad r4.w, -cb3[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.x
					  min r7.x, r4.w, r3.w
					  sample r8.xyzw, r7.xzwx, t5.xyzw, s1
					  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t5.xyzw, s1
					  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r7.xyzx, t5.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r2.xyzw
					  dp4 r8.y, r9.xyzw, r2.xyzw
					  dp4 r8.z, r7.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r8.x, cb1[39].xyzw, r2.xyzw
					  dp4 r8.y, cb1[40].xyzw, r2.xyzw
					  dp4 r8.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r7.xyz, r8.xyzx, v6.xyzx
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r7.xyz, r7.xyzx
					mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r7.xyz, r7.xyzx
					mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb2[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r8.xyz, r2.wwww, r5.xyzx
					  mov r9.x, v3.w
					  mov r9.y, v4.w
					  mov r9.z, v5.w
					  add r10.xyz, -r9.xyzx, cb2[0].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  add r11.xyz, -r9.xyzx, cb2[1].xyzx
					  div r11.xyz, r11.xyzx, r8.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r9.xyz, r9.xyzx, -cb2[2].xyzx
					  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
					else 
					  mov r8.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.z, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.z
					mul r2.w, r2.w, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t3.xyzw, s0, r2.w
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb2[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb2[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.x, cb2[1].w, l(0.999990)
					if_nz r4.x
					  lt r4.x, l(0.000000), cb2[6].w
					  if_nz r4.x
					    dp3 r4.x, r5.xyzx, r5.xyzx
					    rsq r4.x, r4.x
					    mul r10.xyz, r4.xxxx, r5.xyzx
					    mov r11.x, v3.w
					    mov r11.y, v4.w
					    mov r11.z, v5.w
					    add r12.xyz, -r11.xyzx, cb2[4].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    add r13.xyz, -r11.xyzx, cb2[5].xyzx
					    div r13.xyz, r13.xyzx, r10.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.x, r12.y, r12.x
					    min r4.x, r12.z, r4.x
					    add r11.xyz, r11.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r10.xyzx, r4.xxxx, r11.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r2.w
					  add r2.w, r5.w, l(-1.000000)
					  mad r2.w, cb2[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb2[7].x
					  mul r5.xyz, r5.xyzx, r2.wwww
					  mad r8.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r4.yyyy, r9.xyzx
					mad r8.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
					dp3 r1.w, r8.xyzx, r8.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r8.xyz, r1.wwww, r8.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
					dp3_sat r2.x, r2.xyzx, r8.xyzx
					dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.zzzz
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.z, r4.z
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.z, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mad r3.xzw, r7.xxyz, r4.yyyy, r3.xxzw
					mul r4.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r4.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r5.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.x, cb3[0].y, l(1.000000)
					  mul r4.yzw, v4.wwww, cb3[2].xxyz
					  mad r4.yzw, cb3[1].xxyz, v3.wwww, r4.yyzw
					  mad r4.yzw, cb3[3].xxyz, v5.wwww, r4.yyzw
					  add r4.yzw, r4.yyzw, cb3[4].xxyz
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r4.xxxx, r4.yzwy, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.x, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.x
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb1[46].xyzw
					sample r5.xyzw, v1.xyxx, t2.xyzw, s4
					add r4.y, -cb0[9].y, l(1.000000)
					mad r4.y, r5.y, cb0[9].y, r4.y
					add r4.z, -cb0[8].w, l(1.000000)
					dp3 r4.w, r3.xyzx, r2.xyzx
					add r4.w, r4.w, r4.w
					mad r5.xyz, r2.xyzx, -r4.wwww, r3.xyzx
					mul r6.xyz, r4.xxxx, cb0[2].xyzx
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r7.xyz, v4.wwww, cb3[2].xyzx
					  mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
					  mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
					  add r7.xyz, r7.xyzx, cb3[4].xyzx
					  mov r8.y, v3.w
					  mov r8.z, v4.w
					  mov r8.w, v5.w
					  movc r7.xyz, r3.wwww, r7.xyzx, r8.yzwy
					  add r7.xyz, r7.xyzx, -cb3[6].xyzx
					  mul r7.yzw, r7.xxyz, cb3[5].xxyz
					  mul r3.w, r7.y, l(0.250000)
					  mul r4.x, cb3[0].z, l(0.500000)
					  mad r4.w, -cb3[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.x
					  min r7.x, r4.w, r3.w
					  sample r8.xyzw, r7.xzwx, t6.xyzw, s1
					  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t6.xyzw, s1
					  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r7.xyzx, t6.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r2.xyzw
					  dp4 r8.y, r9.xyzw, r2.xyzw
					  dp4 r8.z, r7.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r8.x, cb1[39].xyzw, r2.xyzw
					  dp4 r8.y, cb1[40].xyzw, r2.xyzw
					  dp4 r8.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r7.xyz, r8.xyzx, v6.xyzx
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r7.xyz, r7.xyzx
					mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r7.xyz, r7.xyzx
					mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb2[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r8.xyz, r2.wwww, r5.xyzx
					  mov r9.x, v3.w
					  mov r9.y, v4.w
					  mov r9.z, v5.w
					  add r10.xyz, -r9.xyzx, cb2[0].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  add r11.xyz, -r9.xyzx, cb2[1].xyzx
					  div r11.xyz, r11.xyzx, r8.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r9.xyz, r9.xyzx, -cb2[2].xyzx
					  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
					else 
					  mov r8.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.z, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.z
					mul r2.w, r2.w, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t4.xyzw, s0, r2.w
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb2[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb2[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.x, cb2[1].w, l(0.999990)
					if_nz r4.x
					  lt r4.x, l(0.000000), cb2[6].w
					  if_nz r4.x
					    dp3 r4.x, r5.xyzx, r5.xyzx
					    rsq r4.x, r4.x
					    mul r10.xyz, r4.xxxx, r5.xyzx
					    mov r11.x, v3.w
					    mov r11.y, v4.w
					    mov r11.z, v5.w
					    add r12.xyz, -r11.xyzx, cb2[4].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    add r13.xyz, -r11.xyzx, cb2[5].xyzx
					    div r13.xyz, r13.xyzx, r10.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.x, r12.y, r12.x
					    min r4.x, r12.z, r4.x
					    add r11.xyz, r11.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r10.xyzx, r4.xxxx, r11.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r2.w
					  add r2.w, r5.w, l(-1.000000)
					  mad r2.w, cb2[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb2[7].x
					  mul r5.xyz, r5.xyzx, r2.wwww
					  mad r8.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r4.yyyy, r9.xyzx
					mad r8.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
					dp3 r1.w, r8.xyzx, r8.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r8.xyz, r1.wwww, r8.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
					dp3_sat r2.x, r2.xyzx, r8.xyzx
					dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.zzzz
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.z, r4.z
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.z, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mad r3.xzw, r7.xxyz, r4.yyyy, r3.xxzw
					mul r4.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r4.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r5.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s5
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.x, cb3[0].y, l(1.000000)
					  mul r4.yzw, v4.wwww, cb3[2].xxyz
					  mad r4.yzw, cb3[1].xxyz, v3.wwww, r4.yyzw
					  mad r4.yzw, cb3[3].xxyz, v5.wwww, r4.yyzw
					  add r4.yzw, r4.yyzw, cb3[4].xxyz
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r4.xxxx, r4.yzwy, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.x, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.x
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb1[46].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s3
					add r4.y, -cb0[9].y, l(1.000000)
					mad r4.y, r5.y, cb0[9].y, r4.y
					add r4.z, -cb0[8].w, l(1.000000)
					dp3 r4.w, r3.xyzx, r2.xyzx
					add r4.w, r4.w, r4.w
					mad r5.xyz, r2.xyzx, -r4.wwww, r3.xyzx
					mul r6.xyz, r4.xxxx, cb0[2].xyzx
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r7.xyz, v4.wwww, cb3[2].xyzx
					  mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
					  mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
					  add r7.xyz, r7.xyzx, cb3[4].xyzx
					  mov r8.y, v3.w
					  mov r8.z, v4.w
					  mov r8.w, v5.w
					  movc r7.xyz, r3.wwww, r7.xyzx, r8.yzwy
					  add r7.xyz, r7.xyzx, -cb3[6].xyzx
					  mul r7.yzw, r7.xxyz, cb3[5].xxyz
					  mul r3.w, r7.y, l(0.250000)
					  mul r4.x, cb3[0].z, l(0.500000)
					  mad r4.w, -cb3[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.x
					  min r7.x, r4.w, r3.w
					  sample r8.xyzw, r7.xzwx, t4.xyzw, s1
					  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t4.xyzw, s1
					  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r7.xyzx, t4.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r2.xyzw
					  dp4 r8.y, r9.xyzw, r2.xyzw
					  dp4 r8.z, r7.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r8.x, cb1[39].xyzw, r2.xyzw
					  dp4 r8.y, cb1[40].xyzw, r2.xyzw
					  dp4 r8.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r7.xyz, r8.xyzx, v6.xyzx
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r7.xyz, r7.xyzx
					mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r7.xyz, r7.xyzx
					mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb2[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r8.xyz, r2.wwww, r5.xyzx
					  mov r9.x, v3.w
					  mov r9.y, v4.w
					  mov r9.z, v5.w
					  add r10.xyz, -r9.xyzx, cb2[0].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  add r11.xyz, -r9.xyzx, cb2[1].xyzx
					  div r11.xyz, r11.xyzx, r8.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r9.xyz, r9.xyzx, -cb2[2].xyzx
					  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
					else 
					  mov r8.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.z, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.z
					mul r2.w, r2.w, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r2.w
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb2[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb2[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.x, cb2[1].w, l(0.999990)
					if_nz r4.x
					  lt r4.x, l(0.000000), cb2[6].w
					  if_nz r4.x
					    dp3 r4.x, r5.xyzx, r5.xyzx
					    rsq r4.x, r4.x
					    mul r10.xyz, r4.xxxx, r5.xyzx
					    mov r11.x, v3.w
					    mov r11.y, v4.w
					    mov r11.z, v5.w
					    add r12.xyz, -r11.xyzx, cb2[4].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    add r13.xyz, -r11.xyzx, cb2[5].xyzx
					    div r13.xyz, r13.xyzx, r10.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.x, r12.y, r12.x
					    min r4.x, r12.z, r4.x
					    add r11.xyz, r11.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r10.xyzx, r4.xxxx, r11.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, r2.w
					  add r2.w, r5.w, l(-1.000000)
					  mad r2.w, cb2[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb2[7].x
					  mul r5.xyz, r5.xyzx, r2.wwww
					  mad r8.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r4.yyyy, r9.xyzx
					mad r8.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
					dp3 r1.w, r8.xyzx, r8.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r8.xyz, r1.wwww, r8.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
					dp3_sat r2.x, r2.xyzx, r8.xyzx
					dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.zzzz
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.z, r4.z
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.z, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mad r3.xzw, r7.xxyz, r4.yyyy, r3.xxzw
					mul r4.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r4.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r5.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s5
					mul r1.x, cb0[9].z, l(0.500000)
					mad r1.x, r1.y, cb0[9].z, -r1.x
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					mad r0.xy, r1.xxxx, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r3.xyzw, r0.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r4.xyz, r0.wwww, v2.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v8.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v8.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v8.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v8.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r4.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
					sample r5.xyzw, r0.xyxx, t3.xyzw, s4
					add r0.x, -cb0[9].y, l(1.000000)
					mad r0.x, r5.y, cb0[9].y, r0.x
					add r0.y, -cb0[8].w, l(1.000000)
					dp3 r4.w, r4.xyzx, r3.xyzx
					add r4.w, r4.w, r4.w
					mad r5.xyz, r3.xyzx, -r4.wwww, r4.xyzx
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r7.xyz, v8.yyyy, cb3[2].xyzx
					  mad r7.xyz, cb3[1].xyzx, v8.xxxx, r7.xyzx
					  mad r7.xyz, cb3[3].xyzx, v8.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb3[4].xyzx
					  movc r7.xyz, r1.wwww, r7.xyzx, v8.xyzx
					  add r7.xyz, r7.xyzx, -cb3[6].xyzx
					  mul r7.yzw, r7.xxyz, cb3[5].xxyz
					  mul r1.w, r7.y, l(0.250000)
					  mul r2.w, cb3[0].z, l(0.500000)
					  mad r4.w, -cb3[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r7.x, r4.w, r1.w
					  sample r8.xyzw, r7.xzwx, t6.xyzw, s1
					  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t6.xyzw, s1
					  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r7.xyzx, t6.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r3.xyzw
					  dp4 r8.y, r9.xyzw, r3.xyzw
					  dp4 r8.z, r7.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r8.x, cb1[39].xyzw, r3.xyzw
					  dp4 r8.y, cb1[40].xyzw, r3.xyzw
					  dp4 r8.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r7.xyz, r8.xyzx, v6.xyzx
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r7.xyz, r7.xyzx
					mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r7.xyz, r7.xyzx
					mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb2[2].w
					if_nz r1.w
					  dp3 r1.w, r5.xyzx, r5.xyzx
					  rsq r1.w, r1.w
					  mul r8.xyz, r1.wwww, r5.xyzx
					  add r9.xyz, -v8.xyzx, cb2[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -v8.xyzx, cb2[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r1.w, r9.y, r9.x
					  min r1.w, r9.z, r1.w
					  add r9.xyz, v8.xyzx, -cb2[2].xyzx
					  mad r8.xyz, r8.xyzx, r1.wwww, r9.xyzx
					else 
					  mov r8.xyz, r5.xyzx
					endif 
					mad r1.w, -r0.y, l(0.700000), l(1.700000)
					mul r1.w, r0.y, r1.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t4.xyzw, s0, r1.w
					add r2.w, r8.w, l(-1.000000)
					mad r2.w, cb2[3].w, r2.w, l(1.000000)
					mul r2.w, r2.w, cb2[3].x
					mul r9.xyz, r8.xyzx, r2.wwww
					lt r3.w, cb2[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb2[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r10.xyz, r3.wwww, r5.xyzx
					    add r11.xyz, -v8.xyzx, cb2[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -v8.xyzx, cb2[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r3.w, r11.y, r11.x
					    min r3.w, r11.z, r3.w
					    add r11.xyz, v8.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r10.xyzx, r3.wwww, r11.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r1.w
					  add r1.w, r5.w, l(-1.000000)
					  mad r1.w, cb2[7].w, r1.w, l(1.000000)
					  mul r1.w, r1.w, cb2[7].x
					  mul r5.xyz, r5.xyzx, r1.wwww
					  mad r8.xyz, r2.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r0.xxxx, r9.xyzx
					mad r8.xyz, -v2.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r8.xyzx, r8.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r8.xyz, r0.wwww, r8.xyzx
					dp3 r0.w, r3.xyzx, -r4.xyzx
					dp3_sat r1.w, r3.xyzx, cb1[0].xyzx
					dp3_sat r2.w, r3.xyzx, r8.xyzx
					dp3_sat r3.x, cb1[0].xyzx, r8.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r0.yyyy
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r1.w, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.w|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r1.w, r3.y
					mul r3.z, r0.y, r0.y
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.w|, r4.x, r3.z
					mad r4.x, r1.w, r4.x, r3.z
					mul r0.w, |r0.w|, r4.x
					mad r0.w, r1.w, r4.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r4.x, r3.z, r3.z
					mad r4.y, r2.w, r4.x, -r2.w
					mad r2.w, r4.y, r2.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r2.w, r2.w, r2.w, l(0.000000)
					div r2.w, r4.x, r2.w
					mul r0.w, r0.w, r2.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r1.w, r0.w
					mul r1.w, r3.z, l(0.280000)
					mad r0.y, -r1.w, r0.y, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					add_sat r0.z, r0.z, cb0[8].w
					mul r4.xyz, r3.yyyy, r6.xyzx
					mad r4.xyz, r7.xyzx, r0.xxxx, r4.xyzx
					mul r6.xyz, r6.xyzx, r0.wwww
					add r0.x, -r3.x, l(1.000000)
					mul r0.w, r0.x, r0.x
					mul r0.w, r0.w, r0.w
					mul r0.x, r0.x, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.xxxx, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.xyw, r5.xyxz, r0.yyyy
					add r3.xyz, -r1.xyzx, r0.zzzz
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad o0.xyz, r0.xywx, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					eq r0.z, cb3[0].x, l(1.000000)
					if_nz r0.z
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  mov r6.y, v3.w
					  mov r6.z, v4.w
					  mov r6.w, v5.w
					  movc r5.xyz, r1.wwww, r5.xyzx, r6.yzwy
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					sample r5.xyzw, v1.xyxx, t2.xyzw, s4
					add r2.w, -cb0[9].y, l(1.000000)
					mad r2.w, r5.y, cb0[9].y, r2.w
					mad r4.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r5.x, r4.xyzx, r3.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r3.xyzx, -r5.xxxx, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					if_nz r0.z
					  eq r0.z, cb3[0].y, l(1.000000)
					  mul r7.xyz, v4.wwww, cb3[2].xyzx
					  mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
					  mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
					  add r7.xyz, r7.xyzx, cb3[4].xyzx
					  mov r8.y, v3.w
					  mov r8.z, v4.w
					  mov r8.w, v5.w
					  movc r7.xyz, r0.zzzz, r7.xyzx, r8.yzwy
					  add r7.xyz, r7.xyzx, -cb3[6].xyzx
					  mul r7.yzw, r7.xxyz, cb3[5].xxyz
					  mul r0.z, r7.y, l(0.250000)
					  mul r1.w, cb3[0].z, l(0.500000)
					  mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
					  max r0.z, r0.z, r1.w
					  min r7.x, r5.w, r0.z
					  sample r8.xyzw, r7.xzwx, t5.xyzw, s1
					  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t5.xyzw, s1
					  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r7.xyzx, t5.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r3.xyzw
					  dp4 r8.y, r9.xyzw, r3.xyzw
					  dp4 r8.z, r7.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r8.x, cb1[39].xyzw, r3.xyzw
					  dp4 r8.y, cb1[40].xyzw, r3.xyzw
					  dp4 r8.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r7.xyz, r8.xyzx, v6.xyzx
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r7.xyz, r7.xyzx
					mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r7.xyz, r7.xyzx
					mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r0.z, l(0.000000), cb2[2].w
					if_nz r0.z
					  dp3 r0.z, r5.xyzx, r5.xyzx
					  rsq r0.z, r0.z
					  mul r8.xyz, r0.zzzz, r5.xyzx
					  mov r9.x, v3.w
					  mov r9.y, v4.w
					  mov r9.z, v5.w
					  add r10.xyz, -r9.xyzx, cb2[0].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  add r11.xyz, -r9.xyzx, cb2[1].xyzx
					  div r11.xyz, r11.xyzx, r8.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r0.z, r10.y, r10.x
					  min r0.z, r10.z, r0.z
					  add r9.xyz, r9.xyzx, -cb2[2].xyzx
					  mad r8.xyz, r8.xyzx, r0.zzzz, r9.xyzx
					else 
					  mov r8.xyz, r5.xyzx
					endif 
					mad r0.z, -r4.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r4.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t3.xyzw, s0, r0.z
					add r1.w, r8.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r9.xyz, r8.xyzx, r1.wwww
					lt r3.w, cb2[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb2[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r10.xyz, r3.wwww, r5.xyzx
					    mov r11.x, v3.w
					    mov r11.y, v4.w
					    mov r11.z, v5.w
					    add r12.xyz, -r11.xyzx, cb2[4].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    add r13.xyz, -r11.xyzx, cb2[5].xyzx
					    div r13.xyz, r13.xyzx, r10.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r3.w, r12.y, r12.x
					    min r3.w, r12.z, r3.w
					    add r11.xyz, r11.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r10.xyzx, r3.wwww, r11.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb2[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb2[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r8.xyz, r1.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r2.wwww, r9.xyzx
					mad r8.xyz, -v2.xyzx, r0.yyyy, cb1[0].xyzx
					dp3 r0.y, r8.xyzx, r8.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r8.xyz, r0.yyyy, r8.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					dp3_sat r1.w, r3.xyzx, r8.xyzx
					dp3_sat r3.x, cb1[0].xyzx, r8.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r4.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r4.w, r4.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r4.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					add r0.x, -r0.x, l(1.000000)
					mad_sat r0.x, r0.w, cb0[9].x, r0.x
					mul r4.xyz, r3.yyyy, r6.xyzx
					mad r4.xyz, r7.xyzx, r2.wwww, r4.xyzx
					mul r6.xyz, r6.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad o0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					eq r0.z, cb3[0].x, l(1.000000)
					if_nz r0.z
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  mov r6.y, v3.w
					  mov r6.z, v4.w
					  mov r6.w, v5.w
					  movc r5.xyz, r1.wwww, r5.xyzx, r6.yzwy
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					sample r5.xyzw, v1.xyxx, t2.xyzw, s4
					add r2.w, -cb0[9].y, l(1.000000)
					mad r2.w, r5.y, cb0[9].y, r2.w
					mad r4.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r5.x, r4.xyzx, r3.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r3.xyzx, -r5.xxxx, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					if_nz r0.z
					  eq r0.z, cb3[0].y, l(1.000000)
					  mul r7.xyz, v4.wwww, cb3[2].xyzx
					  mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
					  mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
					  add r7.xyz, r7.xyzx, cb3[4].xyzx
					  mov r8.y, v3.w
					  mov r8.z, v4.w
					  mov r8.w, v5.w
					  movc r7.xyz, r0.zzzz, r7.xyzx, r8.yzwy
					  add r7.xyz, r7.xyzx, -cb3[6].xyzx
					  mul r7.yzw, r7.xxyz, cb3[5].xxyz
					  mul r0.z, r7.y, l(0.250000)
					  mul r1.w, cb3[0].z, l(0.500000)
					  mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
					  max r0.z, r0.z, r1.w
					  min r7.x, r5.w, r0.z
					  sample r8.xyzw, r7.xzwx, t6.xyzw, s1
					  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t6.xyzw, s1
					  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r7.xyzx, t6.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r3.xyzw
					  dp4 r8.y, r9.xyzw, r3.xyzw
					  dp4 r8.z, r7.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r8.x, cb1[39].xyzw, r3.xyzw
					  dp4 r8.y, cb1[40].xyzw, r3.xyzw
					  dp4 r8.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r7.xyz, r8.xyzx, v6.xyzx
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r7.xyz, r7.xyzx
					mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r7.xyz, r7.xyzx
					mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r0.z, l(0.000000), cb2[2].w
					if_nz r0.z
					  dp3 r0.z, r5.xyzx, r5.xyzx
					  rsq r0.z, r0.z
					  mul r8.xyz, r0.zzzz, r5.xyzx
					  mov r9.x, v3.w
					  mov r9.y, v4.w
					  mov r9.z, v5.w
					  add r10.xyz, -r9.xyzx, cb2[0].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  add r11.xyz, -r9.xyzx, cb2[1].xyzx
					  div r11.xyz, r11.xyzx, r8.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r0.z, r10.y, r10.x
					  min r0.z, r10.z, r0.z
					  add r9.xyz, r9.xyzx, -cb2[2].xyzx
					  mad r8.xyz, r8.xyzx, r0.zzzz, r9.xyzx
					else 
					  mov r8.xyz, r5.xyzx
					endif 
					mad r0.z, -r4.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r4.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t4.xyzw, s0, r0.z
					add r1.w, r8.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r9.xyz, r8.xyzx, r1.wwww
					lt r3.w, cb2[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb2[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r10.xyz, r3.wwww, r5.xyzx
					    mov r11.x, v3.w
					    mov r11.y, v4.w
					    mov r11.z, v5.w
					    add r12.xyz, -r11.xyzx, cb2[4].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    add r13.xyz, -r11.xyzx, cb2[5].xyzx
					    div r13.xyz, r13.xyzx, r10.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r3.w, r12.y, r12.x
					    min r3.w, r12.z, r3.w
					    add r11.xyz, r11.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r10.xyzx, r3.wwww, r11.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb2[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb2[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r8.xyz, r1.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r2.wwww, r9.xyzx
					mad r8.xyz, -v2.xyzx, r0.yyyy, cb1[0].xyzx
					dp3 r0.y, r8.xyzx, r8.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r8.xyz, r0.yyyy, r8.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					dp3_sat r1.w, r3.xyzx, r8.xyzx
					dp3_sat r3.x, cb1[0].xyzx, r8.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r4.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r4.w, r4.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r4.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					add r0.x, -r0.x, l(1.000000)
					mad_sat r0.x, r0.w, cb0[9].x, r0.x
					mul r4.xyz, r3.yyyy, r6.xyzx
					mad r4.xyz, r7.xyzx, r2.wwww, r4.xyzx
					mul r6.xyz, r6.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad r0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s5
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r0.yz, r0.yyzy, cb0[8].xxxx
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r0.y, r3.xyzx, r3.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					eq r0.z, cb3[0].x, l(1.000000)
					if_nz r0.z
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  mov r6.y, v3.w
					  mov r6.z, v4.w
					  mov r6.w, v5.w
					  movc r5.xyz, r1.wwww, r5.xyzx, r6.yzwy
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					sample r5.xyzw, v1.xyxx, t3.xyzw, s5
					add r2.w, -cb0[9].y, l(1.000000)
					mad r2.w, r5.y, cb0[9].y, r2.w
					mad r4.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r5.x, r4.xyzx, r3.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r3.xyzx, -r5.xxxx, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					if_nz r0.z
					  eq r0.z, cb3[0].y, l(1.000000)
					  mul r7.xyz, v4.wwww, cb3[2].xyzx
					  mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
					  mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
					  add r7.xyz, r7.xyzx, cb3[4].xyzx
					  mov r8.y, v3.w
					  mov r8.z, v4.w
					  mov r8.w, v5.w
					  movc r7.xyz, r0.zzzz, r7.xyzx, r8.yzwy
					  add r7.xyz, r7.xyzx, -cb3[6].xyzx
					  mul r7.yzw, r7.xxyz, cb3[5].xxyz
					  mul r0.z, r7.y, l(0.250000)
					  mul r1.w, cb3[0].z, l(0.500000)
					  mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
					  max r0.z, r0.z, r1.w
					  min r7.x, r5.w, r0.z
					  sample r8.xyzw, r7.xzwx, t6.xyzw, s1
					  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t6.xyzw, s1
					  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r7.xyzx, t6.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r3.xyzw
					  dp4 r8.y, r9.xyzw, r3.xyzw
					  dp4 r8.z, r7.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r8.x, cb1[39].xyzw, r3.xyzw
					  dp4 r8.y, cb1[40].xyzw, r3.xyzw
					  dp4 r8.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r7.xyz, r8.xyzx, v6.xyzx
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r7.xyz, r7.xyzx
					mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r7.xyz, r7.xyzx
					mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r0.z, l(0.000000), cb2[2].w
					if_nz r0.z
					  dp3 r0.z, r5.xyzx, r5.xyzx
					  rsq r0.z, r0.z
					  mul r8.xyz, r0.zzzz, r5.xyzx
					  mov r9.x, v3.w
					  mov r9.y, v4.w
					  mov r9.z, v5.w
					  add r10.xyz, -r9.xyzx, cb2[0].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  add r11.xyz, -r9.xyzx, cb2[1].xyzx
					  div r11.xyz, r11.xyzx, r8.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r0.z, r10.y, r10.x
					  min r0.z, r10.z, r0.z
					  add r9.xyz, r9.xyzx, -cb2[2].xyzx
					  mad r8.xyz, r8.xyzx, r0.zzzz, r9.xyzx
					else 
					  mov r8.xyz, r5.xyzx
					endif 
					mad r0.z, -r4.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r4.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t4.xyzw, s0, r0.z
					add r1.w, r8.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r9.xyz, r8.xyzx, r1.wwww
					lt r3.w, cb2[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb2[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r10.xyz, r3.wwww, r5.xyzx
					    mov r11.x, v3.w
					    mov r11.y, v4.w
					    mov r11.z, v5.w
					    add r12.xyz, -r11.xyzx, cb2[4].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    add r13.xyz, -r11.xyzx, cb2[5].xyzx
					    div r13.xyz, r13.xyzx, r10.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r3.w, r12.y, r12.x
					    min r3.w, r12.z, r3.w
					    add r11.xyz, r11.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r10.xyzx, r3.wwww, r11.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb2[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb2[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r8.xyz, r1.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r2.wwww, r9.xyzx
					mad r8.xyz, -v2.xyzx, r0.yyyy, cb1[0].xyzx
					dp3 r0.y, r8.xyzx, r8.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r8.xyz, r0.yyyy, r8.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					dp3_sat r1.w, r3.xyzx, r8.xyzx
					dp3_sat r3.x, cb1[0].xyzx, r8.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r4.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r4.w, r4.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r4.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r6.xyzx
					mad r4.xyz, r7.xyzx, r2.wwww, r4.xyzx
					mul r6.xyz, r6.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad o0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r0.yz, r0.yyzy, cb0[8].xxxx
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r0.y, r3.xyzx, r3.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					eq r0.z, cb3[0].x, l(1.000000)
					if_nz r0.z
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  mov r6.y, v3.w
					  mov r6.z, v4.w
					  mov r6.w, v5.w
					  movc r5.xyz, r1.wwww, r5.xyzx, r6.yzwy
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t7.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					sample r5.xyzw, v1.xyxx, t3.xyzw, s5
					add r2.w, -cb0[9].y, l(1.000000)
					mad r2.w, r5.y, cb0[9].y, r2.w
					mad r4.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r5.x, r4.xyzx, r3.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r3.xyzx, -r5.xxxx, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					if_nz r0.z
					  eq r0.z, cb3[0].y, l(1.000000)
					  mul r7.xyz, v4.wwww, cb3[2].xyzx
					  mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
					  mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
					  add r7.xyz, r7.xyzx, cb3[4].xyzx
					  mov r8.y, v3.w
					  mov r8.z, v4.w
					  mov r8.w, v5.w
					  movc r7.xyz, r0.zzzz, r7.xyzx, r8.yzwy
					  add r7.xyz, r7.xyzx, -cb3[6].xyzx
					  mul r7.yzw, r7.xxyz, cb3[5].xxyz
					  mul r0.z, r7.y, l(0.250000)
					  mul r1.w, cb3[0].z, l(0.500000)
					  mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
					  max r0.z, r0.z, r1.w
					  min r7.x, r5.w, r0.z
					  sample r8.xyzw, r7.xzwx, t7.xyzw, s1
					  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t7.xyzw, s1
					  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r7.xyzx, t7.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r3.xyzw
					  dp4 r8.y, r9.xyzw, r3.xyzw
					  dp4 r8.z, r7.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r8.x, cb1[39].xyzw, r3.xyzw
					  dp4 r8.y, cb1[40].xyzw, r3.xyzw
					  dp4 r8.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r7.xyz, r8.xyzx, v6.xyzx
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r7.xyz, r7.xyzx
					mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r7.xyz, r7.xyzx
					mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r0.z, l(0.000000), cb2[2].w
					if_nz r0.z
					  dp3 r0.z, r5.xyzx, r5.xyzx
					  rsq r0.z, r0.z
					  mul r8.xyz, r0.zzzz, r5.xyzx
					  mov r9.x, v3.w
					  mov r9.y, v4.w
					  mov r9.z, v5.w
					  add r10.xyz, -r9.xyzx, cb2[0].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  add r11.xyz, -r9.xyzx, cb2[1].xyzx
					  div r11.xyz, r11.xyzx, r8.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r0.z, r10.y, r10.x
					  min r0.z, r10.z, r0.z
					  add r9.xyz, r9.xyzx, -cb2[2].xyzx
					  mad r8.xyz, r8.xyzx, r0.zzzz, r9.xyzx
					else 
					  mov r8.xyz, r5.xyzx
					endif 
					mad r0.z, -r4.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r4.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t5.xyzw, s0, r0.z
					add r1.w, r8.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r9.xyz, r8.xyzx, r1.wwww
					lt r3.w, cb2[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb2[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r10.xyz, r3.wwww, r5.xyzx
					    mov r11.x, v3.w
					    mov r11.y, v4.w
					    mov r11.z, v5.w
					    add r12.xyz, -r11.xyzx, cb2[4].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    add r13.xyz, -r11.xyzx, cb2[5].xyzx
					    div r13.xyz, r13.xyzx, r10.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r3.w, r12.y, r12.x
					    min r3.w, r12.z, r3.w
					    add r11.xyz, r11.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r10.xyzx, r3.wwww, r11.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t6.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb2[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb2[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r8.xyz, r1.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r2.wwww, r9.xyzx
					mad r8.xyz, -v2.xyzx, r0.yyyy, cb1[0].xyzx
					dp3 r0.y, r8.xyzx, r8.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r8.xyz, r0.yyyy, r8.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					dp3_sat r1.w, r3.xyzx, r8.xyzx
					dp3_sat r3.x, cb1[0].xyzx, r8.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r4.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r4.w, r4.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r4.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r6.xyzx
					mad r4.xyz, r7.xyzx, r2.wwww, r4.xyzx
					mul r6.xyz, r6.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad r0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s6
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v2.xyzx
					eq r4.x, cb3[0].x, l(1.000000)
					if_nz r4.x
					  eq r4.y, cb3[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  mov r6.y, v3.w
					  mov r6.z, v4.w
					  mov r6.w, v5.w
					  movc r4.yzw, r4.yyyy, r5.xxyz, r6.yyzw
					  add r4.yzw, r4.yyzw, -cb3[6].xxyz
					  mul r5.yzw, r4.yyzw, cb3[5].xxyz
					  mad r4.y, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r4.z, r4.y
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.y, r5.xyzw, cb1[46].xyzw
					sample r5.xyzw, v1.xyxx, t3.xyzw, s5
					add r4.z, -cb0[9].y, l(1.000000)
					mad r4.z, r5.y, cb0[9].y, r4.z
					mad r4.w, -r2.w, cb0[9].x, l(1.000000)
					dp3 r5.x, r2.xyzx, r3.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r3.xyzx, -r5.xxxx, r2.xyzx
					mul r6.xyz, r4.yyyy, cb0[2].xyzx
					if_nz r4.x
					  eq r4.x, cb3[0].y, l(1.000000)
					  mul r7.xyz, v4.wwww, cb3[2].xyzx
					  mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
					  mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
					  add r7.xyz, r7.xyzx, cb3[4].xyzx
					  mov r8.y, v3.w
					  mov r8.z, v4.w
					  mov r8.w, v5.w
					  movc r7.xyz, r4.xxxx, r7.xyzx, r8.yzwy
					  add r7.xyz, r7.xyzx, -cb3[6].xyzx
					  mul r7.yzw, r7.xxyz, cb3[5].xxyz
					  mul r4.x, r7.y, l(0.250000)
					  mul r4.y, cb3[0].z, l(0.500000)
					  mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
					  max r4.x, r4.y, r4.x
					  min r7.x, r5.w, r4.x
					  sample r8.xyzw, r7.xzwx, t6.xyzw, s1
					  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t6.xyzw, s1
					  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r7.xyzx, t6.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r3.xyzw
					  dp4 r8.y, r9.xyzw, r3.xyzw
					  dp4 r8.z, r7.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r8.x, cb1[39].xyzw, r3.xyzw
					  dp4 r8.y, cb1[40].xyzw, r3.xyzw
					  dp4 r8.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r7.xyz, r8.xyzx, v6.xyzx
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r7.xyz, r7.xyzx
					mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r7.xyz, r7.xyzx
					mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r3.w, l(0.000000), cb2[2].w
					if_nz r3.w
					  dp3 r3.w, r5.xyzx, r5.xyzx
					  rsq r3.w, r3.w
					  mul r8.xyz, r3.wwww, r5.xyzx
					  mov r9.x, v3.w
					  mov r9.y, v4.w
					  mov r9.z, v5.w
					  add r10.xyz, -r9.xyzx, cb2[0].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  add r11.xyz, -r9.xyzx, cb2[1].xyzx
					  div r11.xyz, r11.xyzx, r8.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r3.w, r10.y, r10.x
					  min r3.w, r10.z, r3.w
					  add r9.xyz, r9.xyzx, -cb2[2].xyzx
					  mad r8.xyz, r8.xyzx, r3.wwww, r9.xyzx
					else 
					  mov r8.xyz, r5.xyzx
					endif 
					mad r3.w, -r4.w, l(0.700000), l(1.700000)
					mul r3.w, r3.w, r4.w
					mul r3.w, r3.w, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t4.xyzw, s0, r3.w
					add r4.x, r8.w, l(-1.000000)
					mad r4.x, cb2[3].w, r4.x, l(1.000000)
					mul r4.x, r4.x, cb2[3].x
					mul r9.xyz, r8.xyzx, r4.xxxx
					lt r4.y, cb2[1].w, l(0.999990)
					if_nz r4.y
					  lt r4.y, l(0.000000), cb2[6].w
					  if_nz r4.y
					    dp3 r4.y, r5.xyzx, r5.xyzx
					    rsq r4.y, r4.y
					    mul r10.xyz, r4.yyyy, r5.xyzx
					    mov r11.x, v3.w
					    mov r11.y, v4.w
					    mov r11.z, v5.w
					    add r12.xyz, -r11.xyzx, cb2[4].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    add r13.xyz, -r11.xyzx, cb2[5].xyzx
					    div r13.xyz, r13.xyzx, r10.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.y, r12.y, r12.x
					    min r4.y, r12.z, r4.y
					    add r11.xyz, r11.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r10.xyzx, r4.yyyy, r11.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r3.w
					  add r3.w, r5.w, l(-1.000000)
					  mad r3.w, cb2[7].w, r3.w, l(1.000000)
					  mul r3.w, r3.w, cb2[7].x
					  mul r5.xyz, r5.xyzx, r3.wwww
					  mad r8.xyz, r4.xxxx, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r4.zzzz, r9.xyzx
					mad r8.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
					dp3 r1.w, r8.xyzx, r8.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r8.xyz, r1.wwww, r8.xyzx
					dp3 r1.w, r3.xyzx, -r2.xyzx
					dp3_sat r2.x, r3.xyzx, cb1[0].xyzx
					dp3_sat r2.y, r3.xyzx, r8.xyzx
					dp3_sat r2.z, cb1[0].xyzx, r8.xyzx
					mul r3.x, r2.z, r2.z
					dp2 r3.x, r3.xxxx, r4.wwww
					add r3.x, r3.x, l(-0.500000)
					add r3.y, -r2.x, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r3.y, r3.x, r3.y, l(1.000000)
					add r3.z, -|r1.w|, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.x, r3.x, r3.z, l(1.000000)
					mul r3.x, r3.x, r3.y
					mul r3.x, r2.x, r3.x
					mul r3.y, r4.w, r4.w
					max r3.y, r3.y, l(0.002000)
					add r3.w, -r3.y, l(1.000000)
					mad r4.x, |r1.w|, r3.w, r3.y
					mad r3.w, r2.x, r3.w, r3.y
					mul r1.w, |r1.w|, r3.w
					mad r1.w, r2.x, r4.x, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.w, r3.y, r3.y
					mad r4.x, r2.y, r3.w, -r2.y
					mad r2.y, r4.x, r2.y, l(1.000000)
					mul r3.w, r3.w, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r3.w, r2.y
					mul r1.w, r1.w, r2.y
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.x, r1.w
					mul r2.x, r3.y, l(0.280000)
					mad r2.x, -r2.x, r4.w, l(1.000000)
					dp3 r2.y, r0.xyzx, r0.xyzx
					ne r2.y, r2.y, l(0.000000)
					and r2.y, r2.y, l(0x3f800000)
					mul r1.w, r1.w, r2.y
					mad r0.w, r2.w, cb0[9].x, -r0.w
					add_sat r0.w, r0.w, l(1.000000)
					mul r3.xyw, r3.xxxx, r6.xyxz
					mad r3.xyw, r7.xyxz, r4.zzzz, r3.xyxw
					mul r4.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.z, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r4.xxyz
					mad r1.xyz, r1.xyzx, r3.xywx, r2.yzwy
					mul r2.xyz, r5.xyzx, r2.xxxx
					add r3.xyw, -r0.xyxz, r0.wwww
					mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s6
					mul r1.x, cb0[9].z, l(0.500000)
					mad r1.x, r1.y, cb0[9].z, -r1.x
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					mad r0.xy, r1.xxxx, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s4
					sample r2.xyzw, r0.xyxx, t1.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r3.xyzw, r0.xyxx, t3.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r4.xyz, r0.wwww, v2.xyzx
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r4.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v8.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v8.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v8.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r4.wwww, r5.xyzx, v8.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r4.w, r5.y, l(0.250000), l(0.750000)
					  mad r5.y, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r4.w, r5.y
					  sample r5.xyzw, r5.xzwx, t7.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.w, r5.xyzw, cb1[46].xyzw
					sample r5.xyzw, r0.xyxx, t4.xyzw, s5
					add r0.x, -cb0[9].y, l(1.000000)
					mad r0.x, r5.y, cb0[9].y, r0.x
					mad r0.y, -r1.w, cb0[9].x, l(1.000000)
					dp3 r5.x, r4.xyzx, r3.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r3.xyzx, -r5.xxxx, r4.xyzx
					mul r6.xyz, r4.wwww, cb0[2].xyzx
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r7.xyz, v8.yyyy, cb3[2].xyzx
					  mad r7.xyz, cb3[1].xyzx, v8.xxxx, r7.xyzx
					  mad r7.xyz, cb3[3].xyzx, v8.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb3[4].xyzx
					  movc r7.xyz, r2.wwww, r7.xyzx, v8.xyzx
					  add r7.xyz, r7.xyzx, -cb3[6].xyzx
					  mul r7.yzw, r7.xxyz, cb3[5].xxyz
					  mul r2.w, r7.y, l(0.250000)
					  mul r4.w, cb3[0].z, l(0.500000)
					  mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
					  max r2.w, r2.w, r4.w
					  min r7.x, r5.w, r2.w
					  sample r8.xyzw, r7.xzwx, t7.xyzw, s1
					  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t7.xyzw, s1
					  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r7.xyzx, t7.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r3.xyzw
					  dp4 r8.y, r9.xyzw, r3.xyzw
					  dp4 r8.z, r7.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r8.x, cb1[39].xyzw, r3.xyzw
					  dp4 r8.y, cb1[40].xyzw, r3.xyzw
					  dp4 r8.z, cb1[41].xyzw, r3.xyzw
					endif 
					add r7.xyz, r8.xyzx, v6.xyzx
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r7.xyz, r7.xyzx
					mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r7.xyz, r7.xyzx
					mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb2[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r8.xyz, r2.wwww, r5.xyzx
					  add r9.xyz, -v8.xyzx, cb2[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -v8.xyzx, cb2[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r2.w, r9.y, r9.x
					  min r2.w, r9.z, r2.w
					  add r9.xyz, v8.xyzx, -cb2[2].xyzx
					  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
					else 
					  mov r8.xyz, r5.xyzx
					endif 
					mad r2.w, -r0.y, l(0.700000), l(1.700000)
					mul r2.w, r0.y, r2.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t5.xyzw, s0, r2.w
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb2[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb2[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.w, cb2[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb2[6].w
					  if_nz r4.w
					    dp3 r4.w, r5.xyzx, r5.xyzx
					    rsq r4.w, r4.w
					    mul r10.xyz, r4.wwww, r5.xyzx
					    add r11.xyz, -v8.xyzx, cb2[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -v8.xyzx, cb2[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r11.xyz, v8.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r10.xyzx, r4.wwww, r11.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t6.xyzw, s0, r2.w
					  add r2.w, r5.w, l(-1.000000)
					  mad r2.w, cb2[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb2[7].x
					  mul r5.xyz, r5.xyzx, r2.wwww
					  mad r8.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r0.xxxx, r9.xyzx
					mad r8.xyz, -v2.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.w, r8.xyzx, r8.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r8.xyz, r0.wwww, r8.xyzx
					dp3 r0.w, r3.xyzx, -r4.xyzx
					dp3_sat r2.w, r3.xyzx, cb1[0].xyzx
					dp3_sat r3.x, r3.xyzx, r8.xyzx
					dp3_sat r3.y, cb1[0].xyzx, r8.xyzx
					mul r3.z, r3.y, r3.y
					dp2 r3.z, r3.zzzz, r0.yyyy
					add r3.z, r3.z, l(-0.500000)
					add r3.w, -r2.w, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.w, r3.z, r3.w, l(1.000000)
					add r4.x, -|r0.w|, l(1.000000)
					mul r4.y, r4.x, r4.x
					mul r4.y, r4.y, r4.y
					mul r4.x, r4.x, r4.y
					mad r3.z, r3.z, r4.x, l(1.000000)
					mul r3.z, r3.z, r3.w
					mul r3.z, r2.w, r3.z
					mul r3.w, r0.y, r0.y
					max r3.w, r3.w, l(0.002000)
					add r4.y, -r3.w, l(1.000000)
					mad r4.z, |r0.w|, r4.y, r3.w
					mad r4.y, r2.w, r4.y, r3.w
					mul r0.w, |r0.w|, r4.y
					mad r0.w, r2.w, r4.z, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r4.y, r3.w, r3.w
					mad r4.z, r3.x, r4.y, -r3.x
					mad r3.x, r4.z, r3.x, l(1.000000)
					mul r4.y, r4.y, l(0.318310)
					mad r3.x, r3.x, r3.x, l(0.000000)
					div r3.x, r4.y, r3.x
					mul r0.w, r0.w, r3.x
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					mul r2.w, r3.w, l(0.280000)
					mad r0.y, -r2.w, r0.y, l(1.000000)
					dp3 r2.w, r2.xyzx, r2.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r0.w, r0.w, r2.w
					mad r0.z, r1.w, cb0[9].x, -r0.z
					add_sat r0.z, r0.z, l(1.000000)
					mul r3.xzw, r3.zzzz, r6.xxyz
					mad r3.xzw, r7.xxyz, r0.xxxx, r3.xxzw
					mul r4.yzw, r6.xxyz, r0.wwww
					add r0.x, -r3.y, l(1.000000)
					mul r0.w, r0.x, r0.x
					mul r0.w, r0.w, r0.w
					mul r0.x, r0.x, r0.w
					add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r6.xyz, r6.xyzx, r0.xxxx, r2.xyzx
					mul r4.yzw, r4.yyzw, r6.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r4.yzwy
					mul r0.xyw, r5.xyxz, r0.yyyy
					add r3.xyz, -r2.xyzx, r0.zzzz
					mad r2.xyz, r4.xxxx, r3.xyzx, r2.xyzx
					mad o0.xyz, r0.xywx, r2.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.x, cb3[0].y, l(1.000000)
					  mul r4.yzw, v4.wwww, cb3[2].xxyz
					  mad r4.yzw, cb3[1].xxyz, v3.wwww, r4.yyzw
					  mad r4.yzw, cb3[3].xxyz, v5.wwww, r4.yyzw
					  add r4.yzw, r4.yyzw, cb3[4].xxyz
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r4.xxxx, r4.yzwy, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.x, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.x
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb1[46].xyzw
					sample r5.xyzw, v1.xyxx, t1.xyzw, s3
					add r4.y, -cb0[9].y, l(1.000000)
					mad r4.y, r5.y, cb0[9].y, r4.y
					add r4.z, -cb0[8].w, l(1.000000)
					dp3 r4.w, r3.xyzx, r2.xyzx
					add r4.w, r4.w, r4.w
					mad r5.xyz, r2.xyzx, -r4.wwww, r3.xyzx
					mul r6.xyz, r4.xxxx, cb0[2].xyzx
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r7.xyz, v4.wwww, cb3[2].xyzx
					  mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
					  mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
					  add r7.xyz, r7.xyzx, cb3[4].xyzx
					  mov r8.y, v3.w
					  mov r8.z, v4.w
					  mov r8.w, v5.w
					  movc r7.xyz, r3.wwww, r7.xyzx, r8.yzwy
					  add r7.xyz, r7.xyzx, -cb3[6].xyzx
					  mul r7.yzw, r7.xxyz, cb3[5].xxyz
					  mul r3.w, r7.y, l(0.250000)
					  mul r4.x, cb3[0].z, l(0.500000)
					  mad r4.w, -cb3[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.x
					  min r7.x, r4.w, r3.w
					  sample r8.xyzw, r7.xzwx, t4.xyzw, s1
					  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t4.xyzw, s1
					  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r7.xyzx, t4.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r2.xyzw
					  dp4 r8.y, r9.xyzw, r2.xyzw
					  dp4 r8.z, r7.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r8.x, cb1[39].xyzw, r2.xyzw
					  dp4 r8.y, cb1[40].xyzw, r2.xyzw
					  dp4 r8.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r7.xyz, r8.xyzx, v6.xyzx
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r7.xyz, r7.xyzx
					mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r7.xyz, r7.xyzx
					mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb2[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r8.xyz, r2.wwww, r5.xyzx
					  mov r9.x, v3.w
					  mov r9.y, v4.w
					  mov r9.z, v5.w
					  add r10.xyz, -r9.xyzx, cb2[0].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  add r11.xyz, -r9.xyzx, cb2[1].xyzx
					  div r11.xyz, r11.xyzx, r8.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r9.xyz, r9.xyzx, -cb2[2].xyzx
					  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
					else 
					  mov r8.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.z, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.z
					mul r2.w, r2.w, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r2.w
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb2[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb2[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.x, cb2[1].w, l(0.999990)
					if_nz r4.x
					  lt r4.x, l(0.000000), cb2[6].w
					  if_nz r4.x
					    dp3 r4.x, r5.xyzx, r5.xyzx
					    rsq r4.x, r4.x
					    mul r10.xyz, r4.xxxx, r5.xyzx
					    mov r11.x, v3.w
					    mov r11.y, v4.w
					    mov r11.z, v5.w
					    add r12.xyz, -r11.xyzx, cb2[4].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    add r13.xyz, -r11.xyzx, cb2[5].xyzx
					    div r13.xyz, r13.xyzx, r10.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.x, r12.y, r12.x
					    min r4.x, r12.z, r4.x
					    add r11.xyz, r11.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r10.xyzx, r4.xxxx, r11.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, r2.w
					  add r2.w, r5.w, l(-1.000000)
					  mad r2.w, cb2[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb2[7].x
					  mul r5.xyz, r5.xyzx, r2.wwww
					  mad r8.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r4.yyyy, r9.xyzx
					mad r8.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
					dp3 r1.w, r8.xyzx, r8.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r8.xyz, r1.wwww, r8.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
					dp3_sat r2.x, r2.xyzx, r8.xyzx
					dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.zzzz
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.z, r4.z
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.z, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mad r3.xzw, r7.xxyz, r4.yyyy, r3.xxzw
					mul r4.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r4.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r5.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t1.xyzw, s5
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r5.xyzw, v1.xyxx, t2.xyzw, s3
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r5.y, cb0[9].y, r3.w
					add r4.w, -cb0[8].w, l(1.000000)
					dp3 r5.x, r3.xyzx, r2.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r7.xyz, r2.wwww, r5.xyzx
					  add r8.xyz, -r4.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -r4.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r8.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r2.w
					add r5.w, r7.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r5.wwww
					lt r6.w, cb5[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb5[6].w
					  if_nz r6.w
					    dp3 r6.w, r5.xyzx, r5.xyzx
					    rsq r6.w, r6.w
					    mul r9.xyz, r5.xyzx, r6.wwww
					    add r10.xyz, -r4.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r4.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
					  endif 
					  sample_l r9.xyzw, r5.xyzx, t5.xyzw, s0, r2.w
					  add r2.w, r9.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r9.xyzx, r2.wwww
					  mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
					  mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r3.wwww, r8.xyzx
					mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r5.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.w, r4.w
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.w, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mul r5.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s4
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t2.xyzw, s5
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r5.xyzw, v1.xyxx, t3.xyzw, s4
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r5.y, cb0[9].y, r3.w
					add r4.w, -cb0[8].w, l(1.000000)
					dp3 r5.x, r3.xyzx, r2.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r7.xyz, r2.wwww, r5.xyzx
					  add r8.xyz, -r4.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -r4.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r8.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r2.w
					add r5.w, r7.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r5.wwww
					lt r6.w, cb5[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb5[6].w
					  if_nz r6.w
					    dp3 r6.w, r5.xyzx, r5.xyzx
					    rsq r6.w, r6.w
					    mul r9.xyz, r5.xyzx, r6.wwww
					    add r10.xyz, -r4.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r4.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
					  endif 
					  sample_l r9.xyzw, r5.xyzx, t5.xyzw, s0, r2.w
					  add r2.w, r9.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r9.xyzx, r2.wwww
					  mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
					  mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r3.wwww, r8.xyzx
					mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r5.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.w, r4.w
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.w, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mul r5.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.w
					  sample r5.xyzw, r5.xzwx, t7.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t2.xyzw, s6
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r5.xyzw, v1.xyxx, t3.xyzw, s4
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r5.y, cb0[9].y, r3.w
					add r4.w, -cb0[8].w, l(1.000000)
					dp3 r5.x, r3.xyzx, r2.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r7.xyz, r2.wwww, r5.xyzx
					  add r8.xyz, -r4.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -r4.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r8.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r2.w
					add r5.w, r7.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r5.wwww
					lt r6.w, cb5[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb5[6].w
					  if_nz r6.w
					    dp3 r6.w, r5.xyzx, r5.xyzx
					    rsq r6.w, r6.w
					    mul r9.xyz, r5.xyzx, r6.wwww
					    add r10.xyz, -r4.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r4.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
					  endif 
					  sample_l r9.xyzw, r5.xyzx, t6.xyzw, s0, r2.w
					  add r2.w, r9.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r9.xyzx, r2.wwww
					  mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
					  mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r3.wwww, r8.xyzx
					mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r5.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.w, r4.w
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.w, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mul r5.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s5
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t1.xyzw, s4
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r5.xyzw, v1.xyxx, t2.xyzw, s3
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r5.y, cb0[9].y, r3.w
					add r4.w, -cb0[8].w, l(1.000000)
					dp3 r5.x, r3.xyzx, r2.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r7.xyz, r2.wwww, r5.xyzx
					  add r8.xyz, -r4.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -r4.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r8.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r2.w
					add r5.w, r7.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r5.wwww
					lt r6.w, cb5[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb5[6].w
					  if_nz r6.w
					    dp3 r6.w, r5.xyzx, r5.xyzx
					    rsq r6.w, r6.w
					    mul r9.xyz, r5.xyzx, r6.wwww
					    add r10.xyz, -r4.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r4.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
					  endif 
					  sample_l r9.xyzw, r5.xyzx, t4.xyzw, s0, r2.w
					  add r2.w, r9.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r9.xyzx, r2.wwww
					  mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
					  mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r3.wwww, r8.xyzx
					mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r5.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.w, r4.w
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.w, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mul r5.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_temps 13
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s5
					mul r1.x, cb0[9].z, l(0.500000)
					mad r1.x, r1.y, cb0[9].z, -r1.x
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					mad r0.xy, r1.xxxx, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r3.xyzw, r0.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r4.xyz, r0.wwww, v2.xyzx
					add r5.xyz, -v8.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v8.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v8.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v8.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v8.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v8.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t7.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t3.xyzw, s6
					add r2.w, r2.w, -r5.x
					mad r1.w, r1.w, r2.w, r5.x
					sample r5.xyzw, r0.xyxx, t4.xyzw, s4
					add r0.x, -cb0[9].y, l(1.000000)
					mad r0.x, r5.y, cb0[9].y, r0.x
					add r0.y, -cb0[8].w, l(1.000000)
					dp3 r2.w, r4.xyzx, r3.xyzx
					add r2.w, r2.w, r2.w
					mad r5.xyz, r3.xyzx, -r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb5[2].w
					if_nz r1.w
					  dp3 r1.w, r5.xyzx, r5.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r5.xyzx
					  add r8.xyz, -v8.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v8.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r1.w, r8.y, r8.x
					  min r1.w, r8.z, r1.w
					  add r8.xyz, v8.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r1.w, -r0.y, l(0.700000), l(1.700000)
					mul r1.w, r0.y, r1.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r1.w
					add r2.w, r7.w, l(-1.000000)
					mad r2.w, cb5[3].w, r2.w, l(1.000000)
					mul r2.w, r2.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r2.wwww
					lt r3.w, cb5[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb5[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r9.xyz, r3.wwww, r5.xyzx
					    add r10.xyz, -v8.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v8.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r3.w, r10.y, r10.x
					    min r3.w, r10.z, r3.w
					    add r10.xyz, v8.xyzx, -cb5[6].xyzx
					    mad r5.xyz, r9.xyzx, r3.wwww, r10.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t6.xyzw, s0, r1.w
					  add r1.w, r5.w, l(-1.000000)
					  mad r1.w, cb5[7].w, r1.w, l(1.000000)
					  mul r1.w, r1.w, cb5[7].x
					  mul r5.xyz, r5.xyzx, r1.wwww
					  mad r7.xyz, r2.wwww, r7.xyzx, -r5.xyzx
					  mad r8.xyz, cb5[1].wwww, r7.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r0.xxxx, r8.xyzx
					mad r7.xyz, -v2.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.x, r7.xyzx, r7.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r7.xyz, r0.xxxx, r7.xyzx
					dp3 r0.x, r3.xyzx, -r4.xyzx
					dp3_sat r0.w, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r7.xyzx
					dp3_sat r2.w, cb2[0].xyzx, r7.xyzx
					mul r3.x, r2.w, r2.w
					dp2 r3.x, r3.xxxx, r0.yyyy
					add r3.x, r3.x, l(-0.500000)
					add r3.y, -r0.w, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r3.y, r3.x, r3.y, l(1.000000)
					add r3.z, -|r0.x|, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.x, r3.x, r3.z, l(1.000000)
					mul r3.x, r3.x, r3.y
					mul r3.x, r0.w, r3.x
					mul r3.y, r0.y, r0.y
					max r3.y, r3.y, l(0.002000)
					add r3.w, -r3.y, l(1.000000)
					mad r4.x, |r0.x|, r3.w, r3.y
					mad r3.w, r0.w, r3.w, r3.y
					mul r0.x, |r0.x|, r3.w
					mad r0.x, r0.w, r4.x, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r3.w, r3.y, r3.y
					mad r4.x, r1.w, r3.w, -r1.w
					mad r1.w, r4.x, r1.w, l(1.000000)
					mul r3.w, r3.w, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r3.w, r1.w
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.x, r0.w, r0.x
					mul r0.w, r3.y, l(0.280000)
					mad r0.y, -r0.w, r0.y, l(1.000000)
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					add_sat r0.z, r0.z, cb0[8].w
					mul r3.xyw, r3.xxxx, r6.xyxz
					mul r4.xyz, r6.xyzx, r0.xxxx
					add r0.x, -r2.w, l(1.000000)
					mul r0.w, r0.x, r0.x
					mul r0.w, r0.w, r0.w
					mul r0.x, r0.x, r0.w
					add r6.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r6.xyz, r6.xyzx, r0.xxxx, r1.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r3.xywx, r4.xyzx
					mul r0.xyw, r5.xyxz, r0.yyyy
					add r3.xyw, -r1.xyxz, r0.zzzz
					mad r1.xyz, r3.zzzz, r3.xywx, r1.xyzx
					mad o0.xyz, r0.xywx, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t6.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t2.xyzw, s5
					add r1.w, r1.w, -r6.x
					mad r0.z, r0.z, r1.w, r6.x
					sample r6.xyzw, v1.xyxx, t3.xyzw, s4
					add r1.w, -cb0[9].y, l(1.000000)
					mad r1.w, r6.y, cb0[9].y, r1.w
					mad r2.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r3.w, r4.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r6.xyz, r3.xyzx, -r3.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r8.xyz, r0.zzzz, r6.xyzx
					  add r9.xyz, -r5.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -r5.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r0.z, r9.y, r9.x
					  min r0.z, r9.z, r0.z
					  add r9.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r8.xyz, r8.xyzx, r0.zzzz, r9.xyzx
					else 
					  mov r8.xyz, r6.xyzx
					endif 
					mad r0.z, -r2.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r2.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t4.xyzw, s0, r0.z
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r10.xyz, r4.wwww, r6.xyzx
					    add r11.xyz, -r5.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r5.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r10.xyzx, r4.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t5.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r1.wwww, r9.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r2.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r2.w, r2.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r2.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad o0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t7.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t2.xyzw, s6
					add r1.w, r1.w, -r6.x
					mad r0.z, r0.z, r1.w, r6.x
					sample r6.xyzw, v1.xyxx, t3.xyzw, s4
					add r1.w, -cb0[9].y, l(1.000000)
					mad r1.w, r6.y, cb0[9].y, r1.w
					mad r2.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r3.w, r4.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r6.xyz, r3.xyzx, -r3.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r8.xyz, r0.zzzz, r6.xyzx
					  add r9.xyz, -r5.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -r5.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r0.z, r9.y, r9.x
					  min r0.z, r9.z, r0.z
					  add r9.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r8.xyz, r8.xyzx, r0.zzzz, r9.xyzx
					else 
					  mov r8.xyz, r6.xyzx
					endif 
					mad r0.z, -r2.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r2.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t5.xyzw, s0, r0.z
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r10.xyz, r4.wwww, r6.xyzx
					    add r11.xyz, -r5.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r5.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r10.xyzx, r4.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t6.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r1.wwww, r9.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r2.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r2.w, r2.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r2.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad r0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s5
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r0.yz, r0.yyzy, cb0[8].xxxx
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r0.y, r3.xyzx, r3.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t7.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t3.xyzw, s6
					add r1.w, r1.w, -r6.x
					mad r0.z, r0.z, r1.w, r6.x
					sample r6.xyzw, v1.xyxx, t4.xyzw, s5
					add r1.w, -cb0[9].y, l(1.000000)
					mad r1.w, r6.y, cb0[9].y, r1.w
					mad r2.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r3.w, r4.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r6.xyz, r3.xyzx, -r3.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r8.xyz, r0.zzzz, r6.xyzx
					  add r9.xyz, -r5.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -r5.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r0.z, r9.y, r9.x
					  min r0.z, r9.z, r0.z
					  add r9.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r8.xyz, r8.xyzx, r0.zzzz, r9.xyzx
					else 
					  mov r8.xyz, r6.xyzx
					endif 
					mad r0.z, -r2.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r2.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t5.xyzw, s0, r0.z
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r10.xyz, r4.wwww, r6.xyzx
					    add r11.xyz, -r5.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r5.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r10.xyzx, r4.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t6.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r1.wwww, r9.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r2.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r2.w, r2.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r2.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad o0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r0.yz, r0.yyzy, cb0[8].xxxx
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r0.y, r3.xyzx, r3.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t8.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t3.xyzw, s7
					add r1.w, r1.w, -r6.x
					mad r0.z, r0.z, r1.w, r6.x
					sample r6.xyzw, v1.xyxx, t4.xyzw, s5
					add r1.w, -cb0[9].y, l(1.000000)
					mad r1.w, r6.y, cb0[9].y, r1.w
					mad r2.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r3.w, r4.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r6.xyz, r3.xyzx, -r3.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r8.xyz, r0.zzzz, r6.xyzx
					  add r9.xyz, -r5.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -r5.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r0.z, r9.y, r9.x
					  min r0.z, r9.z, r0.z
					  add r9.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r8.xyz, r8.xyzx, r0.zzzz, r9.xyzx
					else 
					  mov r8.xyz, r6.xyzx
					endif 
					mad r0.z, -r2.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r2.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t6.xyzw, s0, r0.z
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r10.xyz, r4.wwww, r6.xyzx
					    add r11.xyz, -r5.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r5.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r10.xyzx, r4.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t7.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r1.wwww, r9.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r2.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r2.w, r2.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r2.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad r0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					sample r1.xyzw, v1.xyxx, t5.xyzw, s6
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r3.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r4.w, r5.xyzx, r5.xyzx
					sqrt r4.w, r4.w
					add r4.w, -r3.w, r4.w
					mad r3.w, cb3[25].w, r4.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r4.w, cb6[0].x, l(1.000000)
					if_nz r4.w
					  eq r4.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r4.w, r5.y, l(0.250000), l(0.750000)
					  mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r4.w, r5.y
					  sample r5.xyzw, r5.xzwx, t7.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t3.xyzw, s6
					add r4.w, r4.w, -r5.x
					mad r3.w, r3.w, r4.w, r5.x
					sample r5.xyzw, v1.xyxx, t4.xyzw, s5
					add r4.w, -cb0[9].y, l(1.000000)
					mad r4.w, r5.y, cb0[9].y, r4.w
					mad r5.x, -r2.w, cb0[9].x, l(1.000000)
					dp3 r5.y, r3.xyzx, r2.xyzx
					add r5.y, r5.y, r5.y
					mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
					mul r6.xyz, r3.wwww, cb0[2].xyzx
					lt r3.w, l(0.000000), cb5[2].w
					if_nz r3.w
					  dp3 r3.w, r5.yzwy, r5.yzwy
					  rsq r3.w, r3.w
					  mul r7.xyz, r3.wwww, r5.yzwy
					  add r8.xyz, -r4.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -r4.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r3.w, r8.y, r8.x
					  min r3.w, r8.z, r3.w
					  add r8.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.yzwy
					endif 
					mad r3.w, -r5.x, l(0.700000), l(1.700000)
					mul r3.w, r3.w, r5.x
					mul r3.w, r3.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r3.w
					add r6.w, r7.w, l(-1.000000)
					mad r6.w, cb5[3].w, r6.w, l(1.000000)
					mul r6.w, r6.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r6.wwww
					lt r7.w, cb5[1].w, l(0.999990)
					if_nz r7.w
					  lt r7.w, l(0.000000), cb5[6].w
					  if_nz r7.w
					    dp3 r7.w, r5.yzwy, r5.yzwy
					    rsq r7.w, r7.w
					    mul r9.xyz, r5.yzwy, r7.wwww
					    add r10.xyz, -r4.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r4.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r7.w, r10.y, r10.x
					    min r7.w, r10.z, r7.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
					  endif 
					  sample_l r9.xyzw, r5.yzwy, t6.xyzw, s0, r3.w
					  add r3.w, r9.w, l(-1.000000)
					  mad r3.w, cb5[7].w, r3.w, l(1.000000)
					  mul r3.w, r3.w, cb5[7].x
					  mul r4.xyz, r9.xyzx, r3.wwww
					  mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
					  mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
					endif 
					mul r4.xyz, r4.wwww, r8.xyzx
					mad r5.yzw, -v2.xxyz, r1.wwww, cb2[0].xxyz
					dp3 r1.w, r5.yzwy, r5.yzwy
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.yzw, r1.wwww, r5.yyzw
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r5.yzwy
					dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r5.xxxx
					add r2.z, r2.z, l(-0.500000)
					add r3.y, -r3.x, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r3.y, r2.z, r3.y, l(1.000000)
					add r3.z, -|r1.w|, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r2.z, r2.z, r3.z, l(1.000000)
					mul r2.z, r2.z, r3.y
					mul r2.z, r3.x, r2.z
					mul r3.y, r5.x, r5.x
					max r3.y, r3.y, l(0.002000)
					add r3.w, -r3.y, l(1.000000)
					mad r4.w, |r1.w|, r3.w, r3.y
					mad r3.w, r3.x, r3.w, r3.y
					mul r1.w, |r1.w|, r3.w
					mad r1.w, r3.x, r4.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.w, r3.y, r3.y
					mad r4.w, r2.x, r3.w, -r2.x
					mad r2.x, r4.w, r2.x, l(1.000000)
					mul r3.w, r3.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.w, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r3.x, r1.w
					mul r2.x, r3.y, l(0.280000)
					mad r2.x, -r2.x, r5.x, l(1.000000)
					dp3 r3.x, r0.xyzx, r0.xyzx
					ne r3.x, r3.x, l(0.000000)
					and r3.x, r3.x, l(0x3f800000)
					mul r1.w, r1.w, r3.x
					mad r0.w, r2.w, cb0[9].x, -r0.w
					add_sat r0.w, r0.w, l(1.000000)
					mul r3.xyw, r2.zzzz, r6.xyxz
					mul r5.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xywx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xyw, -r0.xyxz, r0.wwww
					mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_temps 13
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s6
					mul r1.x, cb0[9].z, l(0.500000)
					mad r1.x, r1.y, cb0[9].z, -r1.x
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					mad r0.xy, r1.xxxx, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s4
					sample r2.xyzw, r0.xyxx, t1.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r3.xyzw, r0.xyxx, t3.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r4.xyz, r0.wwww, v2.xyzx
					add r5.xyz, -v8.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v8.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v8.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v8.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v8.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, v8.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.w
					  sample r5.xyzw, r5.xzwx, t8.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t4.xyzw, s7
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r5.xyzw, r0.xyxx, t5.xyzw, s5
					add r0.x, -cb0[9].y, l(1.000000)
					mad r0.x, r5.y, cb0[9].y, r0.x
					mad r0.y, -r1.w, cb0[9].x, l(1.000000)
					dp3 r3.w, r4.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r5.xyz, r3.xyzx, -r3.wwww, r4.xyzx
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r7.xyz, r2.wwww, r5.xyzx
					  add r8.xyz, -v8.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v8.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r8.xyz, v8.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r2.w, -r0.y, l(0.700000), l(1.700000)
					mul r2.w, r0.y, r2.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t6.xyzw, s0, r2.w
					add r3.w, r7.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r5.xyzx, r5.xyzx
					    rsq r4.w, r4.w
					    mul r9.xyz, r4.wwww, r5.xyzx
					    add r10.xyz, -v8.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v8.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r4.w, r10.y, r10.x
					    min r4.w, r10.z, r4.w
					    add r10.xyz, v8.xyzx, -cb5[6].xyzx
					    mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t7.xyzw, s0, r2.w
					  add r2.w, r5.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r5.xyz, r5.xyzx, r2.wwww
					  mad r7.xyz, r3.wwww, r7.xyzx, -r5.xyzx
					  mad r8.xyz, cb5[1].wwww, r7.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r0.xxxx, r8.xyzx
					mad r7.xyz, -v2.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.x, r7.xyzx, r7.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r7.xyz, r0.xxxx, r7.xyzx
					dp3 r0.x, r3.xyzx, -r4.xyzx
					dp3_sat r0.w, r3.xyzx, cb2[0].xyzx
					dp3_sat r2.w, r3.xyzx, r7.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r7.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r0.yyyy
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.w, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.x|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.w, r3.y
					mul r3.z, r0.y, r0.y
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.x|, r4.x, r3.z
					mad r4.x, r0.w, r4.x, r3.z
					mul r0.x, |r0.x|, r4.x
					mad r0.x, r0.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r4.x, r3.z, r3.z
					mad r4.y, r2.w, r4.x, -r2.w
					mad r2.w, r4.y, r2.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r2.w, r2.w, r2.w, l(0.000000)
					div r2.w, r4.x, r2.w
					mul r0.x, r0.x, r2.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.x, r0.w, r0.x
					mul r0.w, r3.z, l(0.280000)
					mad r0.y, -r0.w, r0.y, l(1.000000)
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mad r0.z, r1.w, cb0[9].x, -r0.z
					add_sat r0.z, r0.z, l(1.000000)
					mul r4.xyz, r3.yyyy, r6.xyzx
					mul r6.xyz, r6.xyzx, r0.xxxx
					add r0.x, -r3.x, l(1.000000)
					mul r0.w, r0.x, r0.x
					mul r0.w, r0.w, r0.w
					mul r0.x, r0.x, r0.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.xxxx, r2.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r1.xyz, r1.xyzx, r4.xyzx, r3.xyzx
					mul r0.xyw, r5.xyxz, r0.yyyy
					add r3.xyz, -r2.xyzx, r0.zzzz
					mad r2.xyz, r3.wwww, r3.xyzx, r2.xyzx
					mad o0.xyz, r0.xywx, r2.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t1.xyzw, s4
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r5.xyzw, v1.xyxx, t2.xyzw, s3
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r5.y, cb0[9].y, r3.w
					add r4.w, -cb0[8].w, l(1.000000)
					dp3 r5.x, r3.xyzx, r2.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r7.xyz, r2.wwww, r5.xyzx
					  add r8.xyz, -r4.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -r4.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r8.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r2.w
					add r5.w, r7.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r5.wwww
					lt r6.w, cb5[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb5[6].w
					  if_nz r6.w
					    dp3 r6.w, r5.xyzx, r5.xyzx
					    rsq r6.w, r6.w
					    mul r9.xyz, r5.xyzx, r6.wwww
					    add r10.xyz, -r4.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r4.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
					  endif 
					  sample_l r9.xyzw, r5.xyzx, t4.xyzw, s0, r2.w
					  add r2.w, r9.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r9.xyzx, r2.wwww
					  mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
					  mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r3.wwww, r8.xyzx
					mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r5.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.w, r4.w
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.w, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mul r5.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r3.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r4.w, r5.xyzx, r5.xyzx
					sqrt r4.w, r4.w
					add r4.w, -r3.w, r4.w
					mad r3.w, cb3[25].w, r4.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r4.w, cb6[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.x, cb6[0].y, l(1.000000)
					  mul r5.yzw, v4.wwww, cb6[2].xxyz
					  mad r5.yzw, cb6[1].xxyz, v3.wwww, r5.yyzw
					  mad r5.yzw, cb6[3].xxyz, v5.wwww, r5.yyzw
					  add r5.yzw, r5.yyzw, cb6[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					div r5.yz, v7.xxyx, v7.wwww
					sample r6.xyzw, r5.yzyy, t1.xyzw, s5
					add r5.x, r5.x, -r6.x
					mad r3.w, r3.w, r5.x, r6.x
					sample r5.xyzw, v1.xyxx, t2.xyzw, s3
					add r5.x, -cb0[9].y, l(1.000000)
					mad r5.x, r5.y, cb0[9].y, r5.x
					add r5.y, -cb0[8].w, l(1.000000)
					dp3 r5.z, r3.xyzx, r2.xyzx
					add r5.z, r5.z, r5.z
					mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
					mul r7.xyz, r3.wwww, cb0[2].xyzx
					if_nz r4.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r3.w, r8.y, l(0.250000)
					  mul r4.w, cb6[0].z, l(0.500000)
					  mad r5.z, -cb6[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.w
					  min r8.x, r5.z, r3.w
					  sample r9.xyzw, r8.xzwx, t6.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t6.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t6.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r2.xyzw
					  dp4 r9.y, r10.xyzw, r2.xyzw
					  dp4 r9.z, r8.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r2.xyzw
					  dp4 r9.y, cb2[40].xyzw, r2.xyzw
					  dp4 r9.z, cb2[41].xyzw, r2.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r6.xyzx, r6.xyzx
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r6.xyzx
					  add r10.xyz, -r4.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r4.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r2.w, -r5.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r5.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r2.w
					add r3.w, r9.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r11.xyz, r4.wwww, r6.xyzx
					    add r12.xyz, -r4.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r4.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.w, r12.y, r12.x
					    min r4.w, r12.z, r4.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
					  endif 
					  sample_l r4.xyzw, r6.xyzx, t5.xyzw, s0, r2.w
					  add r2.w, r4.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r4.xyzx, r2.wwww
					  mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r5.xxxx, r10.xyzx
					mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r5.yyyy
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r5.y, r5.y
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r5.y, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r7.xxyz
					mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
					mul r5.xyz, r7.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s4
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r3.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r4.w, r5.xyzx, r5.xyzx
					sqrt r4.w, r4.w
					add r4.w, -r3.w, r4.w
					mad r3.w, cb3[25].w, r4.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r4.w, cb6[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.x, cb6[0].y, l(1.000000)
					  mul r5.yzw, v4.wwww, cb6[2].xxyz
					  mad r5.yzw, cb6[1].xxyz, v3.wwww, r5.yyzw
					  mad r5.yzw, cb6[3].xxyz, v5.wwww, r5.yyzw
					  add r5.yzw, r5.yyzw, cb6[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					div r5.yz, v7.xxyx, v7.wwww
					sample r6.xyzw, r5.yzyy, t2.xyzw, s5
					add r5.x, r5.x, -r6.x
					mad r3.w, r3.w, r5.x, r6.x
					sample r5.xyzw, v1.xyxx, t3.xyzw, s4
					add r5.x, -cb0[9].y, l(1.000000)
					mad r5.x, r5.y, cb0[9].y, r5.x
					add r5.y, -cb0[8].w, l(1.000000)
					dp3 r5.z, r3.xyzx, r2.xyzx
					add r5.z, r5.z, r5.z
					mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
					mul r7.xyz, r3.wwww, cb0[2].xyzx
					if_nz r4.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r3.w, r8.y, l(0.250000)
					  mul r4.w, cb6[0].z, l(0.500000)
					  mad r5.z, -cb6[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.w
					  min r8.x, r5.z, r3.w
					  sample r9.xyzw, r8.xzwx, t6.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t6.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t6.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r2.xyzw
					  dp4 r9.y, r10.xyzw, r2.xyzw
					  dp4 r9.z, r8.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r2.xyzw
					  dp4 r9.y, cb2[40].xyzw, r2.xyzw
					  dp4 r9.z, cb2[41].xyzw, r2.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r6.xyzx, r6.xyzx
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r6.xyzx
					  add r10.xyz, -r4.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r4.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r2.w, -r5.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r5.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r2.w
					add r3.w, r9.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r11.xyz, r4.wwww, r6.xyzx
					    add r12.xyz, -r4.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r4.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.w, r12.y, r12.x
					    min r4.w, r12.z, r4.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
					  endif 
					  sample_l r4.xyzw, r6.xyzx, t5.xyzw, s0, r2.w
					  add r2.w, r4.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r4.xyzx, r2.wwww
					  mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r5.xxxx, r10.xyzx
					mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r5.yyyy
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r5.y, r5.y
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r5.y, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r7.xxyz
					mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
					mul r5.xyz, r7.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r3.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r4.w, r5.xyzx, r5.xyzx
					sqrt r4.w, r4.w
					add r4.w, -r3.w, r4.w
					mad r3.w, cb3[25].w, r4.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r4.w, cb6[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.x, cb6[0].y, l(1.000000)
					  mul r5.yzw, v4.wwww, cb6[2].xxyz
					  mad r5.yzw, cb6[1].xxyz, v3.wwww, r5.yyzw
					  mad r5.yzw, cb6[3].xxyz, v5.wwww, r5.yyzw
					  add r5.yzw, r5.yyzw, cb6[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t7.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					div r5.yz, v7.xxyx, v7.wwww
					sample r6.xyzw, r5.yzyy, t2.xyzw, s6
					add r5.x, r5.x, -r6.x
					mad r3.w, r3.w, r5.x, r6.x
					sample r5.xyzw, v1.xyxx, t3.xyzw, s4
					add r5.x, -cb0[9].y, l(1.000000)
					mad r5.x, r5.y, cb0[9].y, r5.x
					add r5.y, -cb0[8].w, l(1.000000)
					dp3 r5.z, r3.xyzx, r2.xyzx
					add r5.z, r5.z, r5.z
					mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
					mul r7.xyz, r3.wwww, cb0[2].xyzx
					if_nz r4.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r3.w, r8.y, l(0.250000)
					  mul r4.w, cb6[0].z, l(0.500000)
					  mad r5.z, -cb6[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.w
					  min r8.x, r5.z, r3.w
					  sample r9.xyzw, r8.xzwx, t7.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t7.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t7.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r2.xyzw
					  dp4 r9.y, r10.xyzw, r2.xyzw
					  dp4 r9.z, r8.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r2.xyzw
					  dp4 r9.y, cb2[40].xyzw, r2.xyzw
					  dp4 r9.z, cb2[41].xyzw, r2.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r6.xyzx, r6.xyzx
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r6.xyzx
					  add r10.xyz, -r4.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r4.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r2.w, -r5.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r5.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r2.w
					add r3.w, r9.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r11.xyz, r4.wwww, r6.xyzx
					    add r12.xyz, -r4.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r4.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.w, r12.y, r12.x
					    min r4.w, r12.z, r4.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
					  endif 
					  sample_l r4.xyzw, r6.xyzx, t6.xyzw, s0, r2.w
					  add r2.w, r4.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r4.xyzx, r2.wwww
					  mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r5.xxxx, r10.xyzx
					mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r5.yyyy
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r5.y, r5.y
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r5.y, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r7.xxyz
					mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
					mul r5.xyz, r7.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s5
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r3.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r4.w, r5.xyzx, r5.xyzx
					sqrt r4.w, r4.w
					add r4.w, -r3.w, r4.w
					mad r3.w, cb3[25].w, r4.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r4.w, cb6[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.x, cb6[0].y, l(1.000000)
					  mul r5.yzw, v4.wwww, cb6[2].xxyz
					  mad r5.yzw, cb6[1].xxyz, v3.wwww, r5.yyzw
					  mad r5.yzw, cb6[3].xxyz, v5.wwww, r5.yyzw
					  add r5.yzw, r5.yyzw, cb6[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					div r5.yz, v7.xxyx, v7.wwww
					sample r6.xyzw, r5.yzyy, t1.xyzw, s4
					add r5.x, r5.x, -r6.x
					mad r3.w, r3.w, r5.x, r6.x
					sample r5.xyzw, v1.xyxx, t2.xyzw, s3
					add r5.x, -cb0[9].y, l(1.000000)
					mad r5.x, r5.y, cb0[9].y, r5.x
					add r5.y, -cb0[8].w, l(1.000000)
					dp3 r5.z, r3.xyzx, r2.xyzx
					add r5.z, r5.z, r5.z
					mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
					mul r7.xyz, r3.wwww, cb0[2].xyzx
					if_nz r4.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r3.w, r8.y, l(0.250000)
					  mul r4.w, cb6[0].z, l(0.500000)
					  mad r5.z, -cb6[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.w
					  min r8.x, r5.z, r3.w
					  sample r9.xyzw, r8.xzwx, t5.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t5.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t5.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r2.xyzw
					  dp4 r9.y, r10.xyzw, r2.xyzw
					  dp4 r9.z, r8.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r2.xyzw
					  dp4 r9.y, cb2[40].xyzw, r2.xyzw
					  dp4 r9.z, cb2[41].xyzw, r2.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r6.xyzx, r6.xyzx
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r6.xyzx
					  add r10.xyz, -r4.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r4.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r2.w, -r5.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r5.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
					add r3.w, r9.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r11.xyz, r4.wwww, r6.xyzx
					    add r12.xyz, -r4.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r4.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.w, r12.y, r12.x
					    min r4.w, r12.z, r4.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
					  endif 
					  sample_l r4.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
					  add r2.w, r4.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r4.xyzx, r2.wwww
					  mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r5.xxxx, r10.xyzx
					mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r5.yyyy
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r5.y, r5.y
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r5.y, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r7.xxyz
					mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
					mul r5.xyz, r7.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s5
					mul r1.x, cb0[9].z, l(0.500000)
					mad r1.x, r1.y, cb0[9].z, -r1.x
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					mad r0.xy, r1.xxxx, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r3.xyzw, r0.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r4.xyz, r0.wwww, v2.xyzx
					add r5.xyz, -v8.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v8.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb6[0].x, l(1.000000)
					if_nz r2.w
					  eq r4.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v8.yyyy, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v8.xxxx, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v8.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r4.wwww, r5.xyzx, v8.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r4.w, r5.y, l(0.250000), l(0.750000)
					  mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r4.w, r5.y
					  sample r5.xyzw, r5.xzwx, t7.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t3.xyzw, s6
					add r4.w, r4.w, -r5.x
					mad r1.w, r1.w, r4.w, r5.x
					sample r5.xyzw, r0.xyxx, t4.xyzw, s4
					add r0.x, -cb0[9].y, l(1.000000)
					mad r0.x, r5.y, cb0[9].y, r0.x
					add r0.y, -cb0[8].w, l(1.000000)
					dp3 r4.w, r4.xyzx, r3.xyzx
					add r4.w, r4.w, r4.w
					mad r5.xyz, r3.xyzx, -r4.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					if_nz r2.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r7.xyz, v8.yyyy, cb6[2].xyzx
					  mad r7.xyz, cb6[1].xyzx, v8.xxxx, r7.xyzx
					  mad r7.xyz, cb6[3].xyzx, v8.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb6[4].xyzx
					  movc r7.xyz, r1.wwww, r7.xyzx, v8.xyzx
					  add r7.xyz, r7.xyzx, -cb6[6].xyzx
					  mul r7.yzw, r7.xxyz, cb6[5].xxyz
					  mul r1.w, r7.y, l(0.250000)
					  mul r2.w, cb6[0].z, l(0.500000)
					  mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r2.w
					  min r7.x, r4.w, r1.w
					  sample r8.xyzw, r7.xzwx, t7.xyzw, s1
					  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t7.xyzw, s1
					  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r7.xyzx, t7.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r3.xyzw
					  dp4 r8.y, r9.xyzw, r3.xyzw
					  dp4 r8.z, r7.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r8.x, cb2[39].xyzw, r3.xyzw
					  dp4 r8.y, cb2[40].xyzw, r3.xyzw
					  dp4 r8.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r7.xyz, r8.xyzx, v6.xyzx
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r7.xyz, r7.xyzx
					mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r7.xyz, r7.xyzx
					mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r1.w, l(0.000000), cb5[2].w
					if_nz r1.w
					  dp3 r1.w, r5.xyzx, r5.xyzx
					  rsq r1.w, r1.w
					  mul r8.xyz, r1.wwww, r5.xyzx
					  add r9.xyz, -v8.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -v8.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r1.w, r9.y, r9.x
					  min r1.w, r9.z, r1.w
					  add r9.xyz, v8.xyzx, -cb5[2].xyzx
					  mad r8.xyz, r8.xyzx, r1.wwww, r9.xyzx
					else 
					  mov r8.xyz, r5.xyzx
					endif 
					mad r1.w, -r0.y, l(0.700000), l(1.700000)
					mul r1.w, r0.y, r1.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t5.xyzw, s0, r1.w
					add r2.w, r8.w, l(-1.000000)
					mad r2.w, cb5[3].w, r2.w, l(1.000000)
					mul r2.w, r2.w, cb5[3].x
					mul r9.xyz, r8.xyzx, r2.wwww
					lt r3.w, cb5[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb5[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r10.xyz, r3.wwww, r5.xyzx
					    add r11.xyz, -v8.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -v8.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r3.w, r11.y, r11.x
					    min r3.w, r11.z, r3.w
					    add r11.xyz, v8.xyzx, -cb5[6].xyzx
					    mad r5.xyz, r10.xyzx, r3.wwww, r11.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t6.xyzw, s0, r1.w
					  add r1.w, r5.w, l(-1.000000)
					  mad r1.w, cb5[7].w, r1.w, l(1.000000)
					  mul r1.w, r1.w, cb5[7].x
					  mul r5.xyz, r5.xyzx, r1.wwww
					  mad r8.xyz, r2.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb5[1].wwww, r8.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r0.xxxx, r9.xyzx
					mad r8.xyz, -v2.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r8.xyzx, r8.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r8.xyz, r0.wwww, r8.xyzx
					dp3 r0.w, r3.xyzx, -r4.xyzx
					dp3_sat r1.w, r3.xyzx, cb2[0].xyzx
					dp3_sat r2.w, r3.xyzx, r8.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r8.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r0.yyyy
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r1.w, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.w|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r1.w, r3.y
					mul r3.z, r0.y, r0.y
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.w|, r4.x, r3.z
					mad r4.x, r1.w, r4.x, r3.z
					mul r0.w, |r0.w|, r4.x
					mad r0.w, r1.w, r4.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r4.x, r3.z, r3.z
					mad r4.y, r2.w, r4.x, -r2.w
					mad r2.w, r4.y, r2.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r2.w, r2.w, r2.w, l(0.000000)
					div r2.w, r4.x, r2.w
					mul r0.w, r0.w, r2.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r1.w, r0.w
					mul r1.w, r3.z, l(0.280000)
					mad r0.y, -r1.w, r0.y, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					add_sat r0.z, r0.z, cb0[8].w
					mul r4.xyz, r3.yyyy, r6.xyzx
					mad r4.xyz, r7.xyzx, r0.xxxx, r4.xyzx
					mul r6.xyz, r6.xyzx, r0.wwww
					add r0.x, -r3.x, l(1.000000)
					mul r0.w, r0.x, r0.x
					mul r0.w, r0.w, r0.w
					mul r0.x, r0.x, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.xxxx, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.xyw, r5.xyxz, r0.yyyy
					add r3.xyz, -r1.xyzx, r0.zzzz
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad o0.xyz, r0.xywx, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r2.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r2.w, r6.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.w, r4.w
					  sample r6.xyzw, r6.xzwx, t6.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t2.xyzw, s5
					add r2.w, r2.w, -r6.x
					mad r0.z, r0.z, r2.w, r6.x
					sample r6.xyzw, v1.xyxx, t3.xyzw, s4
					add r2.w, -cb0[9].y, l(1.000000)
					mad r2.w, r6.y, cb0[9].y, r2.w
					mad r4.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r5.w, r4.xyzx, r3.xyzx
					add r5.w, r5.w, r5.w
					mad r6.xyz, r3.xyzx, -r5.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					if_nz r1.w
					  eq r0.z, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r0.zzzz, r8.xyzx, r5.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r0.z, r8.y, l(0.250000)
					  mul r1.w, cb6[0].z, l(0.500000)
					  mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r0.z, r0.z, r1.w
					  min r8.x, r5.w, r0.z
					  sample r9.xyzw, r8.xzwx, t6.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t6.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t6.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r3.xyzw
					  dp4 r9.y, r10.xyzw, r3.xyzw
					  dp4 r9.z, r8.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r3.xyzw
					  dp4 r9.y, cb2[40].xyzw, r3.xyzw
					  dp4 r9.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r9.xyz, r0.zzzz, r6.xyzx
					  add r10.xyz, -r5.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r5.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r0.z, r10.y, r10.x
					  min r0.z, r10.z, r0.z
					  add r10.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r0.zzzz, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r0.z, -r4.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r4.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r0.z
					add r1.w, r9.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r1.wwww
					lt r3.w, cb5[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb5[6].w
					  if_nz r3.w
					    dp3 r3.w, r6.xyzx, r6.xyzx
					    rsq r3.w, r3.w
					    mul r11.xyz, r3.wwww, r6.xyzx
					    add r12.xyz, -r5.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r5.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r3.w, r12.y, r12.x
					    min r3.w, r12.z, r3.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r3.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t5.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r1.wwww, r9.xyzx, -r5.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r2.wwww, r10.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r4.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r4.w, r4.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r4.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mad r4.xyz, r8.xyzx, r2.wwww, r4.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad o0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r2.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r2.w, r6.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.w, r4.w
					  sample r6.xyzw, r6.xzwx, t7.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t2.xyzw, s6
					add r2.w, r2.w, -r6.x
					mad r0.z, r0.z, r2.w, r6.x
					sample r6.xyzw, v1.xyxx, t3.xyzw, s4
					add r2.w, -cb0[9].y, l(1.000000)
					mad r2.w, r6.y, cb0[9].y, r2.w
					mad r4.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r5.w, r4.xyzx, r3.xyzx
					add r5.w, r5.w, r5.w
					mad r6.xyz, r3.xyzx, -r5.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					if_nz r1.w
					  eq r0.z, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r0.zzzz, r8.xyzx, r5.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r0.z, r8.y, l(0.250000)
					  mul r1.w, cb6[0].z, l(0.500000)
					  mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r0.z, r0.z, r1.w
					  min r8.x, r5.w, r0.z
					  sample r9.xyzw, r8.xzwx, t7.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t7.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t7.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r3.xyzw
					  dp4 r9.y, r10.xyzw, r3.xyzw
					  dp4 r9.z, r8.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r3.xyzw
					  dp4 r9.y, cb2[40].xyzw, r3.xyzw
					  dp4 r9.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r9.xyz, r0.zzzz, r6.xyzx
					  add r10.xyz, -r5.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r5.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r0.z, r10.y, r10.x
					  min r0.z, r10.z, r0.z
					  add r10.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r0.zzzz, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r0.z, -r4.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r4.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r0.z
					add r1.w, r9.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r1.wwww
					lt r3.w, cb5[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb5[6].w
					  if_nz r3.w
					    dp3 r3.w, r6.xyzx, r6.xyzx
					    rsq r3.w, r3.w
					    mul r11.xyz, r3.wwww, r6.xyzx
					    add r12.xyz, -r5.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r5.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r3.w, r12.y, r12.x
					    min r3.w, r12.z, r3.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r3.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t6.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r1.wwww, r9.xyzx, -r5.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r2.wwww, r10.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r4.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r4.w, r4.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r4.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mad r4.xyz, r8.xyzx, r2.wwww, r4.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad r0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s5
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r0.yz, r0.yyzy, cb0[8].xxxx
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r0.y, r3.xyzx, r3.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r2.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r2.w, r6.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.w, r4.w
					  sample r6.xyzw, r6.xzwx, t7.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t3.xyzw, s6
					add r2.w, r2.w, -r6.x
					mad r0.z, r0.z, r2.w, r6.x
					sample r6.xyzw, v1.xyxx, t4.xyzw, s5
					add r2.w, -cb0[9].y, l(1.000000)
					mad r2.w, r6.y, cb0[9].y, r2.w
					mad r4.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r5.w, r4.xyzx, r3.xyzx
					add r5.w, r5.w, r5.w
					mad r6.xyz, r3.xyzx, -r5.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					if_nz r1.w
					  eq r0.z, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r0.zzzz, r8.xyzx, r5.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r0.z, r8.y, l(0.250000)
					  mul r1.w, cb6[0].z, l(0.500000)
					  mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r0.z, r0.z, r1.w
					  min r8.x, r5.w, r0.z
					  sample r9.xyzw, r8.xzwx, t7.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t7.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t7.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r3.xyzw
					  dp4 r9.y, r10.xyzw, r3.xyzw
					  dp4 r9.z, r8.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r3.xyzw
					  dp4 r9.y, cb2[40].xyzw, r3.xyzw
					  dp4 r9.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r9.xyz, r0.zzzz, r6.xyzx
					  add r10.xyz, -r5.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r5.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r0.z, r10.y, r10.x
					  min r0.z, r10.z, r0.z
					  add r10.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r0.zzzz, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r0.z, -r4.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r4.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r0.z
					add r1.w, r9.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r1.wwww
					lt r3.w, cb5[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb5[6].w
					  if_nz r3.w
					    dp3 r3.w, r6.xyzx, r6.xyzx
					    rsq r3.w, r3.w
					    mul r11.xyz, r3.wwww, r6.xyzx
					    add r12.xyz, -r5.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r5.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r3.w, r12.y, r12.x
					    min r3.w, r12.z, r3.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r3.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t6.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r1.wwww, r9.xyzx, -r5.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r2.wwww, r10.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r4.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r4.w, r4.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r4.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mad r4.xyz, r8.xyzx, r2.wwww, r4.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad o0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r0.yz, r0.yyzy, cb0[8].xxxx
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r0.y, r3.xyzx, r3.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r2.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r2.w, r6.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.w, r4.w
					  sample r6.xyzw, r6.xzwx, t8.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t3.xyzw, s7
					add r2.w, r2.w, -r6.x
					mad r0.z, r0.z, r2.w, r6.x
					sample r6.xyzw, v1.xyxx, t4.xyzw, s5
					add r2.w, -cb0[9].y, l(1.000000)
					mad r2.w, r6.y, cb0[9].y, r2.w
					mad r4.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r5.w, r4.xyzx, r3.xyzx
					add r5.w, r5.w, r5.w
					mad r6.xyz, r3.xyzx, -r5.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					if_nz r1.w
					  eq r0.z, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r0.zzzz, r8.xyzx, r5.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r0.z, r8.y, l(0.250000)
					  mul r1.w, cb6[0].z, l(0.500000)
					  mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r0.z, r0.z, r1.w
					  min r8.x, r5.w, r0.z
					  sample r9.xyzw, r8.xzwx, t8.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t8.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t8.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r3.xyzw
					  dp4 r9.y, r10.xyzw, r3.xyzw
					  dp4 r9.z, r8.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r3.xyzw
					  dp4 r9.y, cb2[40].xyzw, r3.xyzw
					  dp4 r9.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r9.xyz, r0.zzzz, r6.xyzx
					  add r10.xyz, -r5.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r5.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r0.z, r10.y, r10.x
					  min r0.z, r10.z, r0.z
					  add r10.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r0.zzzz, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r0.z, -r4.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r4.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t6.xyzw, s0, r0.z
					add r1.w, r9.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r1.wwww
					lt r3.w, cb5[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb5[6].w
					  if_nz r3.w
					    dp3 r3.w, r6.xyzx, r6.xyzx
					    rsq r3.w, r3.w
					    mul r11.xyz, r3.wwww, r6.xyzx
					    add r12.xyz, -r5.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r5.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r3.w, r12.y, r12.x
					    min r3.w, r12.z, r3.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r3.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t7.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r1.wwww, r9.xyzx, -r5.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r2.wwww, r10.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r4.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r4.w, r4.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r4.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mad r4.xyz, r8.xyzx, r2.wwww, r4.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad r0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					sample r1.xyzw, v1.xyxx, t5.xyzw, s6
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r4.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r5.x, r5.xyzx, r5.xyzx
					sqrt r5.x, r5.x
					add r5.x, -r4.w, r5.x
					mad r4.w, cb3[25].w, r5.x, r4.w
					mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
					eq r5.x, cb6[0].x, l(1.000000)
					if_nz r5.x
					  eq r5.y, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
					  add r5.yzw, r5.yyzw, -cb6[6].xxyz
					  mul r6.yzw, r5.yyzw, cb6[5].xxyz
					  mad r5.y, r6.y, l(0.250000), l(0.750000)
					  mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r5.z, r5.y
					  sample r6.xyzw, r6.xzwx, t7.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
					div r5.zw, v7.xxxy, v7.wwww
					sample r6.xyzw, r5.zwzz, t3.xyzw, s6
					add r5.y, r5.y, -r6.x
					mad r4.w, r4.w, r5.y, r6.x
					sample r6.xyzw, v1.xyxx, t4.xyzw, s5
					add r5.y, -cb0[9].y, l(1.000000)
					mad r5.y, r6.y, cb0[9].y, r5.y
					mad r5.z, -r2.w, cb0[9].x, l(1.000000)
					dp3 r5.w, r2.xyzx, r3.xyzx
					add r5.w, r5.w, r5.w
					mad r6.xyz, r3.xyzx, -r5.wwww, r2.xyzx
					mul r7.xyz, r4.wwww, cb0[2].xyzx
					if_nz r5.x
					  eq r4.w, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r4.w, r8.y, l(0.250000)
					  mul r5.x, cb6[0].z, l(0.500000)
					  mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r4.w, r4.w, r5.x
					  min r8.x, r5.w, r4.w
					  sample r9.xyzw, r8.xzwx, t7.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t7.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t7.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r3.xyzw
					  dp4 r9.y, r10.xyzw, r3.xyzw
					  dp4 r9.z, r8.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r3.xyzw
					  dp4 r9.y, cb2[40].xyzw, r3.xyzw
					  dp4 r9.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r3.w, l(0.000000), cb5[2].w
					if_nz r3.w
					  dp3 r3.w, r6.xyzx, r6.xyzx
					  rsq r3.w, r3.w
					  mul r9.xyz, r3.wwww, r6.xyzx
					  add r10.xyz, -r4.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r4.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r3.w, r10.y, r10.x
					  min r3.w, r10.z, r3.w
					  add r10.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r3.wwww, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r3.w, -r5.z, l(0.700000), l(1.700000)
					mul r3.w, r3.w, r5.z
					mul r3.w, r3.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r3.w
					add r4.w, r9.w, l(-1.000000)
					mad r4.w, cb5[3].w, r4.w, l(1.000000)
					mul r4.w, r4.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r4.wwww
					lt r5.x, cb5[1].w, l(0.999990)
					if_nz r5.x
					  lt r5.x, l(0.000000), cb5[6].w
					  if_nz r5.x
					    dp3 r5.x, r6.xyzx, r6.xyzx
					    rsq r5.x, r5.x
					    mul r11.xyz, r5.xxxx, r6.xyzx
					    add r12.xyz, -r4.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r4.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r5.x, r12.y, r12.x
					    min r5.x, r12.z, r5.x
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
					  endif 
					  sample_l r6.xyzw, r6.xyzx, t6.xyzw, s0, r3.w
					  add r3.w, r6.w, l(-1.000000)
					  mad r3.w, cb5[7].w, r3.w, l(1.000000)
					  mul r3.w, r3.w, cb5[7].x
					  mul r4.xyz, r6.xyzx, r3.wwww
					  mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r5.yyyy, r10.xyzx
					mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r3.xyzx, -r2.xyzx
					dp3_sat r2.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r2.y, r3.xyzx, r6.xyzx
					dp3_sat r2.z, cb2[0].xyzx, r6.xyzx
					mul r3.x, r2.z, r2.z
					dp2 r3.x, r3.xxxx, r5.zzzz
					add r3.x, r3.x, l(-0.500000)
					add r3.y, -r2.x, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r3.y, r3.x, r3.y, l(1.000000)
					add r3.z, -|r1.w|, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.x, r3.x, r3.z, l(1.000000)
					mul r3.x, r3.x, r3.y
					mul r3.x, r2.x, r3.x
					mul r3.y, r5.z, r5.z
					max r3.y, r3.y, l(0.002000)
					add r3.w, -r3.y, l(1.000000)
					mad r4.w, |r1.w|, r3.w, r3.y
					mad r3.w, r2.x, r3.w, r3.y
					mul r1.w, |r1.w|, r3.w
					mad r1.w, r2.x, r4.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.w, r3.y, r3.y
					mad r4.w, r2.y, r3.w, -r2.y
					mad r2.y, r4.w, r2.y, l(1.000000)
					mul r3.w, r3.w, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r3.w, r2.y
					mul r1.w, r1.w, r2.y
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.x, r1.w
					mul r2.x, r3.y, l(0.280000)
					mad r2.x, -r2.x, r5.z, l(1.000000)
					dp3 r2.y, r0.xyzx, r0.xyzx
					ne r2.y, r2.y, l(0.000000)
					and r2.y, r2.y, l(0x3f800000)
					mul r1.w, r1.w, r2.y
					mad r0.w, r2.w, cb0[9].x, -r0.w
					add_sat r0.w, r0.w, l(1.000000)
					mul r3.xyw, r3.xxxx, r7.xyxz
					mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
					mul r5.xyz, r7.xyzx, r1.wwww
					add r1.w, -r2.z, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xywx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xyw, -r0.xyxz, r0.wwww
					mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s6
					mul r1.x, cb0[9].z, l(0.500000)
					mad r1.x, r1.y, cb0[9].z, -r1.x
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					mad r0.xy, r1.xxxx, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s4
					sample r2.xyzw, r0.xyxx, t1.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r3.xyzw, r0.xyxx, t3.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r4.xyz, r0.wwww, v2.xyzx
					add r5.xyz, -v8.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v8.xyzx, -cb3[25].xyzx
					dp3 r4.w, r5.xyzx, r5.xyzx
					sqrt r4.w, r4.w
					add r4.w, -r2.w, r4.w
					mad r2.w, cb3[25].w, r4.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r4.w, cb6[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.x, cb6[0].y, l(1.000000)
					  mul r5.yzw, v8.yyyy, cb6[2].xxyz
					  mad r5.yzw, cb6[1].xxyz, v8.xxxx, r5.yyzw
					  mad r5.yzw, cb6[3].xxyz, v8.zzzz, r5.yyzw
					  add r5.yzw, r5.yyzw, cb6[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, v8.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t8.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					div r5.yz, v7.xxyx, v7.wwww
					sample r6.xyzw, r5.yzyy, t4.xyzw, s7
					add r5.x, r5.x, -r6.x
					mad r2.w, r2.w, r5.x, r6.x
					sample r5.xyzw, r0.xyxx, t5.xyzw, s5
					add r0.x, -cb0[9].y, l(1.000000)
					mad r0.x, r5.y, cb0[9].y, r0.x
					mad r0.y, -r1.w, cb0[9].x, l(1.000000)
					dp3 r5.x, r4.xyzx, r3.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r3.xyzx, -r5.xxxx, r4.xyzx
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					if_nz r4.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r7.xyz, v8.yyyy, cb6[2].xyzx
					  mad r7.xyz, cb6[1].xyzx, v8.xxxx, r7.xyzx
					  mad r7.xyz, cb6[3].xyzx, v8.zzzz, r7.xyzx
					  add r7.xyz, r7.xyzx, cb6[4].xyzx
					  movc r7.xyz, r2.wwww, r7.xyzx, v8.xyzx
					  add r7.xyz, r7.xyzx, -cb6[6].xyzx
					  mul r7.yzw, r7.xxyz, cb6[5].xxyz
					  mul r2.w, r7.y, l(0.250000)
					  mul r4.w, cb6[0].z, l(0.500000)
					  mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r2.w, r2.w, r4.w
					  min r7.x, r5.w, r2.w
					  sample r8.xyzw, r7.xzwx, t8.xyzw, s1
					  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r9.xyzw, r9.xyzx, t8.xyzw, s1
					  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r7.xyzw, r7.xyzx, t8.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r8.x, r8.xyzw, r3.xyzw
					  dp4 r8.y, r9.xyzw, r3.xyzw
					  dp4 r8.z, r7.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r8.x, cb2[39].xyzw, r3.xyzw
					  dp4 r8.y, cb2[40].xyzw, r3.xyzw
					  dp4 r8.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r7.xyz, r8.xyzx, v6.xyzx
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r7.xyz, r7.xyzx
					mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r7.xyz, r7.xyzx
					mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r8.xyz, r2.wwww, r5.xyzx
					  add r9.xyz, -v8.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -v8.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r2.w, r9.y, r9.x
					  min r2.w, r9.z, r2.w
					  add r9.xyz, v8.xyzx, -cb5[2].xyzx
					  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
					else 
					  mov r8.xyz, r5.xyzx
					endif 
					mad r2.w, -r0.y, l(0.700000), l(1.700000)
					mul r2.w, r0.y, r2.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t6.xyzw, s0, r2.w
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r5.xyzx, r5.xyzx
					    rsq r4.w, r4.w
					    mul r10.xyz, r4.wwww, r5.xyzx
					    add r11.xyz, -v8.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -v8.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r11.xyz, v8.xyzx, -cb5[6].xyzx
					    mad r5.xyz, r10.xyzx, r4.wwww, r11.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t7.xyzw, s0, r2.w
					  add r2.w, r5.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r5.xyz, r5.xyzx, r2.wwww
					  mad r8.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb5[1].wwww, r8.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r0.xxxx, r9.xyzx
					mad r8.xyz, -v2.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r8.xyzx, r8.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r8.xyz, r0.wwww, r8.xyzx
					dp3 r0.w, r3.xyzx, -r4.xyzx
					dp3_sat r2.w, r3.xyzx, cb2[0].xyzx
					dp3_sat r3.x, r3.xyzx, r8.xyzx
					dp3_sat r3.y, cb2[0].xyzx, r8.xyzx
					mul r3.z, r3.y, r3.y
					dp2 r3.z, r3.zzzz, r0.yyyy
					add r3.z, r3.z, l(-0.500000)
					add r3.w, -r2.w, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.w, r3.z, r3.w, l(1.000000)
					add r4.x, -|r0.w|, l(1.000000)
					mul r4.y, r4.x, r4.x
					mul r4.y, r4.y, r4.y
					mul r4.x, r4.x, r4.y
					mad r3.z, r3.z, r4.x, l(1.000000)
					mul r3.z, r3.z, r3.w
					mul r3.z, r2.w, r3.z
					mul r3.w, r0.y, r0.y
					max r3.w, r3.w, l(0.002000)
					add r4.y, -r3.w, l(1.000000)
					mad r4.z, |r0.w|, r4.y, r3.w
					mad r4.y, r2.w, r4.y, r3.w
					mul r0.w, |r0.w|, r4.y
					mad r0.w, r2.w, r4.z, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r4.y, r3.w, r3.w
					mad r4.z, r3.x, r4.y, -r3.x
					mad r3.x, r4.z, r3.x, l(1.000000)
					mul r4.y, r4.y, l(0.318310)
					mad r3.x, r3.x, r3.x, l(0.000000)
					div r3.x, r4.y, r3.x
					mul r0.w, r0.w, r3.x
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					mul r2.w, r3.w, l(0.280000)
					mad r0.y, -r2.w, r0.y, l(1.000000)
					dp3 r2.w, r2.xyzx, r2.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r0.w, r0.w, r2.w
					mad_sat r0.z, r1.w, cb0[9].x, r0.z
					mul r3.xzw, r3.zzzz, r6.xxyz
					mad r3.xzw, r7.xxyz, r0.xxxx, r3.xxzw
					mul r4.yzw, r6.xxyz, r0.wwww
					add r0.x, -r3.y, l(1.000000)
					mul r0.w, r0.x, r0.x
					mul r0.w, r0.w, r0.w
					mul r0.x, r0.x, r0.w
					add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r6.xyz, r6.xyzx, r0.xxxx, r2.xyzx
					mul r4.yzw, r4.yyzw, r6.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r4.yzwy
					mul r0.xyw, r5.xyxz, r0.yyyy
					add r3.xyz, -r2.xyzx, r0.zzzz
					mad r2.xyz, r4.xxxx, r3.xyzx, r2.xyzx
					mad o0.xyz, r0.xywx, r2.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r3.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r4.w, r5.xyzx, r5.xyzx
					sqrt r4.w, r4.w
					add r4.w, -r3.w, r4.w
					mad r3.w, cb3[25].w, r4.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r4.w, cb6[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.x, cb6[0].y, l(1.000000)
					  mul r5.yzw, v4.wwww, cb6[2].xxyz
					  mad r5.yzw, cb6[1].xxyz, v3.wwww, r5.yyzw
					  mad r5.yzw, cb6[3].xxyz, v5.wwww, r5.yyzw
					  add r5.yzw, r5.yyzw, cb6[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					div r5.yz, v7.xxyx, v7.wwww
					sample r6.xyzw, r5.yzyy, t1.xyzw, s4
					add r5.x, r5.x, -r6.x
					mad r3.w, r3.w, r5.x, r6.x
					sample r5.xyzw, v1.xyxx, t2.xyzw, s3
					add r5.x, -cb0[9].y, l(1.000000)
					mad r5.x, r5.y, cb0[9].y, r5.x
					add r5.y, -cb0[8].w, l(1.000000)
					dp3 r5.z, r3.xyzx, r2.xyzx
					add r5.z, r5.z, r5.z
					mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
					mul r7.xyz, r3.wwww, cb0[2].xyzx
					if_nz r4.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r3.w, r8.y, l(0.250000)
					  mul r4.w, cb6[0].z, l(0.500000)
					  mad r5.z, -cb6[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.w
					  min r8.x, r5.z, r3.w
					  sample r9.xyzw, r8.xzwx, t5.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t5.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t5.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r2.xyzw
					  dp4 r9.y, r10.xyzw, r2.xyzw
					  dp4 r9.z, r8.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r2.xyzw
					  dp4 r9.y, cb2[40].xyzw, r2.xyzw
					  dp4 r9.z, cb2[41].xyzw, r2.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r6.xyzx, r6.xyzx
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r6.xyzx
					  add r10.xyz, -r4.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r4.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r2.w, -r5.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r5.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
					add r3.w, r9.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r11.xyz, r4.wwww, r6.xyzx
					    add r12.xyz, -r4.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r4.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.w, r12.y, r12.x
					    min r4.w, r12.z, r4.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
					  endif 
					  sample_l r4.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
					  add r2.w, r4.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r4.xyzx, r2.wwww
					  mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r5.xxxx, r10.xyzx
					mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r5.yyyy
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r5.y, r5.y
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r5.y, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r7.xxyz
					mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
					mul r5.xyz, r7.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r2.wwww, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s3
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r4.y, cb0[9].y, r3.w
					add r4.x, -cb0[8].w, l(1.000000)
					dp3 r4.y, r3.xyzx, r2.xyzx
					add r4.y, r4.y, r4.y
					mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb2[2].w
					if_nz r2.w
					  dp3 r2.w, r4.yzwy, r4.yzwy
					  rsq r2.w, r2.w
					  mul r6.xyz, r2.wwww, r4.yzwy
					  mov r7.x, v3.w
					  mov r7.y, v4.w
					  mov r7.z, v5.w
					  add r8.xyz, -r7.xyzx, cb2[0].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  add r9.xyz, -r7.xyzx, cb2[1].xyzx
					  div r9.xyz, r9.xyzx, r6.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r7.xyz, r7.xyzx, -cb2[2].xyzx
					  mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.yzwy
					endif 
					mad r2.w, -r4.x, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.x
					mul r2.w, r2.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r2.w
					add r5.w, r6.w, l(-1.000000)
					mad r5.w, cb2[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb2[3].x
					mul r7.xyz, r6.xyzx, r5.wwww
					lt r6.w, cb2[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb2[6].w
					  if_nz r6.w
					    dp3 r6.w, r4.yzwy, r4.yzwy
					    rsq r6.w, r6.w
					    mul r8.xyz, r4.yzwy, r6.wwww
					    mov r9.x, v3.w
					    mov r9.y, v4.w
					    mov r9.z, v5.w
					    add r10.xyz, -r9.xyzx, cb2[4].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    add r11.xyz, -r9.xyzx, cb2[5].xyzx
					    div r11.xyz, r11.xyzx, r8.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r9.xyz, r9.xyzx, -cb2[6].xyzx
					    mad r4.yzw, r8.xxyz, r6.wwww, r9.xxyz
					  endif 
					  sample_l r8.xyzw, r4.yzwy, t4.xyzw, s0, r2.w
					  add r2.w, r8.w, l(-1.000000)
					  mad r2.w, cb2[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb2[7].x
					  mul r4.yzw, r8.xxyz, r2.wwww
					  mad r6.xyz, r5.wwww, r6.xyzx, -r4.yzwy
					  mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
					endif 
					mul r4.yzw, r3.wwww, r7.xxyz
					mad r6.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.xxxx
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.x, r4.x
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.x, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r5.xxyz
					mul r5.xyz, r5.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.yzwy, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t2.xyzw, s4
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r2.wwww, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, v1.xyxx, t2.xyzw, s4
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r4.y, cb0[9].y, r3.w
					add r4.x, -cb0[8].w, l(1.000000)
					dp3 r4.y, r3.xyzx, r2.xyzx
					add r4.y, r4.y, r4.y
					mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb2[2].w
					if_nz r2.w
					  dp3 r2.w, r4.yzwy, r4.yzwy
					  rsq r2.w, r2.w
					  mul r6.xyz, r2.wwww, r4.yzwy
					  mov r7.x, v3.w
					  mov r7.y, v4.w
					  mov r7.z, v5.w
					  add r8.xyz, -r7.xyzx, cb2[0].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  add r9.xyz, -r7.xyzx, cb2[1].xyzx
					  div r9.xyz, r9.xyzx, r6.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r7.xyz, r7.xyzx, -cb2[2].xyzx
					  mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.yzwy
					endif 
					mad r2.w, -r4.x, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.x
					mul r2.w, r2.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r2.w
					add r5.w, r6.w, l(-1.000000)
					mad r5.w, cb2[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb2[3].x
					mul r7.xyz, r6.xyzx, r5.wwww
					lt r6.w, cb2[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb2[6].w
					  if_nz r6.w
					    dp3 r6.w, r4.yzwy, r4.yzwy
					    rsq r6.w, r6.w
					    mul r8.xyz, r4.yzwy, r6.wwww
					    mov r9.x, v3.w
					    mov r9.y, v4.w
					    mov r9.z, v5.w
					    add r10.xyz, -r9.xyzx, cb2[4].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    add r11.xyz, -r9.xyzx, cb2[5].xyzx
					    div r11.xyz, r11.xyzx, r8.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r9.xyz, r9.xyzx, -cb2[6].xyzx
					    mad r4.yzw, r8.xxyz, r6.wwww, r9.xxyz
					  endif 
					  sample_l r8.xyzw, r4.yzwy, t4.xyzw, s0, r2.w
					  add r2.w, r8.w, l(-1.000000)
					  mad r2.w, cb2[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb2[7].x
					  mul r4.yzw, r8.xxyz, r2.wwww
					  mad r6.xyz, r5.wwww, r6.xyzx, -r4.yzwy
					  mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
					endif 
					mul r4.yzw, r3.wwww, r7.xxyz
					mad r6.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.xxxx
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.x, r4.x
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.x, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r5.xxyz
					mul r5.xyz, r5.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.yzwy, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r2.wwww, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, v1.xyxx, t2.xyzw, s4
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r4.y, cb0[9].y, r3.w
					add r4.x, -cb0[8].w, l(1.000000)
					dp3 r4.y, r3.xyzx, r2.xyzx
					add r4.y, r4.y, r4.y
					mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb2[2].w
					if_nz r2.w
					  dp3 r2.w, r4.yzwy, r4.yzwy
					  rsq r2.w, r2.w
					  mul r6.xyz, r2.wwww, r4.yzwy
					  mov r7.x, v3.w
					  mov r7.y, v4.w
					  mov r7.z, v5.w
					  add r8.xyz, -r7.xyzx, cb2[0].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  add r9.xyz, -r7.xyzx, cb2[1].xyzx
					  div r9.xyz, r9.xyzx, r6.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r7.xyz, r7.xyzx, -cb2[2].xyzx
					  mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.yzwy
					endif 
					mad r2.w, -r4.x, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.x
					mul r2.w, r2.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
					add r5.w, r6.w, l(-1.000000)
					mad r5.w, cb2[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb2[3].x
					mul r7.xyz, r6.xyzx, r5.wwww
					lt r6.w, cb2[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb2[6].w
					  if_nz r6.w
					    dp3 r6.w, r4.yzwy, r4.yzwy
					    rsq r6.w, r6.w
					    mul r8.xyz, r4.yzwy, r6.wwww
					    mov r9.x, v3.w
					    mov r9.y, v4.w
					    mov r9.z, v5.w
					    add r10.xyz, -r9.xyzx, cb2[4].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    add r11.xyz, -r9.xyzx, cb2[5].xyzx
					    div r11.xyz, r11.xyzx, r8.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r9.xyz, r9.xyzx, -cb2[6].xyzx
					    mad r4.yzw, r8.xxyz, r6.wwww, r9.xxyz
					  endif 
					  sample_l r8.xyzw, r4.yzwy, t5.xyzw, s0, r2.w
					  add r2.w, r8.w, l(-1.000000)
					  mad r2.w, cb2[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb2[7].x
					  mul r4.yzw, r8.xxyz, r2.wwww
					  mad r6.xyz, r5.wwww, r6.xyzx, -r4.yzwy
					  mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
					endif 
					mul r4.yzw, r3.wwww, r7.xxyz
					mad r6.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.xxxx
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.x, r4.x
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.x, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r5.xxyz
					mul r5.xyz, r5.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.yzwy, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s5
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r2.wwww, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, v1.xyxx, t1.xyzw, s3
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r4.y, cb0[9].y, r3.w
					add r4.x, -cb0[8].w, l(1.000000)
					dp3 r4.y, r3.xyzx, r2.xyzx
					add r4.y, r4.y, r4.y
					mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
					mul r5.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb2[2].w
					if_nz r2.w
					  dp3 r2.w, r4.yzwy, r4.yzwy
					  rsq r2.w, r2.w
					  mul r6.xyz, r2.wwww, r4.yzwy
					  mov r7.x, v3.w
					  mov r7.y, v4.w
					  mov r7.z, v5.w
					  add r8.xyz, -r7.xyzx, cb2[0].xyzx
					  div r8.xyz, r8.xyzx, r6.xyzx
					  add r9.xyz, -r7.xyzx, cb2[1].xyzx
					  div r9.xyz, r9.xyzx, r6.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r7.xyz, r7.xyzx, -cb2[2].xyzx
					  mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
					else 
					  mov r6.xyz, r4.yzwy
					endif 
					mad r2.w, -r4.x, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.x
					mul r2.w, r2.w, l(6.000000)
					sample_l r6.xyzw, r6.xyzx, t2.xyzw, s0, r2.w
					add r5.w, r6.w, l(-1.000000)
					mad r5.w, cb2[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb2[3].x
					mul r7.xyz, r6.xyzx, r5.wwww
					lt r6.w, cb2[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb2[6].w
					  if_nz r6.w
					    dp3 r6.w, r4.yzwy, r4.yzwy
					    rsq r6.w, r6.w
					    mul r8.xyz, r4.yzwy, r6.wwww
					    mov r9.x, v3.w
					    mov r9.y, v4.w
					    mov r9.z, v5.w
					    add r10.xyz, -r9.xyzx, cb2[4].xyzx
					    div r10.xyz, r10.xyzx, r8.xyzx
					    add r11.xyz, -r9.xyzx, cb2[5].xyzx
					    div r11.xyz, r11.xyzx, r8.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r9.xyz, r9.xyzx, -cb2[6].xyzx
					    mad r4.yzw, r8.xxyz, r6.wwww, r9.xxyz
					  endif 
					  sample_l r8.xyzw, r4.yzwy, t3.xyzw, s0, r2.w
					  add r2.w, r8.w, l(-1.000000)
					  mad r2.w, cb2[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb2[7].x
					  mul r4.yzw, r8.xxyz, r2.wwww
					  mad r6.xyz, r5.wwww, r6.xyzx, -r4.yzwy
					  mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
					endif 
					mul r4.yzw, r3.wwww, r7.xxyz
					mad r6.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.xxxx
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.x, r4.x
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.x, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r5.xxyz
					mul r5.xyz, r5.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.yzwy, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_temps 13
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s5
					mul r1.x, cb0[9].z, l(0.500000)
					mad r1.x, r1.y, cb0[9].z, -r1.x
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					mad r0.xy, r1.xxxx, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r3.xyzw, r0.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r4.xyz, r0.wwww, v2.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v8.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v8.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v8.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v8.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					sample r5.xyzw, r0.xyxx, t3.xyzw, s4
					add r0.x, -cb0[9].y, l(1.000000)
					mad r0.x, r5.y, cb0[9].y, r0.x
					add r0.y, -cb0[8].w, l(1.000000)
					dp3 r2.w, r4.xyzx, r3.xyzx
					add r2.w, r2.w, r2.w
					mad r5.xyz, r3.xyzx, -r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					lt r1.w, l(0.000000), cb2[2].w
					if_nz r1.w
					  dp3 r1.w, r5.xyzx, r5.xyzx
					  rsq r1.w, r1.w
					  mul r7.xyz, r1.wwww, r5.xyzx
					  add r8.xyz, -v8.xyzx, cb2[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v8.xyzx, cb2[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r1.w, r8.y, r8.x
					  min r1.w, r8.z, r1.w
					  add r8.xyz, v8.xyzx, -cb2[2].xyzx
					  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r1.w, -r0.y, l(0.700000), l(1.700000)
					mul r1.w, r0.y, r1.w
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r1.w
					add r2.w, r7.w, l(-1.000000)
					mad r2.w, cb2[3].w, r2.w, l(1.000000)
					mul r2.w, r2.w, cb2[3].x
					mul r8.xyz, r7.xyzx, r2.wwww
					lt r3.w, cb2[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb2[6].w
					  if_nz r3.w
					    dp3 r3.w, r5.xyzx, r5.xyzx
					    rsq r3.w, r3.w
					    mul r9.xyz, r3.wwww, r5.xyzx
					    add r10.xyz, -v8.xyzx, cb2[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v8.xyzx, cb2[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r3.w, r10.y, r10.x
					    min r3.w, r10.z, r3.w
					    add r10.xyz, v8.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r9.xyzx, r3.wwww, r10.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r1.w
					  add r1.w, r5.w, l(-1.000000)
					  mad r1.w, cb2[7].w, r1.w, l(1.000000)
					  mul r1.w, r1.w, cb2[7].x
					  mul r5.xyz, r5.xyzx, r1.wwww
					  mad r7.xyz, r2.wwww, r7.xyzx, -r5.xyzx
					  mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r0.xxxx, r8.xyzx
					mad r7.xyz, -v2.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.x, r7.xyzx, r7.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r7.xyz, r0.xxxx, r7.xyzx
					dp3 r0.x, r3.xyzx, -r4.xyzx
					dp3_sat r0.w, r3.xyzx, cb1[0].xyzx
					dp3_sat r1.w, r3.xyzx, r7.xyzx
					dp3_sat r2.w, cb1[0].xyzx, r7.xyzx
					mul r3.x, r2.w, r2.w
					dp2 r3.x, r3.xxxx, r0.yyyy
					add r3.x, r3.x, l(-0.500000)
					add r3.y, -r0.w, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r3.y, r3.x, r3.y, l(1.000000)
					add r3.z, -|r0.x|, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.x, r3.x, r3.z, l(1.000000)
					mul r3.x, r3.x, r3.y
					mul r3.x, r0.w, r3.x
					mul r3.y, r0.y, r0.y
					max r3.y, r3.y, l(0.002000)
					add r3.w, -r3.y, l(1.000000)
					mad r4.x, |r0.x|, r3.w, r3.y
					mad r3.w, r0.w, r3.w, r3.y
					mul r0.x, |r0.x|, r3.w
					mad r0.x, r0.w, r4.x, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r3.w, r3.y, r3.y
					mad r4.x, r1.w, r3.w, -r1.w
					mad r1.w, r4.x, r1.w, l(1.000000)
					mul r3.w, r3.w, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r3.w, r1.w
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.x, r0.w, r0.x
					mul r0.w, r3.y, l(0.280000)
					mad r0.y, -r0.w, r0.y, l(1.000000)
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					add_sat r0.z, r0.z, cb0[8].w
					mul r3.xyw, r3.xxxx, r6.xyxz
					mul r4.xyz, r6.xyzx, r0.xxxx
					add r0.x, -r2.w, l(1.000000)
					mul r0.w, r0.x, r0.x
					mul r0.w, r0.w, r0.w
					mul r0.x, r0.x, r0.w
					add r6.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r6.xyz, r6.xyzx, r0.xxxx, r1.xyzx
					mul r4.xyz, r4.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r3.xywx, r4.xyzx
					mul r0.xyw, r5.xyxz, r0.yyyy
					add r3.xyw, -r1.xyxz, r0.zzzz
					mad r1.xyz, r3.zzzz, r3.xywx, r1.xyzx
					mad o0.xyz, r0.xywx, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 14
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					eq r0.z, cb3[0].x, l(1.000000)
					if_nz r0.z
					  eq r0.z, cb3[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  mov r6.y, v3.w
					  mov r6.z, v4.w
					  mov r6.w, v5.w
					  movc r5.xyz, r0.zzzz, r5.xyzx, r6.yzwy
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r0.z, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.z, r1.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.z, r5.xyzw, cb1[46].xyzw
					sample r5.xyzw, v1.xyxx, t2.xyzw, s4
					add r1.w, -cb0[9].y, l(1.000000)
					mad r1.w, r5.y, cb0[9].y, r1.w
					mad r2.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r3.w, r4.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r5.xyz, r3.xyzx, -r3.wwww, r4.xyzx
					mul r6.xyz, r0.zzzz, cb0[2].xyzx
					lt r0.z, l(0.000000), cb2[2].w
					if_nz r0.z
					  dp3 r0.z, r5.xyzx, r5.xyzx
					  rsq r0.z, r0.z
					  mul r7.xyz, r0.zzzz, r5.xyzx
					  mov r8.x, v3.w
					  mov r8.y, v4.w
					  mov r8.z, v5.w
					  add r9.xyz, -r8.xyzx, cb2[0].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  add r10.xyz, -r8.xyzx, cb2[1].xyzx
					  div r10.xyz, r10.xyzx, r7.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r0.z, r9.y, r9.x
					  min r0.z, r9.z, r0.z
					  add r8.xyz, r8.xyzx, -cb2[2].xyzx
					  mad r7.xyz, r7.xyzx, r0.zzzz, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r0.z, -r2.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r2.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r0.z
					add r3.w, r7.w, l(-1.000000)
					mad r3.w, cb2[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb2[3].x
					mul r8.xyz, r7.xyzx, r3.wwww
					lt r4.w, cb2[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb2[6].w
					  if_nz r4.w
					    dp3 r4.w, r5.xyzx, r5.xyzx
					    rsq r4.w, r4.w
					    mul r9.xyz, r4.wwww, r5.xyzx
					    mov r10.x, v3.w
					    mov r10.y, v4.w
					    mov r10.z, v5.w
					    add r11.xyz, -r10.xyzx, cb2[4].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    add r12.xyz, -r10.xyzx, cb2[5].xyzx
					    div r12.xyz, r12.xyzx, r9.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r10.xyz, r10.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb2[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb2[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r7.xyz, r3.wwww, r7.xyzx, -r5.xyzx
					  mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r1.wwww, r8.xyzx
					mad r7.xyz, -v2.xyzx, r0.yyyy, cb1[0].xyzx
					dp3 r0.y, r7.xyzx, r7.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r7.xyz, r0.yyyy, r7.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					dp3_sat r1.w, r3.xyzx, r7.xyzx
					dp3_sat r3.x, cb1[0].xyzx, r7.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r2.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r2.w, r2.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r2.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r6.xyzx
					mul r6.xyz, r6.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad o0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 14
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					eq r0.z, cb3[0].x, l(1.000000)
					if_nz r0.z
					  eq r0.z, cb3[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  mov r6.y, v3.w
					  mov r6.z, v4.w
					  mov r6.w, v5.w
					  movc r5.xyz, r0.zzzz, r5.xyzx, r6.yzwy
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r0.z, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.z, r1.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.z, r5.xyzw, cb1[46].xyzw
					sample r5.xyzw, v1.xyxx, t2.xyzw, s4
					add r1.w, -cb0[9].y, l(1.000000)
					mad r1.w, r5.y, cb0[9].y, r1.w
					mad r2.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r3.w, r4.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r5.xyz, r3.xyzx, -r3.wwww, r4.xyzx
					mul r6.xyz, r0.zzzz, cb0[2].xyzx
					lt r0.z, l(0.000000), cb2[2].w
					if_nz r0.z
					  dp3 r0.z, r5.xyzx, r5.xyzx
					  rsq r0.z, r0.z
					  mul r7.xyz, r0.zzzz, r5.xyzx
					  mov r8.x, v3.w
					  mov r8.y, v4.w
					  mov r8.z, v5.w
					  add r9.xyz, -r8.xyzx, cb2[0].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  add r10.xyz, -r8.xyzx, cb2[1].xyzx
					  div r10.xyz, r10.xyzx, r7.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r0.z, r9.y, r9.x
					  min r0.z, r9.z, r0.z
					  add r8.xyz, r8.xyzx, -cb2[2].xyzx
					  mad r7.xyz, r7.xyzx, r0.zzzz, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r0.z, -r2.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r2.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r0.z
					add r3.w, r7.w, l(-1.000000)
					mad r3.w, cb2[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb2[3].x
					mul r8.xyz, r7.xyzx, r3.wwww
					lt r4.w, cb2[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb2[6].w
					  if_nz r4.w
					    dp3 r4.w, r5.xyzx, r5.xyzx
					    rsq r4.w, r4.w
					    mul r9.xyz, r4.wwww, r5.xyzx
					    mov r10.x, v3.w
					    mov r10.y, v4.w
					    mov r10.z, v5.w
					    add r11.xyz, -r10.xyzx, cb2[4].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    add r12.xyz, -r10.xyzx, cb2[5].xyzx
					    div r12.xyz, r12.xyzx, r9.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r10.xyz, r10.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb2[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb2[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r7.xyz, r3.wwww, r7.xyzx, -r5.xyzx
					  mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r1.wwww, r8.xyzx
					mad r7.xyz, -v2.xyzx, r0.yyyy, cb1[0].xyzx
					dp3 r0.y, r7.xyzx, r7.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r7.xyz, r0.yyyy, r7.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					dp3_sat r1.w, r3.xyzx, r7.xyzx
					dp3_sat r3.x, cb1[0].xyzx, r7.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r2.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r2.w, r2.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r2.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r6.xyzx
					mul r6.xyz, r6.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad r0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s5
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 14
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r0.yz, r0.yyzy, cb0[8].xxxx
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r0.y, r3.xyzx, r3.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					eq r0.z, cb3[0].x, l(1.000000)
					if_nz r0.z
					  eq r0.z, cb3[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  mov r6.y, v3.w
					  mov r6.z, v4.w
					  mov r6.w, v5.w
					  movc r5.xyz, r0.zzzz, r5.xyzx, r6.yzwy
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r0.z, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.z, r1.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.z, r5.xyzw, cb1[46].xyzw
					sample r5.xyzw, v1.xyxx, t3.xyzw, s5
					add r1.w, -cb0[9].y, l(1.000000)
					mad r1.w, r5.y, cb0[9].y, r1.w
					mad r2.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r3.w, r4.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r5.xyz, r3.xyzx, -r3.wwww, r4.xyzx
					mul r6.xyz, r0.zzzz, cb0[2].xyzx
					lt r0.z, l(0.000000), cb2[2].w
					if_nz r0.z
					  dp3 r0.z, r5.xyzx, r5.xyzx
					  rsq r0.z, r0.z
					  mul r7.xyz, r0.zzzz, r5.xyzx
					  mov r8.x, v3.w
					  mov r8.y, v4.w
					  mov r8.z, v5.w
					  add r9.xyz, -r8.xyzx, cb2[0].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  add r10.xyz, -r8.xyzx, cb2[1].xyzx
					  div r10.xyz, r10.xyzx, r7.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r0.z, r9.y, r9.x
					  min r0.z, r9.z, r0.z
					  add r8.xyz, r8.xyzx, -cb2[2].xyzx
					  mad r7.xyz, r7.xyzx, r0.zzzz, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r0.z, -r2.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r2.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r0.z
					add r3.w, r7.w, l(-1.000000)
					mad r3.w, cb2[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb2[3].x
					mul r8.xyz, r7.xyzx, r3.wwww
					lt r4.w, cb2[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb2[6].w
					  if_nz r4.w
					    dp3 r4.w, r5.xyzx, r5.xyzx
					    rsq r4.w, r4.w
					    mul r9.xyz, r4.wwww, r5.xyzx
					    mov r10.x, v3.w
					    mov r10.y, v4.w
					    mov r10.z, v5.w
					    add r11.xyz, -r10.xyzx, cb2[4].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    add r12.xyz, -r10.xyzx, cb2[5].xyzx
					    div r12.xyz, r12.xyzx, r9.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r10.xyz, r10.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb2[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb2[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r7.xyz, r3.wwww, r7.xyzx, -r5.xyzx
					  mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r1.wwww, r8.xyzx
					mad r7.xyz, -v2.xyzx, r0.yyyy, cb1[0].xyzx
					dp3 r0.y, r7.xyzx, r7.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r7.xyz, r0.yyyy, r7.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					dp3_sat r1.w, r3.xyzx, r7.xyzx
					dp3_sat r3.x, cb1[0].xyzx, r7.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r2.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r2.w, r2.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r2.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r6.xyzx
					mul r6.xyz, r6.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad o0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 14
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r0.yz, r0.yyzy, cb0[8].xxxx
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r0.y, r3.xyzx, r3.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					eq r0.z, cb3[0].x, l(1.000000)
					if_nz r0.z
					  eq r0.z, cb3[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  mov r6.y, v3.w
					  mov r6.z, v4.w
					  mov r6.w, v5.w
					  movc r5.xyz, r0.zzzz, r5.xyzx, r6.yzwy
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r0.z, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.z, r1.w
					  sample r5.xyzw, r5.xzwx, t7.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.z, r5.xyzw, cb1[46].xyzw
					sample r5.xyzw, v1.xyxx, t3.xyzw, s5
					add r1.w, -cb0[9].y, l(1.000000)
					mad r1.w, r5.y, cb0[9].y, r1.w
					mad r2.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r3.w, r4.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r5.xyz, r3.xyzx, -r3.wwww, r4.xyzx
					mul r6.xyz, r0.zzzz, cb0[2].xyzx
					lt r0.z, l(0.000000), cb2[2].w
					if_nz r0.z
					  dp3 r0.z, r5.xyzx, r5.xyzx
					  rsq r0.z, r0.z
					  mul r7.xyz, r0.zzzz, r5.xyzx
					  mov r8.x, v3.w
					  mov r8.y, v4.w
					  mov r8.z, v5.w
					  add r9.xyz, -r8.xyzx, cb2[0].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  add r10.xyz, -r8.xyzx, cb2[1].xyzx
					  div r10.xyz, r10.xyzx, r7.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r0.z, r9.y, r9.x
					  min r0.z, r9.z, r0.z
					  add r8.xyz, r8.xyzx, -cb2[2].xyzx
					  mad r7.xyz, r7.xyzx, r0.zzzz, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r0.z, -r2.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r2.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r0.z
					add r3.w, r7.w, l(-1.000000)
					mad r3.w, cb2[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb2[3].x
					mul r8.xyz, r7.xyzx, r3.wwww
					lt r4.w, cb2[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb2[6].w
					  if_nz r4.w
					    dp3 r4.w, r5.xyzx, r5.xyzx
					    rsq r4.w, r4.w
					    mul r9.xyz, r4.wwww, r5.xyzx
					    mov r10.x, v3.w
					    mov r10.y, v4.w
					    mov r10.z, v5.w
					    add r11.xyz, -r10.xyzx, cb2[4].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    add r12.xyz, -r10.xyzx, cb2[5].xyzx
					    div r12.xyz, r12.xyzx, r9.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r10.xyz, r10.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t6.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb2[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb2[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r7.xyz, r3.wwww, r7.xyzx, -r5.xyzx
					  mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r1.wwww, r8.xyzx
					mad r7.xyz, -v2.xyzx, r0.yyyy, cb1[0].xyzx
					dp3 r0.y, r7.xyzx, r7.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r7.xyz, r0.yyyy, r7.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					dp3_sat r1.w, r3.xyzx, r7.xyzx
					dp3_sat r3.x, cb1[0].xyzx, r7.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r2.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r2.w, r2.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r2.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r6.xyzx
					mul r6.xyz, r6.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad r0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s6
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 14
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					eq r3.w, cb3[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r3.wwww, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, v1.xyxx, t3.xyzw, s5
					add r4.x, -cb0[9].y, l(1.000000)
					mad r4.x, r4.y, cb0[9].y, r4.x
					mad r4.y, -r2.w, cb0[9].x, l(1.000000)
					dp3 r4.z, r3.xyzx, r2.xyzx
					add r4.z, r4.z, r4.z
					mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
					mul r6.xyz, r3.wwww, cb0[2].xyzx
					lt r3.w, l(0.000000), cb2[2].w
					if_nz r3.w
					  dp3 r3.w, r5.xyzx, r5.xyzx
					  rsq r3.w, r3.w
					  mul r7.xyz, r3.wwww, r5.xyzx
					  mov r8.x, v3.w
					  mov r8.y, v4.w
					  mov r8.z, v5.w
					  add r9.xyz, -r8.xyzx, cb2[0].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  add r10.xyz, -r8.xyzx, cb2[1].xyzx
					  div r10.xyz, r10.xyzx, r7.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r3.w, r9.y, r9.x
					  min r3.w, r9.z, r3.w
					  add r8.xyz, r8.xyzx, -cb2[2].xyzx
					  mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r3.w, -r4.y, l(0.700000), l(1.700000)
					mul r3.w, r3.w, r4.y
					mul r3.w, r3.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r3.w
					add r4.z, r7.w, l(-1.000000)
					mad r4.z, cb2[3].w, r4.z, l(1.000000)
					mul r4.z, r4.z, cb2[3].x
					mul r8.xyz, r7.xyzx, r4.zzzz
					lt r4.w, cb2[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb2[6].w
					  if_nz r4.w
					    dp3 r4.w, r5.xyzx, r5.xyzx
					    rsq r4.w, r4.w
					    mul r9.xyz, r4.wwww, r5.xyzx
					    mov r10.x, v3.w
					    mov r10.y, v4.w
					    mov r10.z, v5.w
					    add r11.xyz, -r10.xyzx, cb2[4].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    add r12.xyz, -r10.xyzx, cb2[5].xyzx
					    div r12.xyz, r12.xyzx, r9.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r10.xyz, r10.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r3.w
					  add r3.w, r5.w, l(-1.000000)
					  mad r3.w, cb2[7].w, r3.w, l(1.000000)
					  mul r3.w, r3.w, cb2[7].x
					  mul r5.xyz, r5.xyzx, r3.wwww
					  mad r7.xyz, r4.zzzz, r7.xyzx, -r5.xyzx
					  mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
					endif 
					mul r4.xzw, r4.xxxx, r8.xxyz
					mad r5.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
					dp3_sat r2.x, r2.xyzx, r5.xyzx
					dp3_sat r2.y, cb1[0].xyzx, r5.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.yyyy
					add r2.z, r2.z, l(-0.500000)
					add r3.y, -r3.x, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r3.y, r2.z, r3.y, l(1.000000)
					add r3.z, -|r1.w|, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r2.z, r2.z, r3.z, l(1.000000)
					mul r2.z, r2.z, r3.y
					mul r2.z, r3.x, r2.z
					mul r3.y, r4.y, r4.y
					max r3.y, r3.y, l(0.002000)
					add r3.w, -r3.y, l(1.000000)
					mad r5.x, |r1.w|, r3.w, r3.y
					mad r3.w, r3.x, r3.w, r3.y
					mul r1.w, |r1.w|, r3.w
					mad r1.w, r3.x, r5.x, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.w, r3.y, r3.y
					mad r5.x, r2.x, r3.w, -r2.x
					mad r2.x, r5.x, r2.x, l(1.000000)
					mul r3.w, r3.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.w, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r3.x, r1.w
					mul r2.x, r3.y, l(0.280000)
					mad r2.x, -r2.x, r4.y, l(1.000000)
					dp3 r3.x, r0.xyzx, r0.xyzx
					ne r3.x, r3.x, l(0.000000)
					and r3.x, r3.x, l(0x3f800000)
					mul r1.w, r1.w, r3.x
					mad r0.w, r2.w, cb0[9].x, -r0.w
					add_sat r0.w, r0.w, l(1.000000)
					mul r3.xyw, r2.zzzz, r6.xyxz
					mul r5.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xywx, r2.yzwy
					mul r2.xyz, r4.xzwx, r2.xxxx
					add r3.xyw, -r0.xyxz, r0.wwww
					mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_temps 13
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s6
					mul r1.x, cb0[9].z, l(0.500000)
					mad r1.x, r1.y, cb0[9].z, -r1.x
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					mad r0.xy, r1.xxxx, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s4
					sample r2.xyzw, r0.xyxx, t1.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r3.xyzw, r0.xyxx, t3.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r3.xy, r3.xyxx, cb0[8].xxxx
					dp2 r0.w, r3.xyxx, r3.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.yzw, r3.yyyy, v4.xxyz
					mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
					mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r4.xyz, r0.wwww, v2.xyzx
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v8.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v8.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v8.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v8.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t7.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
					sample r5.xyzw, r0.xyxx, t4.xyzw, s5
					add r0.x, -cb0[9].y, l(1.000000)
					mad r0.x, r5.y, cb0[9].y, r0.x
					mad r0.y, -r1.w, cb0[9].x, l(1.000000)
					dp3 r3.w, r4.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r5.xyz, r3.xyzx, -r3.wwww, r4.xyzx
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb2[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r7.xyz, r2.wwww, r5.xyzx
					  add r8.xyz, -v8.xyzx, cb2[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -v8.xyzx, cb2[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r8.xyz, v8.xyzx, -cb2[2].xyzx
					  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r2.w, -r0.y, l(0.700000), l(1.700000)
					mul r2.w, r0.y, r2.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r2.w
					add r3.w, r7.w, l(-1.000000)
					mad r3.w, cb2[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb2[3].x
					mul r8.xyz, r7.xyzx, r3.wwww
					lt r4.w, cb2[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb2[6].w
					  if_nz r4.w
					    dp3 r4.w, r5.xyzx, r5.xyzx
					    rsq r4.w, r4.w
					    mul r9.xyz, r4.wwww, r5.xyzx
					    add r10.xyz, -v8.xyzx, cb2[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -v8.xyzx, cb2[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r4.w, r10.y, r10.x
					    min r4.w, r10.z, r4.w
					    add r10.xyz, v8.xyzx, -cb2[6].xyzx
					    mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
					  endif 
					  sample_l r5.xyzw, r5.xyzx, t6.xyzw, s0, r2.w
					  add r2.w, r5.w, l(-1.000000)
					  mad r2.w, cb2[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb2[7].x
					  mul r5.xyz, r5.xyzx, r2.wwww
					  mad r7.xyz, r3.wwww, r7.xyzx, -r5.xyzx
					  mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r0.xxxx, r8.xyzx
					mad r7.xyz, -v2.xyzx, r0.wwww, cb1[0].xyzx
					dp3 r0.x, r7.xyzx, r7.xyzx
					max r0.x, r0.x, l(0.001000)
					rsq r0.x, r0.x
					mul r7.xyz, r0.xxxx, r7.xyzx
					dp3 r0.x, r3.xyzx, -r4.xyzx
					dp3_sat r0.w, r3.xyzx, cb1[0].xyzx
					dp3_sat r2.w, r3.xyzx, r7.xyzx
					dp3_sat r3.x, cb1[0].xyzx, r7.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r0.yyyy
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.w, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.x|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.w, r3.y
					mul r3.z, r0.y, r0.y
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.x|, r4.x, r3.z
					mad r4.x, r0.w, r4.x, r3.z
					mul r0.x, |r0.x|, r4.x
					mad r0.x, r0.w, r4.y, r0.x
					add r0.x, r0.x, l(0.000010)
					div r0.x, l(0.500000), r0.x
					mul r4.x, r3.z, r3.z
					mad r4.y, r2.w, r4.x, -r2.w
					mad r2.w, r4.y, r2.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r2.w, r2.w, r2.w, l(0.000000)
					div r2.w, r4.x, r2.w
					mul r0.x, r0.x, r2.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.x, r0.w, r0.x
					mul r0.w, r3.z, l(0.280000)
					mad r0.y, -r0.w, r0.y, l(1.000000)
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mad r0.z, r1.w, cb0[9].x, -r0.z
					add_sat r0.z, r0.z, l(1.000000)
					mul r4.xyz, r3.yyyy, r6.xyzx
					mul r6.xyz, r6.xyzx, r0.xxxx
					add r0.x, -r3.x, l(1.000000)
					mul r0.w, r0.x, r0.x
					mul r0.w, r0.w, r0.w
					mul r0.x, r0.x, r0.w
					add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.xxxx, r2.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r1.xyz, r1.xyzx, r4.xyzx, r3.xyzx
					mul r0.xyw, r5.xyxz, r0.yyyy
					add r3.xyz, -r2.xyzx, r0.zzzz
					mad r2.xyz, r3.wwww, r3.xyzx, r2.xyzx
					mad o0.xyz, r0.xywx, r2.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD_DELTA"
			LOD 300
			Tags { "LIGHTMODE" = "FORWARDADD" "PerformanceChecks" = "False" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Blend Zero One, Zero One
			ZWrite Off
			GpuProgramID 77226
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v4.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v4.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o8.y, r0.xyzx, r1.xyzx
					dp3 o8.x, v4.xyzx, r1.xyzx
					dp3 o8.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v4.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v4.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v4.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o8.y, r0.xyzx, r1.xyzx
					dp3 o8.x, v4.xyzx, r1.xyzx
					dp3 o8.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[14].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[17].xyzw
					mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[14].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[17].xyzw
					mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[14].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[17].xyzw
					mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[14].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[17].xyzw
					mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[14].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[17].xyzw
					mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[14].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[17].xyzw
					mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[14].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyzw, r0.yyyy, cb0[17].xyzw
					mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[14].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[17].xyzw
					mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o8.y, r0.xyzx, r1.xyzx
					dp3 o8.x, v4.xyzx, r1.xyzx
					dp3 o8.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o8.y, r0.xyzx, r1.xyzx
					dp3 o8.x, v4.xyzx, r1.xyzx
					dp3 o8.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r2.x, cb0[9].w, l(0.000000)
					movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r2.xyz, v0.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
					mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
					add o2.xyz, r2.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r3.xyz, v4.yyyy, cb3[1].xyzx
					mad r3.xyz, cb3[0].xyzx, v4.xxxx, r3.xyzx
					mad r3.xyz, cb3[2].xyzx, v4.zzzz, r3.xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mov o3.xyz, r3.xyzx
					mad r4.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r2.xyzx
					mov o3.w, r4.x
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r5.xyz, r3.yzxy, r2.zxyz
					mad r3.xyz, r2.yzxy, r3.zxyz, -r5.xyzx
					mov o5.xyz, r2.xyzx
					mul r2.x, v4.w, cb3[9].w
					mul o4.xyz, r2.xxxx, r3.xyzx
					mov o4.w, r4.y
					mov o5.w, r4.z
					mul r2.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r2.x, cb0[9].w, l(0.000000)
					movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r2.xyz, v0.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
					mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
					add o2.xyz, r2.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r2.xyzx
					mov r3.w, l(0)
					mov o3.xyzw, r3.wwwx
					mov o4.xyzw, r3.wwwy
					mov o5.w, r3.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul o5.xyz, r2.wwww, r2.xyzx
					mul r2.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r2.x, cb0[9].w, l(0.000000)
					movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r2.xyz, v0.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
					mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
					add o2.xyz, r2.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r3.xyz, v4.yyyy, cb3[1].xyzx
					mad r3.xyz, cb3[0].xyzx, v4.xxxx, r3.xyzx
					mad r3.xyz, cb3[2].xyzx, v4.zzzz, r3.xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mov o3.xyz, r3.xyzx
					mad r4.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r2.xyzx
					mov o3.w, r4.x
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r5.xyz, r3.yzxy, r2.zxyz
					mad r3.xyz, r2.yzxy, r3.zxyz, -r5.xyzx
					mov o5.xyz, r2.xyzx
					mul r2.x, v4.w, cb3[9].w
					mul o4.xyz, r2.xxxx, r3.xyzx
					mov o4.w, r4.y
					mov o5.w, r4.z
					mul r2.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r2.x, cb0[9].w, l(0.000000)
					movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r2.xyz, v0.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
					mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
					add o2.xyz, r2.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r2.xyzx
					mov r3.w, l(0)
					mov o3.xyzw, r3.wwwx
					mov o4.xyzw, r3.wwwy
					mov o5.w, r3.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul o5.xyz, r2.wwww, r2.xyzx
					mul r2.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r2.x, cb0[9].w, l(0.000000)
					movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r2.xyz, v0.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
					mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
					add o2.xyz, r2.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r3.xyz, v4.yyyy, cb3[1].xyzx
					mad r3.xyz, cb3[0].xyzx, v4.xxxx, r3.xyzx
					mad r3.xyz, cb3[2].xyzx, v4.zzzz, r3.xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mov o3.xyz, r3.xyzx
					mad r4.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r2.xyzx
					mov o3.w, r4.x
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r5.xyz, r3.yzxy, r2.zxyz
					mad r3.xyz, r2.yzxy, r3.zxyz, -r5.xyzx
					mov o5.xyz, r2.xyzx
					mul r2.x, v4.w, cb3[9].w
					mul o4.xyz, r2.xxxx, r3.xyzx
					mov o4.w, r4.y
					mov o5.w, r4.z
					mul r2.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r2.x, cb0[9].w, l(0.000000)
					movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r2.xyz, v0.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
					mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
					add o2.xyz, r2.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r3.xyz, v4.yyyy, cb3[1].xyzx
					mad r3.xyz, cb3[0].xyzx, v4.xxxx, r3.xyzx
					mad r3.xyz, cb3[2].xyzx, v4.zzzz, r3.xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mov o3.xyz, r3.xyzx
					mad r4.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r2.xyzx
					mov o3.w, r4.x
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r5.xyz, r3.yzxy, r2.zxyz
					mad r3.xyz, r2.yzxy, r3.zxyz, -r5.xyzx
					mov o5.xyz, r2.xyzx
					mul r2.x, v4.w, cb3[9].w
					mul o4.xyz, r2.xxxx, r3.xyzx
					mov o4.w, r4.y
					mov o5.w, r4.z
					mul r2.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r2.x, cb0[9].w, l(0.000000)
					movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r2.xyz, v0.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
					mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
					add o2.xyz, r2.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r3.xyz, v4.yyyy, cb3[1].xyzx
					mad r3.xyz, cb3[0].xyzx, v4.xxxx, r3.xyzx
					mad r3.xyz, cb3[2].xyzx, v4.zzzz, r3.xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mov o3.xyz, r3.xyzx
					mad r4.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r2.xyzx
					mov o3.w, r4.x
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r5.xyz, r3.yzxy, r2.zxyz
					mad r3.xyz, r2.yzxy, r3.zxyz, -r5.xyzx
					mov o5.xyz, r2.xyzx
					mul r2.x, v4.w, cb3[9].w
					mul o4.xyz, r2.xxxx, r3.xyzx
					mov o4.w, r4.y
					mov o5.w, r4.z
					mul r2.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r2.x, cb0[9].w, l(0.000000)
					movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r2.xyz, v0.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
					mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
					add o2.xyz, r2.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r2.xyzx
					mov r3.w, l(0)
					mov o3.xyzw, r3.wwwx
					mov o4.xyzw, r3.wwwy
					mov o5.w, r3.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul o5.xyz, r2.wwww, r2.xyzx
					mul r2.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" "_PARALLAXMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyz
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v4.yzxy
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					mul r1.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r1.xyz, cb3[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb3[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb3[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o9.y, r0.xyzx, r1.xyzx
					dp3 o9.x, v4.xyzx, r1.xyzx
					dp3 o9.z, v1.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t1.xyzw, s2
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t1.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v8.xyzx, v8.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v8.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v8.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r0.xyzw, r0.xyxx, t2.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r6.xyzx
					dp3_sat r0.y, r5.xyzx, r6.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r1.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r0.x, r1.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r1.w, r0.x
					mul r0.x, r0.x, r0.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r4.xyzx
					mul r0.xzw, r4.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.yyyy, r1.xyzx
					mul r0.xyz, r0.xzwx, r1.xyzx
					mad o0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s2
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					eq r2.w, cb2[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					eq r2.w, cb2[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r3.w
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					mad r1.w, -r2.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v8.xyzx, v8.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v8.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v8.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s3
					sample r2.xyzw, r0.xyxx, t1.xyzw, s1
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r0.xyzw, r0.xyxx, t3.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					eq r2.w, cb2[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r1.w, -r1.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r6.xyzx
					dp3_sat r0.y, r5.xyzx, r6.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r1.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r0.x, r1.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r1.w, r0.x
					mul r0.x, r0.x, r0.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r4.xyzx
					mul r0.xzw, r4.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad o0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t1.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t2.xyzw, s3
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t3.xyzw, s4
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t1.xyzw, s2
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t2.xyzw, s3
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r0.xyzw, r0.xyxx, t2.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t3.xyzw, s4
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t4.xyzw, s5
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.yyyy, r1.xyzx
					mul r0.xyz, r0.xzwx, r1.xyzx
					mad o0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s2
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					lt r2.w, l(0.000000), r4.z
					and r2.w, r2.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t2.xyzw, s3
					mul r2.w, r2.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t3.xyzw, s4
					mul r2.w, r2.w, r4.x
					mul r1.w, r1.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					lt r2.w, l(0.000000), r4.z
					and r2.w, r2.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t3.xyzw, s4
					mul r2.w, r2.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t4.xyzw, s5
					mul r2.w, r2.w, r4.x
					mul r1.w, r1.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t3.xyzw, s4
					mul r1.w, r1.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t4.xyzw, s5
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r2.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s3
					sample r2.xyzw, r0.xyxx, t1.xyzw, s1
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r0.xyzw, r0.xyxx, t3.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r2.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					lt r2.w, l(0.000000), r4.z
					and r2.w, r2.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t4.xyzw, s5
					mul r2.w, r2.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t5.xyzw, s6
					mul r2.w, r2.w, r4.x
					mul r0.w, r0.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r1.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad o0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t1.xyzw, s2
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t2.xyzw, s3
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t2.xyzw, s4
					sample r4.xyzw, r4.xyzx, t3.xyzw, s3
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t1.xyzw, s3
					sample r4.xyzw, r4.xyzx, t2.xyzw, s2
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r0.xyzw, r0.xyxx, t2.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t3.xyzw, s5
					sample r4.xyzw, r4.xyzx, t4.xyzw, s4
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.yyyy, r1.xyzx
					mul r0.xyz, r0.xzwx, r1.xyzx
					mad o0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s2
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r2.wwww, t2.xyzw, s4
					sample r4.xyzw, r4.xyzx, t3.xyzw, s3
					mul r2.w, r4.w, r5.x
					mul r1.w, r1.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r2.wwww, t3.xyzw, s5
					sample r4.xyzw, r4.xyzx, t4.xyzw, s4
					mul r2.w, r4.w, r5.x
					mul r1.w, r1.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t3.xyzw, s5
					sample r4.xyzw, r4.xyzx, t4.xyzw, s4
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r2.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s3
					sample r2.xyzw, r0.xyxx, t1.xyzw, s1
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r0.xyzw, r0.xyxx, t3.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r2.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r2.wwww, t4.xyzw, s6
					sample r4.xyzw, r4.xyzx, t5.xyzw, s5
					mul r2.w, r4.w, r5.x
					mul r0.w, r0.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r1.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad o0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t1.xyzw, s3
					sample r4.xyzw, r4.xyzx, t2.xyzw, s2
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					sample r4.xyzw, r4.xyxx, t2.xyzw, s3
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					sample r4.xyzw, r4.xyxx, t1.xyzw, s2
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r0.xyzw, r0.xyxx, t2.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					sample r4.xyzw, r4.xyxx, t3.xyzw, s4
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r6.xyzx
					dp3_sat r0.y, r5.xyzx, r6.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r1.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r0.x, r1.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r1.w, r0.x
					mul r0.x, r0.x, r0.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r4.xyzx
					mul r0.xzw, r4.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.yyyy, r1.xyzx
					mul r0.xyz, r0.xzwx, r1.xyzx
					mad o0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s2
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					eq r2.w, cb2[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
					sample r4.xyzw, r4.xyxx, t2.xyzw, s3
					mul r2.w, r2.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					eq r2.w, cb2[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
					sample r4.xyzw, r4.xyxx, t3.xyzw, s4
					mul r2.w, r2.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r3.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					sample r4.xyzw, r4.xyxx, t3.xyzw, s4
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					mad r1.w, -r2.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s3
					sample r2.xyzw, r0.xyxx, t1.xyzw, s1
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r0.xyzw, r0.xyxx, t3.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					eq r2.w, cb2[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
					sample r4.xyzw, r4.xyxx, t4.xyzw, s5
					mul r2.w, r2.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r1.w, -r1.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r6.xyzx
					dp3_sat r0.y, r5.xyzx, r6.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r1.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r0.x, r1.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r1.w, r0.x
					mul r0.x, r0.x, r0.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r4.xyzx
					mul r0.xzw, r4.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad o0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					sample r4.xyzw, r4.xyxx, t1.xyzw, s2
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb3[11].xyzw
					div r5.xyz, r5.xyzx, r5.wwww
					sample_c_lz r2.w, r5.xyxx, t5.xxxx, s1, r5.z
					add r3.w, -cb3[24].x, l(1.000000)
					mad r2.w, r2.w, r3.w, cb3[24].x
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t2.xyzw, s4
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t3.xyzw, s5
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb3[11].xyzw
					div r5.xyz, r5.xyzx, r5.wwww
					sample_c_lz r2.w, r5.xyxx, t4.xxxx, s1, r5.z
					add r3.w, -cb3[24].x, l(1.000000)
					mad r2.w, r2.w, r3.w, cb3[24].x
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t1.xyzw, s3
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t2.xyzw, s4
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r0.xyzw, r0.xyxx, t2.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb3[11].xyzw
					div r5.xyz, r5.xyzx, r5.wwww
					sample_c_lz r2.w, r5.xyxx, t6.xxxx, s1, r5.z
					add r3.w, -cb3[24].x, l(1.000000)
					mad r2.w, r2.w, r3.w, cb3[24].x
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t3.xyzw, s5
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t4.xyzw, s6
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.yyyy, r1.xyzx
					mul r0.xyz, r0.xzwx, r1.xyzx
					mad o0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb3[11].xyzw
					div r5.xyz, r5.xyzx, r5.wwww
					sample_c_lz r3.w, r5.xyxx, t5.xxxx, s1, r5.z
					add r5.x, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r5.x, cb3[24].x
					add r2.w, r2.w, -r3.w
					mad r1.w, r1.w, r2.w, r3.w
					lt r2.w, l(0.000000), r4.z
					and r2.w, r2.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t2.xyzw, s4
					mul r2.w, r2.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t3.xyzw, s5
					mul r2.w, r2.w, r4.x
					mul r1.w, r1.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb3[11].xyzw
					div r5.xyz, r5.xyzx, r5.wwww
					sample_c_lz r3.w, r5.xyxx, t6.xxxx, s1, r5.z
					add r5.x, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r5.x, cb3[24].x
					add r2.w, r2.w, -r3.w
					mad r1.w, r1.w, r2.w, r3.w
					lt r2.w, l(0.000000), r4.z
					and r2.w, r2.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t3.xyzw, s5
					mul r2.w, r2.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t4.xyzw, s6
					mul r2.w, r2.w, r4.x
					mul r1.w, r1.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r3.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb3[11].xyzw
					div r5.xyz, r5.xyzx, r5.wwww
					sample_c_lz r3.w, r5.xyxx, t6.xxxx, s1, r5.z
					add r5.x, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r5.x, cb3[24].x
					add r1.w, r1.w, -r3.w
					mad r0.w, r0.w, r1.w, r3.w
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t3.xyzw, s5
					mul r1.w, r1.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t4.xyzw, s6
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r2.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s5
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s4
					sample r2.xyzw, r0.xyxx, t1.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r0.xyzw, r0.xyxx, t3.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r0.w, r2.w
					mad r0.w, cb3[25].w, r2.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb3[11].xyzw
					div r5.xyz, r5.xyzx, r5.wwww
					sample_c_lz r3.w, r5.xyxx, t7.xxxx, s1, r5.z
					add r5.x, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r5.x, cb3[24].x
					add r2.w, r2.w, -r3.w
					mad r0.w, r0.w, r2.w, r3.w
					lt r2.w, l(0.000000), r4.z
					and r2.w, r2.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t4.xyzw, s6
					mul r2.w, r2.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t5.xyzw, s7
					mul r2.w, r2.w, r4.x
					mul r0.w, r0.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r1.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad o0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb3[11].xyzw
					div r5.xyz, r5.xyzx, r5.wwww
					sample_c_lz r2.w, r5.xyxx, t4.xxxx, s1, r5.z
					add r3.w, -cb3[24].x, l(1.000000)
					mad r2.w, r2.w, r3.w, cb3[24].x
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t1.xyzw, s3
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t2.xyzw, s4
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[9].xyzx
					mad r0.xyz, cb0[9].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[13].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[13].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[13].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[17].xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[19].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r2.w, r0.w, l(0.990000)
					if_nz r2.w
					  mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					  mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					  mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					  add r5.xyzw, r5.xyzw, cb3[11].xyzw
					  div r5.xyz, r5.xyzx, r5.wwww
					  mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r6.xy, r6.xyxx
					  mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
					  add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
					  add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
					  max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
					  mov r9.x, r6.z
					  mov r9.y, r7.x
					  mov r9.z, r5.x
					  mov r9.w, r8.x
					  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r6.w
					  mov r8.y, r7.z
					  mov r8.z, r5.y
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r9.ywyw, r9.xzxz
					  add r10.xyzw, r7.yyww, r7.xxzz
					  div r5.xy, r9.ywyy, r8.zwzz
					  add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r6.zw, r7.yyyw, r10.yyyw
					  add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r7.xy, r5.xyxx, cb0[8].xxxx
					  mul r7.zw, r6.zzzw, cb0[8].yyyy
					  mul r8.xyzw, r8.xyzw, r10.xyzw
					  mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
					  sample_c_lz r2.w, r9.xyxx, t5.xxxx, s1, r5.z
					  sample_c_lz r3.w, r9.zwzz, t5.xxxx, s1, r5.z
					  mul r3.w, r3.w, r8.y
					  mad r2.w, r8.x, r2.w, r3.w
					  mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
					  sample_c_lz r3.w, r6.xyxx, t5.xxxx, s1, r5.z
					  mad r2.w, r8.z, r3.w, r2.w
					  sample_c_lz r3.w, r6.zwzz, t5.xxxx, s1, r5.z
					  mad r2.w, r8.w, r3.w, r2.w
					  add r3.w, -cb3[24].x, l(1.000000)
					  mad r2.w, r2.w, r3.w, cb3[24].x
					else 
					  mov r2.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t2.xyzw, s4
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t3.xyzw, s5
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[13].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[9].xyzx
					mad r0.w, r0.w, cb0[9].w, -cb0[10].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[13].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[13].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[17].xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[19].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r2.w, r0.w, l(0.990000)
					if_nz r2.w
					  mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					  mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					  mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					  add r5.xyzw, r5.xyzw, cb3[11].xyzw
					  div r5.xyz, r5.xyzx, r5.wwww
					  mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r6.xy, r6.xyxx
					  mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
					  add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
					  add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
					  max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
					  mov r9.x, r6.z
					  mov r9.y, r7.x
					  mov r9.z, r5.x
					  mov r9.w, r8.x
					  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r6.w
					  mov r8.y, r7.z
					  mov r8.z, r5.y
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r9.ywyw, r9.xzxz
					  add r10.xyzw, r7.yyww, r7.xxzz
					  div r5.xy, r9.ywyy, r8.zwzz
					  add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r6.zw, r7.yyyw, r10.yyyw
					  add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r7.xy, r5.xyxx, cb0[8].xxxx
					  mul r7.zw, r6.zzzw, cb0[8].yyyy
					  mul r8.xyzw, r8.xyzw, r10.xyzw
					  mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
					  sample_c_lz r2.w, r9.xyxx, t4.xxxx, s1, r5.z
					  sample_c_lz r3.w, r9.zwzz, t4.xxxx, s1, r5.z
					  mul r3.w, r3.w, r8.y
					  mad r2.w, r8.x, r2.w, r3.w
					  mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
					  sample_c_lz r3.w, r6.xyxx, t4.xxxx, s1, r5.z
					  mad r2.w, r8.z, r3.w, r2.w
					  sample_c_lz r3.w, r6.zwzz, t4.xxxx, s1, r5.z
					  mad r2.w, r8.w, r3.w, r2.w
					  add r3.w, -cb3[24].x, l(1.000000)
					  mad r2.w, r2.w, r3.w, cb3[24].x
					else 
					  mov r2.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t1.xyzw, s3
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t2.xyzw, s4
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[13].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.w, cb0[14].z, l(0.500000)
					mad r0.w, r1.y, cb0[14].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[9].xyzx
					mad r1.xyz, cb0[9].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[13].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[13].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r0.xyzw, r0.xyxx, t2.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[13].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[17].xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[19].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r2.w, r0.w, l(0.990000)
					if_nz r2.w
					  mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					  mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					  mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					  add r5.xyzw, r5.xyzw, cb3[11].xyzw
					  div r5.xyz, r5.xyzx, r5.wwww
					  mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r6.xy, r6.xyxx
					  mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
					  add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
					  add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
					  max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
					  mov r9.x, r6.z
					  mov r9.y, r7.x
					  mov r9.z, r5.x
					  mov r9.w, r8.x
					  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r6.w
					  mov r8.y, r7.z
					  mov r8.z, r5.y
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r9.ywyw, r9.xzxz
					  add r10.xyzw, r7.yyww, r7.xxzz
					  div r5.xy, r9.ywyy, r8.zwzz
					  add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r6.zw, r7.yyyw, r10.yyyw
					  add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r7.xy, r5.xyxx, cb0[8].xxxx
					  mul r7.zw, r6.zzzw, cb0[8].yyyy
					  mul r8.xyzw, r8.xyzw, r10.xyzw
					  mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
					  sample_c_lz r2.w, r9.xyxx, t6.xxxx, s1, r5.z
					  sample_c_lz r3.w, r9.zwzz, t6.xxxx, s1, r5.z
					  mul r3.w, r3.w, r8.y
					  mad r2.w, r8.x, r2.w, r3.w
					  mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
					  sample_c_lz r3.w, r6.xyxx, t6.xxxx, s1, r5.z
					  mad r2.w, r8.z, r3.w, r2.w
					  sample_c_lz r3.w, r6.zwzz, t6.xxxx, s1, r5.z
					  mad r2.w, r8.w, r3.w, r2.w
					  add r3.w, -cb3[24].x, l(1.000000)
					  mad r2.w, r2.w, r3.w, cb3[24].x
					else 
					  mov r2.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t3.xyzw, s5
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t4.xyzw, s6
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[13].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.yyyy, r1.xyzx
					mul r0.xyz, r0.xzwx, r1.xyzx
					mad o0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[9].xyzx
					mad r1.xyz, cb0[9].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[17].xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[19].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r1.w, l(0.990000)
					if_nz r3.w
					  mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					  mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					  mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					  add r5.xyzw, r5.xyzw, cb3[11].xyzw
					  div r5.xyz, r5.xyzx, r5.wwww
					  mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r6.xy, r6.xyxx
					  mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
					  add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
					  add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
					  max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
					  mov r9.x, r6.z
					  mov r9.y, r7.x
					  mov r9.z, r5.x
					  mov r9.w, r8.x
					  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r6.w
					  mov r8.y, r7.z
					  mov r8.z, r5.y
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r9.ywyw, r9.xzxz
					  add r10.xyzw, r7.yyww, r7.xxzz
					  div r5.xy, r9.ywyy, r8.zwzz
					  add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r6.zw, r7.yyyw, r10.yyyw
					  add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r7.xy, r5.xyxx, cb0[8].xxxx
					  mul r7.zw, r6.zzzw, cb0[8].yyyy
					  mul r8.xyzw, r8.xyzw, r10.xyzw
					  mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
					  sample_c_lz r3.w, r9.xyxx, t5.xxxx, s1, r5.z
					  sample_c_lz r5.x, r9.zwzz, t5.xxxx, s1, r5.z
					  mul r5.x, r5.x, r8.y
					  mad r3.w, r8.x, r3.w, r5.x
					  mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
					  sample_c_lz r5.x, r6.xyxx, t5.xxxx, s1, r5.z
					  mad r3.w, r8.z, r5.x, r3.w
					  sample_c_lz r5.x, r6.zwzz, t5.xxxx, s1, r5.z
					  mad r3.w, r8.w, r5.x, r3.w
					  add r5.x, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r5.x, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add r2.w, r2.w, -r3.w
					mad r1.w, r1.w, r2.w, r3.w
					lt r2.w, l(0.000000), r4.z
					and r2.w, r2.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t2.xyzw, s4
					mul r2.w, r2.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t3.xyzw, s5
					mul r2.w, r2.w, r4.x
					mul r1.w, r1.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[14].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[9].xyzx
					mad r1.xyz, cb0[9].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[13].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[17].xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[19].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r1.w, l(0.990000)
					if_nz r3.w
					  mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					  mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					  mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					  add r5.xyzw, r5.xyzw, cb3[11].xyzw
					  div r5.xyz, r5.xyzx, r5.wwww
					  mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r6.xy, r6.xyxx
					  mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
					  add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
					  add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
					  max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
					  mov r9.x, r6.z
					  mov r9.y, r7.x
					  mov r9.z, r5.x
					  mov r9.w, r8.x
					  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r6.w
					  mov r8.y, r7.z
					  mov r8.z, r5.y
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r9.ywyw, r9.xzxz
					  add r10.xyzw, r7.yyww, r7.xxzz
					  div r5.xy, r9.ywyy, r8.zwzz
					  add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r6.zw, r7.yyyw, r10.yyyw
					  add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r7.xy, r5.xyxx, cb0[8].xxxx
					  mul r7.zw, r6.zzzw, cb0[8].yyyy
					  mul r8.xyzw, r8.xyzw, r10.xyzw
					  mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
					  sample_c_lz r3.w, r9.xyxx, t6.xxxx, s1, r5.z
					  sample_c_lz r5.x, r9.zwzz, t6.xxxx, s1, r5.z
					  mul r5.x, r5.x, r8.y
					  mad r3.w, r8.x, r3.w, r5.x
					  mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
					  sample_c_lz r5.x, r6.xyxx, t6.xxxx, s1, r5.z
					  mad r3.w, r8.z, r5.x, r3.w
					  sample_c_lz r5.x, r6.zwzz, t6.xxxx, s1, r5.z
					  mad r3.w, r8.w, r5.x, r3.w
					  add r5.x, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r5.x, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add r2.w, r2.w, -r3.w
					mad r1.w, r1.w, r2.w, r3.w
					lt r2.w, l(0.000000), r4.z
					and r2.w, r2.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t3.xyzw, s5
					mul r2.w, r2.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t4.xyzw, s6
					mul r2.w, r2.w, r4.x
					mul r1.w, r1.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[14].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[9].xyzx
					mad r0.w, r0.w, cb0[9].w, -cb0[10].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[13].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[17].xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[19].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r3.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r0.w, l(0.990000)
					if_nz r3.w
					  mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					  mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					  mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					  add r5.xyzw, r5.xyzw, cb3[11].xyzw
					  div r5.xyz, r5.xyzx, r5.wwww
					  mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r6.xy, r6.xyxx
					  mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
					  add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
					  add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
					  max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
					  mov r9.x, r6.z
					  mov r9.y, r7.x
					  mov r9.z, r5.x
					  mov r9.w, r8.x
					  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r6.w
					  mov r8.y, r7.z
					  mov r8.z, r5.y
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r9.ywyw, r9.xzxz
					  add r10.xyzw, r7.yyww, r7.xxzz
					  div r5.xy, r9.ywyy, r8.zwzz
					  add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r6.zw, r7.yyyw, r10.yyyw
					  add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r7.xy, r5.xyxx, cb0[8].xxxx
					  mul r7.zw, r6.zzzw, cb0[8].yyyy
					  mul r8.xyzw, r8.xyzw, r10.xyzw
					  mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
					  sample_c_lz r3.w, r9.xyxx, t6.xxxx, s1, r5.z
					  sample_c_lz r5.x, r9.zwzz, t6.xxxx, s1, r5.z
					  mul r5.x, r5.x, r8.y
					  mad r3.w, r8.x, r3.w, r5.x
					  mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
					  sample_c_lz r5.x, r6.xyxx, t6.xxxx, s1, r5.z
					  mad r3.w, r8.z, r5.x, r3.w
					  sample_c_lz r5.x, r6.zwzz, t6.xxxx, s1, r5.z
					  mad r3.w, r8.w, r5.x, r3.w
					  add r5.x, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r5.x, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r3.w
					mad r0.w, r0.w, r1.w, r3.w
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t3.xyzw, s5
					mul r1.w, r1.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t4.xyzw, s6
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r2.w, cb0[14].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s5
					mul r0.w, cb0[14].z, l(0.500000)
					mad r0.w, r1.y, cb0[14].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s4
					sample r2.xyzw, r0.xyxx, t1.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[9].xyzx
					mad r2.xyz, cb0[9].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r0.xyzw, r0.xyxx, t3.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[13].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[17].xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[19].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r0.w, r2.w
					mad r0.w, cb3[25].w, r2.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r0.w, l(0.990000)
					if_nz r3.w
					  mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					  mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					  mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					  add r5.xyzw, r5.xyzw, cb3[11].xyzw
					  div r5.xyz, r5.xyzx, r5.wwww
					  mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r6.xy, r6.xyxx
					  mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
					  add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
					  add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
					  max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
					  mov r9.x, r6.z
					  mov r9.y, r7.x
					  mov r9.z, r5.x
					  mov r9.w, r8.x
					  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r6.w
					  mov r8.y, r7.z
					  mov r8.z, r5.y
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r9.ywyw, r9.xzxz
					  add r10.xyzw, r7.yyww, r7.xxzz
					  div r5.xy, r9.ywyy, r8.zwzz
					  add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r6.zw, r7.yyyw, r10.yyyw
					  add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r7.xy, r5.xyxx, cb0[8].xxxx
					  mul r7.zw, r6.zzzw, cb0[8].yyyy
					  mul r8.xyzw, r8.xyzw, r10.xyzw
					  mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
					  sample_c_lz r3.w, r9.xyxx, t7.xxxx, s1, r5.z
					  sample_c_lz r5.x, r9.zwzz, t7.xxxx, s1, r5.z
					  mul r5.x, r5.x, r8.y
					  mad r3.w, r8.x, r3.w, r5.x
					  mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
					  sample_c_lz r5.x, r6.xyxx, t7.xxxx, s1, r5.z
					  mad r3.w, r8.z, r5.x, r3.w
					  sample_c_lz r5.x, r6.zwzz, t7.xxxx, s1, r5.z
					  mad r3.w, r8.w, r5.x, r3.w
					  add r5.x, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r5.x, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add r2.w, r2.w, -r3.w
					mad r0.w, r0.w, r2.w, r3.w
					lt r2.w, l(0.000000), r4.z
					and r2.w, r2.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t4.xyzw, s6
					mul r2.w, r2.w, r5.w
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t5.xyzw, s7
					mul r2.w, r2.w, r4.x
					mul r0.w, r0.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r1.w, cb0[14].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad o0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[20], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 11
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[9].xyzx
					mad r0.xyz, cb0[9].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[13].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[13].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyzw, v6.yyyy, cb0[17].xyzw
					mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[19].xyzw
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r2.w, r0.w, l(0.990000)
					if_nz r2.w
					  mul r5.xyzw, v6.yyyy, cb3[9].xyzw
					  mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
					  mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
					  add r5.xyzw, r5.xyzw, cb3[11].xyzw
					  div r5.xyz, r5.xyzx, r5.wwww
					  mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r6.xy, r6.xyxx
					  mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
					  add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r8.xw, r7.xxxz, r7.xxxz
					  mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
					  add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
					  max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
					  mov r9.x, r6.z
					  mov r9.y, r7.x
					  mov r9.z, r5.x
					  mov r9.w, r8.x
					  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r8.x, r6.w
					  mov r8.y, r7.z
					  mov r8.z, r5.y
					  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r8.xyzw, r9.ywyw, r9.xzxz
					  add r10.xyzw, r7.yyww, r7.xxzz
					  div r5.xy, r9.ywyy, r8.zwzz
					  add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
					  div r6.zw, r7.yyyw, r10.yyyw
					  add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r7.xy, r5.xyxx, cb0[8].xxxx
					  mul r7.zw, r6.zzzw, cb0[8].yyyy
					  mul r8.xyzw, r8.xyzw, r10.xyzw
					  mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
					  sample_c_lz r2.w, r9.xyxx, t4.xxxx, s1, r5.z
					  sample_c_lz r3.w, r9.zwzz, t4.xxxx, s1, r5.z
					  mul r3.w, r3.w, r8.y
					  mad r2.w, r8.x, r2.w, r3.w
					  mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
					  sample_c_lz r3.w, r6.xyxx, t4.xxxx, s1, r5.z
					  mad r2.w, r8.z, r3.w, r2.w
					  sample_c_lz r3.w, r6.zwzz, t4.xxxx, s1, r5.z
					  mad r2.w, r8.w, r3.w, r2.w
					  add r3.w, -cb3[24].x, l(1.000000)
					  mad r2.w, r2.w, r3.w, cb3[24].x
					else 
					  mov r2.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					lt r1.w, l(0.000000), r4.z
					and r1.w, r1.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t1.xyzw, s3
					mul r1.w, r1.w, r5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t2.xyzw, s4
					mul r1.w, r1.w, r4.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[13].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t2.xyzw, s3
					add r2.w, r2.w, -r4.x
					mad r1.w, r1.w, r2.w, r4.x
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t1.xyzw, s2
					add r2.w, r2.w, -r4.x
					mad r1.w, r1.w, r2.w, r4.x
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v8.xyzx, v8.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v8.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v8.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r0.xyzw, r0.xyxx, t2.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t3.xyzw, s4
					add r2.w, r2.w, -r4.x
					mad r1.w, r1.w, r2.w, r4.x
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r6.xyzx
					dp3_sat r0.y, r5.xyzx, r6.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r1.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r0.x, r1.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r1.w, r0.x
					mul r0.x, r0.x, r0.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r4.xyzx
					mul r0.xzw, r4.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.yyyy, r1.xyzx
					mul r0.xyz, r0.xzwx, r1.xyzx
					mad o0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s2
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r2.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb5[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t2.xyzw, s3
					add r3.w, r3.w, -r4.x
					mad r2.w, r2.w, r3.w, r4.x
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r2.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb5[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t3.xyzw, s4
					add r3.w, r3.w, -r4.x
					mad r2.w, r2.w, r3.w, r4.x
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r1.w, r3.w
					mad r1.w, cb3[25].w, r3.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r3.w, cb5[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t3.xyzw, s4
					add r3.w, r3.w, -r4.x
					mad r1.w, r1.w, r3.w, r4.x
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					mad r1.w, -r2.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					// TEXCOORD                 8   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v8.xyzx, v8.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v8.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v8.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s3
					sample r2.xyzw, r0.xyxx, t1.xyzw, s1
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r0.xyzw, r0.xyxx, t3.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r2.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb5[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t4.xyzw, s5
					add r3.w, r3.w, -r4.x
					mad r2.w, r2.w, r3.w, r4.x
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r1.w, -r1.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r6.xyzx
					dp3_sat r0.y, r5.xyzx, r6.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r1.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r0.x, r1.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r1.w, r0.x
					mul r0.x, r0.x, r0.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r4.xyzx
					mul r0.xzw, r4.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad o0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t1.xyzw, s2
					add r2.w, r2.w, -r4.x
					mad r1.w, r1.w, r2.w, r4.x
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v8.xxxy, v8.wwww
					sample r5.xyzw, r4.zwzz, t2.xyzw, s3
					add r2.w, r2.w, -r5.x
					mad r1.w, r1.w, r2.w, r5.x
					sample r4.xyzw, r4.xyxx, t3.xyzw, s4
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v8.xxxy, v8.wwww
					sample r5.xyzw, r4.zwzz, t1.xyzw, s2
					add r2.w, r2.w, -r5.x
					mad r1.w, r1.w, r2.w, r5.x
					sample r4.xyzw, r4.xyxx, t2.xyzw, s3
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r0.xyzw, r0.xyxx, t2.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v8.xxxy, v8.wwww
					sample r5.xyzw, r4.zwzz, t3.xyzw, s4
					add r2.w, r2.w, -r5.x
					mad r1.w, r1.w, r2.w, r5.x
					sample r4.xyzw, r4.xyxx, t4.xyzw, s5
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r6.xyzx
					dp3_sat r0.y, r5.xyzx, r6.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r1.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r0.x, r1.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r1.w, r0.x
					mul r0.x, r0.x, r0.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r4.xyzx
					mul r0.xzw, r4.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.yyyy, r1.xyzx
					mul r0.xyz, r0.xzwx, r1.xyzx
					mad o0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s2
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb5[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.z
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v8.xxxy, v8.wwww
					sample r5.xyzw, r4.zwzz, t2.xyzw, s3
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r4.xyzw, r4.xyxx, t3.xyzw, s4
					mul r2.w, r2.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb5[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.z
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v8.xxxy, v8.wwww
					sample r5.xyzw, r4.zwzz, t3.xyzw, s4
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r4.xyzw, r4.xyxx, t4.xyzw, s5
					mul r2.w, r2.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r1.w, r3.w
					mad r1.w, cb3[25].w, r3.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r3.w, cb5[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.z
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v8.xxxy, v8.wwww
					sample r5.xyzw, r4.zwzz, t3.xyzw, s4
					add r3.w, r3.w, -r5.x
					mad r1.w, r1.w, r3.w, r5.x
					sample r4.xyzw, r4.xyxx, t4.xyzw, s5
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					mad r1.w, -r2.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s3
					sample r2.xyzw, r0.xyxx, t1.xyzw, s1
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r0.xyzw, r0.xyxx, t3.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb5[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.z
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v8.xxxy, v8.wwww
					sample r5.xyzw, r4.zwzz, t4.xyzw, s5
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r4.xyzw, r4.xyxx, t5.xyzw, s6
					mul r2.w, r2.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r1.w, -r1.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r6.xyzx
					dp3_sat r0.y, r5.xyzx, r6.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r1.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r0.x, r1.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r1.w, r0.x
					mul r0.x, r0.x, r0.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r4.xyzx
					mul r0.xzw, r4.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad o0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v8.xxxy, v8.wwww
					sample r5.xyzw, r4.zwzz, t1.xyzw, s2
					add r2.w, r2.w, -r5.x
					mad r1.w, r1.w, r2.w, r5.x
					sample r4.xyzw, r4.xyxx, t2.xyzw, s3
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r2.w, |r5.y|, |r5.x|
					max r2.w, |r5.z|, r2.w
					add r2.w, r2.w, -cb2[2].z
					max r2.w, r2.w, l(0.000010)
					mul r2.w, r2.w, cb2[2].w
					div r2.w, cb2[2].y, r2.w
					add r2.w, r2.w, -cb2[2].x
					add r2.w, -r2.w, l(1.000000)
					sample_c_lz r2.w, r5.xyzx, t4.xxxx, s1, r2.w
					add r3.w, -cb3[24].x, l(1.000000)
					mad r2.w, r2.w, r3.w, cb3[24].x
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t2.xyzw, s4
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r2.w, |r5.y|, |r5.x|
					max r2.w, |r5.z|, r2.w
					add r2.w, r2.w, -cb2[2].z
					max r2.w, r2.w, l(0.000010)
					mul r2.w, r2.w, cb2[2].w
					div r2.w, cb2[2].y, r2.w
					add r2.w, r2.w, -cb2[2].x
					add r2.w, -r2.w, l(1.000000)
					sample_c_lz r2.w, r5.xyzx, t3.xxxx, s1, r2.w
					add r3.w, -cb3[24].x, l(1.000000)
					mad r2.w, r2.w, r3.w, cb3[24].x
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t1.xyzw, s3
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r0.xyzw, r0.xyxx, t2.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r2.w, |r5.y|, |r5.x|
					max r2.w, |r5.z|, r2.w
					add r2.w, r2.w, -cb2[2].z
					max r2.w, r2.w, l(0.000010)
					mul r2.w, r2.w, cb2[2].w
					div r2.w, cb2[2].y, r2.w
					add r2.w, r2.w, -cb2[2].x
					add r2.w, -r2.w, l(1.000000)
					sample_c_lz r2.w, r5.xyzx, t5.xxxx, s1, r2.w
					add r3.w, -cb3[24].x, l(1.000000)
					mad r2.w, r2.w, r3.w, cb3[24].x
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t3.xyzw, s5
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.yyyy, r1.xyzx
					mul r0.xyz, r0.xzwx, r1.xyzx
					mad o0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r3.w, |r5.y|, |r5.x|
					max r3.w, |r5.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.w, r5.xyzx, t4.xxxx, s1, r3.w
					add r4.w, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r4.w, cb3[24].x
					add r2.w, r2.w, -r3.w
					mad r1.w, r1.w, r2.w, r3.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t2.xyzw, s4
					mul r1.w, r1.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r3.w, |r5.y|, |r5.x|
					max r3.w, |r5.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.w, r5.xyzx, t5.xxxx, s1, r3.w
					add r4.w, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r4.w, cb3[24].x
					add r2.w, r2.w, -r3.w
					mad r1.w, r1.w, r2.w, r3.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t3.xyzw, s5
					mul r1.w, r1.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r3.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r3.w, |r5.y|, |r5.x|
					max r3.w, |r5.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.w, r5.xyzx, t5.xxxx, s1, r3.w
					add r4.w, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r4.w, cb3[24].x
					add r1.w, r1.w, -r3.w
					mad r0.w, r0.w, r1.w, r3.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t3.xyzw, s5
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r2.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s5
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s4
					sample r2.xyzw, r0.xyxx, t1.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r0.xyzw, r0.xyxx, t3.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r0.w, r2.w
					mad r0.w, cb3[25].w, r2.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r3.w, |r5.y|, |r5.x|
					max r3.w, |r5.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.w, r5.xyzx, t6.xxxx, s1, r3.w
					add r4.w, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r4.w, cb3[24].x
					add r2.w, r2.w, -r3.w
					mad r0.w, r0.w, r2.w, r3.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t4.xyzw, s6
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r1.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad o0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r2.w, |r5.y|, |r5.x|
					max r2.w, |r5.z|, r2.w
					add r2.w, r2.w, -cb2[2].z
					max r2.w, r2.w, l(0.000010)
					mul r2.w, r2.w, cb2[2].w
					div r2.w, cb2[2].y, r2.w
					add r2.w, r2.w, -cb2[2].x
					add r2.w, -r2.w, l(1.000000)
					sample_c_lz r2.w, r5.xyzx, t3.xxxx, s1, r2.w
					add r3.w, -cb3[24].x, l(1.000000)
					mad r2.w, r2.w, r3.w, cb3[24].x
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t1.xyzw, s3
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r2.w, r0.w, l(0.990000)
					if_nz r2.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r2.w, |r5.y|, |r5.x|
					  max r2.w, |r5.z|, r2.w
					  add r2.w, r2.w, -cb2[2].z
					  max r2.w, r2.w, l(0.000010)
					  mul r2.w, r2.w, cb2[2].w
					  div r2.w, cb2[2].y, r2.w
					  add r2.w, r2.w, -cb2[2].x
					  add r2.w, -r2.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t4.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t4.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t4.xxxx, s1, r2.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t4.xxxx, s1, r2.w
					  dp4 r2.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r3.w, -cb3[24].x, l(1.000000)
					  mad r2.w, r2.w, r3.w, cb3[24].x
					else 
					  mov r2.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t2.xyzw, s4
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r2.w, r0.w, l(0.990000)
					if_nz r2.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r2.w, |r5.y|, |r5.x|
					  max r2.w, |r5.z|, r2.w
					  add r2.w, r2.w, -cb2[2].z
					  max r2.w, r2.w, l(0.000010)
					  mul r2.w, r2.w, cb2[2].w
					  div r2.w, cb2[2].y, r2.w
					  add r2.w, r2.w, -cb2[2].x
					  add r2.w, -r2.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t3.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t3.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t3.xxxx, s1, r2.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t3.xxxx, s1, r2.w
					  dp4 r2.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r3.w, -cb3[24].x, l(1.000000)
					  mad r2.w, r2.w, r3.w, cb3[24].x
					else 
					  mov r2.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t1.xyzw, s3
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r0.xyzw, r0.xyxx, t2.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r2.w, r0.w, l(0.990000)
					if_nz r2.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r2.w, |r5.y|, |r5.x|
					  max r2.w, |r5.z|, r2.w
					  add r2.w, r2.w, -cb2[2].z
					  max r2.w, r2.w, l(0.000010)
					  mul r2.w, r2.w, cb2[2].w
					  div r2.w, cb2[2].y, r2.w
					  add r2.w, r2.w, -cb2[2].x
					  add r2.w, -r2.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t5.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t5.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t5.xxxx, s1, r2.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t5.xxxx, s1, r2.w
					  dp4 r2.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r3.w, -cb3[24].x, l(1.000000)
					  mad r2.w, r2.w, r3.w, cb3[24].x
					else 
					  mov r2.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t3.xyzw, s5
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.yyyy, r1.xyzx
					mul r0.xyz, r0.xzwx, r1.xyzx
					mad o0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r1.w, l(0.990000)
					if_nz r3.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r3.w, |r5.y|, |r5.x|
					  max r3.w, |r5.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t4.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t4.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t4.xxxx, s1, r3.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t4.xxxx, s1, r3.w
					  dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r4.w, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r4.w, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add r2.w, r2.w, -r3.w
					mad r1.w, r1.w, r2.w, r3.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t2.xyzw, s4
					mul r1.w, r1.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r1.w, l(0.990000)
					if_nz r3.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r3.w, |r5.y|, |r5.x|
					  max r3.w, |r5.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t5.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t5.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t5.xxxx, s1, r3.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t5.xxxx, s1, r3.w
					  dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r4.w, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r4.w, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add r2.w, r2.w, -r3.w
					mad r1.w, r1.w, r2.w, r3.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t3.xyzw, s5
					mul r1.w, r1.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r3.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r0.w, l(0.990000)
					if_nz r3.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r3.w, |r5.y|, |r5.x|
					  max r3.w, |r5.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t5.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t5.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t5.xxxx, s1, r3.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t5.xxxx, s1, r3.w
					  dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r4.w, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r4.w, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r3.w
					mad r0.w, r0.w, r1.w, r3.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t3.xyzw, s5
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r2.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s5
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s4
					sample r2.xyzw, r0.xyxx, t1.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r0.xyzw, r0.xyxx, t3.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r0.w, r2.w
					mad r0.w, cb3[25].w, r2.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r0.w, l(0.990000)
					if_nz r3.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r3.w, |r5.y|, |r5.x|
					  max r3.w, |r5.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t6.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t6.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t6.xxxx, s1, r3.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t6.xxxx, s1, r3.w
					  dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r4.w, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r4.w, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add r2.w, r2.w, -r3.w
					mad r0.w, r0.w, r2.w, r3.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t4.xyzw, s6
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r1.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad o0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r2.w, r0.w, l(0.990000)
					if_nz r2.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r2.w, |r5.y|, |r5.x|
					  max r2.w, |r5.z|, r2.w
					  add r2.w, r2.w, -cb2[2].z
					  max r2.w, r2.w, l(0.000010)
					  mul r2.w, r2.w, cb2[2].w
					  div r2.w, cb2[2].y, r2.w
					  add r2.w, r2.w, -cb2[2].x
					  add r2.w, -r2.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t3.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t3.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t3.xxxx, s1, r2.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t3.xxxx, s1, r2.w
					  dp4 r2.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r3.w, -cb3[24].x, l(1.000000)
					  mad r2.w, r2.w, r3.w, cb3[24].x
					else 
					  mov r2.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t1.xyzw, s3
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r2.w, |r5.y|, |r5.x|
					max r2.w, |r5.z|, r2.w
					add r2.w, r2.w, -cb2[2].z
					max r2.w, r2.w, l(0.000010)
					mul r2.w, r2.w, cb2[2].w
					div r2.w, cb2[2].y, r2.w
					add r2.w, r2.w, -cb2[2].x
					add r2.w, -r2.w, l(1.000000)
					sample_c_lz r2.w, r5.xyzx, t5.xxxx, s1, r2.w
					add r3.w, -cb3[24].x, l(1.000000)
					mad r2.w, r2.w, r3.w, cb3[24].x
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t2.xyzw, s5
					sample r4.xyzw, r4.xyzx, t3.xyzw, s4
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r2.w, |r5.y|, |r5.x|
					max r2.w, |r5.z|, r2.w
					add r2.w, r2.w, -cb2[2].z
					max r2.w, r2.w, l(0.000010)
					mul r2.w, r2.w, cb2[2].w
					div r2.w, cb2[2].y, r2.w
					add r2.w, r2.w, -cb2[2].x
					add r2.w, -r2.w, l(1.000000)
					sample_c_lz r2.w, r5.xyzx, t4.xxxx, s1, r2.w
					add r3.w, -cb3[24].x, l(1.000000)
					mad r2.w, r2.w, r3.w, cb3[24].x
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t1.xyzw, s4
					sample r4.xyzw, r4.xyzx, t2.xyzw, s3
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r0.xyzw, r0.xyxx, t2.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r2.w, |r5.y|, |r5.x|
					max r2.w, |r5.z|, r2.w
					add r2.w, r2.w, -cb2[2].z
					max r2.w, r2.w, l(0.000010)
					mul r2.w, r2.w, cb2[2].w
					div r2.w, cb2[2].y, r2.w
					add r2.w, r2.w, -cb2[2].x
					add r2.w, -r2.w, l(1.000000)
					sample_c_lz r2.w, r5.xyzx, t6.xxxx, s1, r2.w
					add r3.w, -cb3[24].x, l(1.000000)
					mad r2.w, r2.w, r3.w, cb3[24].x
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t3.xyzw, s6
					sample r4.xyzw, r4.xyzx, t4.xyzw, s5
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.yyyy, r1.xyzx
					mul r0.xyz, r0.xzwx, r1.xyzx
					mad o0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r3.w, |r5.y|, |r5.x|
					max r3.w, |r5.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.w, r5.xyzx, t5.xxxx, s1, r3.w
					add r4.w, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r4.w, cb3[24].x
					add r2.w, r2.w, -r3.w
					mad r1.w, r1.w, r2.w, r3.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r2.wwww, t2.xyzw, s5
					sample r4.xyzw, r4.xyzx, t3.xyzw, s4
					mul r2.w, r4.w, r5.x
					mul r1.w, r1.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r3.w, |r5.y|, |r5.x|
					max r3.w, |r5.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.w, r5.xyzx, t6.xxxx, s1, r3.w
					add r4.w, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r4.w, cb3[24].x
					add r2.w, r2.w, -r3.w
					mad r1.w, r1.w, r2.w, r3.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r2.wwww, t3.xyzw, s6
					sample r4.xyzw, r4.xyzx, t4.xyzw, s5
					mul r2.w, r4.w, r5.x
					mul r1.w, r1.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r3.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r3.w, |r5.y|, |r5.x|
					max r3.w, |r5.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.w, r5.xyzx, t6.xxxx, s1, r3.w
					add r4.w, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r4.w, cb3[24].x
					add r1.w, r1.w, -r3.w
					mad r0.w, r0.w, r1.w, r3.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t3.xyzw, s6
					sample r4.xyzw, r4.xyzx, t4.xyzw, s5
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r2.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s5
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s4
					sample r2.xyzw, r0.xyxx, t1.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r0.xyzw, r0.xyxx, t3.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r0.w, r2.w
					mad r0.w, cb3[25].w, r2.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r3.w, |r5.y|, |r5.x|
					max r3.w, |r5.z|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r3.w, r5.xyzx, t7.xxxx, s1, r3.w
					add r4.w, -cb3[24].x, l(1.000000)
					mad r3.w, r3.w, r4.w, cb3[24].x
					add r2.w, r2.w, -r3.w
					mad r0.w, r0.w, r2.w, r3.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r2.wwww, t4.xyzw, s7
					sample r4.xyzw, r4.xyzx, t5.xyzw, s6
					mul r2.w, r4.w, r5.x
					mul r0.w, r0.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r1.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad o0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					add r5.xyz, v6.xyzx, -cb2[1].xyzx
					max r2.w, |r5.y|, |r5.x|
					max r2.w, |r5.z|, r2.w
					add r2.w, r2.w, -cb2[2].z
					max r2.w, r2.w, l(0.000010)
					mul r2.w, r2.w, cb2[2].w
					div r2.w, cb2[2].y, r2.w
					add r2.w, r2.w, -cb2[2].x
					add r2.w, -r2.w, l(1.000000)
					sample_c_lz r2.w, r5.xyzx, t4.xxxx, s1, r2.w
					add r3.w, -cb3[24].x, l(1.000000)
					mad r2.w, r2.w, r3.w, cb3[24].x
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t1.xyzw, s4
					sample r4.xyzw, r4.xyzx, t2.xyzw, s3
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r2.w, r0.w, l(0.990000)
					if_nz r2.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r2.w, |r5.y|, |r5.x|
					  max r2.w, |r5.z|, r2.w
					  add r2.w, r2.w, -cb2[2].z
					  max r2.w, r2.w, l(0.000010)
					  mul r2.w, r2.w, cb2[2].w
					  div r2.w, cb2[2].y, r2.w
					  add r2.w, r2.w, -cb2[2].x
					  add r2.w, -r2.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t5.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t5.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t5.xxxx, s1, r2.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t5.xxxx, s1, r2.w
					  dp4 r2.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r3.w, -cb3[24].x, l(1.000000)
					  mad r2.w, r2.w, r3.w, cb3[24].x
					else 
					  mov r2.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t2.xyzw, s5
					sample r4.xyzw, r4.xyzx, t3.xyzw, s4
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r2.w, r0.w, l(0.990000)
					if_nz r2.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r2.w, |r5.y|, |r5.x|
					  max r2.w, |r5.z|, r2.w
					  add r2.w, r2.w, -cb2[2].z
					  max r2.w, r2.w, l(0.000010)
					  mul r2.w, r2.w, cb2[2].w
					  div r2.w, cb2[2].y, r2.w
					  add r2.w, r2.w, -cb2[2].x
					  add r2.w, -r2.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t4.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t4.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t4.xxxx, s1, r2.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t4.xxxx, s1, r2.w
					  dp4 r2.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r3.w, -cb3[24].x, l(1.000000)
					  mad r2.w, r2.w, r3.w, cb3[24].x
					else 
					  mov r2.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t1.xyzw, s4
					sample r4.xyzw, r4.xyzx, t2.xyzw, s3
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r0.xyzw, r0.xyxx, t2.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r2.w, r0.w, l(0.990000)
					if_nz r2.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r2.w, |r5.y|, |r5.x|
					  max r2.w, |r5.z|, r2.w
					  add r2.w, r2.w, -cb2[2].z
					  max r2.w, r2.w, l(0.000010)
					  mul r2.w, r2.w, cb2[2].w
					  div r2.w, cb2[2].y, r2.w
					  add r2.w, r2.w, -cb2[2].x
					  add r2.w, -r2.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t6.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t6.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t6.xxxx, s1, r2.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t6.xxxx, s1, r2.w
					  dp4 r2.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r3.w, -cb3[24].x, l(1.000000)
					  mad r2.w, r2.w, r3.w, cb3[24].x
					else 
					  mov r2.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t3.xyzw, s6
					sample r4.xyzw, r4.xyzx, t4.xyzw, s5
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.yyyy, r1.xyzx
					mul r0.xyz, r0.xzwx, r1.xyzx
					mad o0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r1.w, l(0.990000)
					if_nz r3.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r3.w, |r5.y|, |r5.x|
					  max r3.w, |r5.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t5.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t5.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t5.xxxx, s1, r3.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t5.xxxx, s1, r3.w
					  dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r4.w, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r4.w, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add r2.w, r2.w, -r3.w
					mad r1.w, r1.w, r2.w, r3.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r2.wwww, t2.xyzw, s5
					sample r4.xyzw, r4.xyzx, t3.xyzw, s4
					mul r2.w, r4.w, r5.x
					mul r1.w, r1.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r1.w, l(0.990000)
					if_nz r3.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r3.w, |r5.y|, |r5.x|
					  max r3.w, |r5.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t6.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t6.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t6.xxxx, s1, r3.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t6.xxxx, s1, r3.w
					  dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r4.w, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r4.w, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add r2.w, r2.w, -r3.w
					mad r1.w, r1.w, r2.w, r3.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r2.wwww, t3.xyzw, s6
					sample r4.xyzw, r4.xyzx, t4.xyzw, s5
					mul r2.w, r4.w, r5.x
					mul r1.w, r1.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r3.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r0.w, l(0.990000)
					if_nz r3.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r3.w, |r5.y|, |r5.x|
					  max r3.w, |r5.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t6.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t6.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t6.xxxx, s1, r3.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t6.xxxx, s1, r3.w
					  dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r4.w, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r4.w, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r3.w
					mad r0.w, r0.w, r1.w, r3.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t3.xyzw, s6
					sample r4.xyzw, r4.xyzx, t4.xyzw, s5
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r2.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s5
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s4
					sample r2.xyzw, r0.xyxx, t1.xyzw, s2
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r0.xyzw, r0.xyxx, t3.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r0.w, r2.w
					mad r0.w, cb3[25].w, r2.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, r0.w, l(0.990000)
					if_nz r3.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r3.w, |r5.y|, |r5.x|
					  max r3.w, |r5.z|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t7.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t7.xxxx, s1, r3.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t7.xxxx, s1, r3.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t7.xxxx, s1, r3.w
					  dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r4.w, -cb3[24].x, l(1.000000)
					  mad r3.w, r3.w, r4.w, cb3[24].x
					else 
					  mov r3.w, l(1.000000)
					endif 
					add r2.w, r2.w, -r3.w
					mad r0.w, r0.w, r2.w, r3.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r2.wwww, t4.xyzw, s7
					sample r4.xyzw, r4.xyzx, t5.xyzw, s6
					mul r2.w, r4.w, r5.x
					mul r0.w, r0.w, r2.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r1.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad o0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r0.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.w, r1.w
					mad r0.w, cb3[25].w, r1.w, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.w, cb5[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					lt r2.w, r0.w, l(0.990000)
					if_nz r2.w
					  add r5.xyz, v6.xyzx, -cb2[1].xyzx
					  max r2.w, |r5.y|, |r5.x|
					  max r2.w, |r5.z|, r2.w
					  add r2.w, r2.w, -cb2[2].z
					  max r2.w, r2.w, l(0.000010)
					  mul r2.w, r2.w, cb2[2].w
					  div r2.w, cb2[2].y, r2.w
					  add r2.w, r2.w, -cb2[2].x
					  add r2.w, -r2.w, l(1.000000)
					  add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.x, r6.xyzx, t4.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r6.y, r7.xyzx, t4.xxxx, s1, r2.w
					  add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.z, r7.xyzx, t4.xxxx, s1, r2.w
					  add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
					  sample_c_lz r6.w, r5.xyzx, t4.xxxx, s1, r2.w
					  dp4 r2.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r3.w, -cb3[24].x, l(1.000000)
					  mad r2.w, r2.w, r3.w, cb3[24].x
					else 
					  mov r2.w, l(1.000000)
					endif 
					add r1.w, r1.w, -r2.w
					mad r0.w, r0.w, r1.w, r2.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r1.wwww, t1.xyzw, s4
					sample r4.xyzw, r4.xyzx, t2.xyzw, s3
					mul r1.w, r4.w, r5.x
					mul r0.w, r0.w, r1.w
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t2.xyzw, s3
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t1.xyzw, s2
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" "_PARALLAXMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t1.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul r2.xyz, r0.zzzz, r2.xyzx
					sample r0.xyzw, r0.xyxx, t2.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t3.xyzw, s4
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					add r0.w, -cb0[8].w, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.yyyy, r1.xyzx
					mul r0.xyz, r0.xzwx, r1.xyzx
					mad o0.xyz, r2.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s2
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t2.xyzw, s3
					mul r1.w, r1.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t3.xyzw, s4
					mul r1.w, r1.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r1.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r1.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t3.xyzw, s4
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r2.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r4.xyzx
					dp3_sat r2.y, r5.xyzx, r4.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r6.xxyz
					mul r3.xyz, r6.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v9.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					dp3 r0.x, v9.xyzx, v9.xyzx
					rsq r0.x, r0.x
					mul r0.yz, r0.xxxx, v9.xxyx
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.w, cb0[9].z, l(0.500000)
					mad r0.w, r1.y, cb0[9].z, -r0.w
					mad r0.x, v9.z, r0.x, l(0.420000)
					div r0.xy, r0.yzyy, r0.xxxx
					mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t2.xyzw, s3
					sample r2.xyzw, r0.xyxx, t1.xyzw, s1
					mul r3.xyz, r2.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r2.xyz, r1.xxxx, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -r1.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.zzzz, r3.xyzx
					sample r0.xyzw, r0.xyxx, t3.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r3.xyz, r0.yyyy, v4.xyzx
					mad r0.xyw, v3.xyxz, r0.xxxx, r3.xyxz
					mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.w, r2.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r5.xyzw, cb1[46].xyzw
					dp3 r2.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r2.wwww, t4.xyzw, s5
					mul r0.w, r0.w, r4.x
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r2.w, r4.xyzx, r4.xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, r4.xyzx
					mul r6.xyz, r0.wwww, cb0[2].xyzx
					mad r0.w, -r1.w, cb0[9].x, l(1.000000)
					mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
					dp3 r1.w, r4.xyzx, r4.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r4.xyz, r1.wwww, r4.xyzx
					dp3 r1.w, r0.xyzx, -r3.xyzx
					dp3_sat r2.w, r0.xyzx, r5.xyzx
					dp3_sat r0.x, r0.xyzx, r4.xyzx
					dp3_sat r0.y, r5.xyzx, r4.xyzx
					mul r0.z, r0.y, r0.y
					dp2 r0.z, r0.zzzz, r0.wwww
					add r0.z, r0.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r0.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r0.z, r0.z, r3.y, l(1.000000)
					mul r0.z, r0.z, r3.x
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r0.x, r0.w, -r0.x
					mad r0.x, r3.x, r0.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r0.x, r0.x, r0.x, l(0.000000)
					div r0.x, r0.w, r0.x
					mul r0.x, r0.x, r1.w
					mul r0.x, r0.x, l(3.141593)
					max r0.x, r0.x, l(0.000100)
					sqrt r0.x, r0.x
					mul r0.xz, r2.wwww, r0.xxzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.x, r0.w, r0.x
					mul r3.xyz, r0.zzzz, r6.xyzx
					mul r0.xzw, r6.xxyz, r0.xxxx
					add r0.y, -r0.y, l(1.000000)
					mul r1.w, r0.y, r0.y
					mul r1.w, r1.w, r1.w
					mul r0.y, r0.y, r1.w
					add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r4.xyzx, r0.yyyy, r2.xyzx
					mul r0.xyz, r0.xzwx, r2.xyzx
					mad o0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "ShadowCaster"
			LOD 300
			Tags { "LIGHTMODE" = "SHADOWCASTER" "PerformanceChecks" = "False" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			GpuProgramID 135084
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_output_siv o0.xyzw, position
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					div r1.x, cb1[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r0.x, r0.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[6], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb3[1].xyzw
					mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb2[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb2[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb2[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					mad o1.xy, v2.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_output_siv o0.xyzw, position
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[6], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb3[1].xyzw
					mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb2[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb2[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					div r1.x, cb2[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb2[5].y, r0.x, r0.z
					mad o1.xy, v2.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.x, r0.w, cb0[2].w, -cb0[3].x
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.x, r0.w, cb0[2].w, -cb0[3].x
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "DEFERRED"
			LOD 300
			Tags { "LIGHTMODE" = "DEFERRED" "PerformanceChecks" = "False" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 214711
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "_NORMALMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_ALPHATEST_ON" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "_PARALLAXMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_NORMALMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "_NORMALMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_ALPHATEST_ON" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_NORMALMAP" "_PARALLAXMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_SEPARATE" "_ALPHATEST_ON" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_PARALLAXMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_ALPHATEST_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_PARALLAXMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "_NORMALMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_ALPHATEST_ON" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "_PARALLAXMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "UNITY_HDR_ON" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "_NORMALMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "UNITY_HDR_ON" "_NORMALMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "_ALPHATEST_ON" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "_NORMALMAP" "_PARALLAXMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "UNITY_HDR_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "UNITY_HDR_ON" "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" "_ALPHATEST_ON" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_PARALLAXMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_ALPHATEST_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_PARALLAXMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add o2.xyz, r0.xyzx, -cb1[4].xyzx
					mov o7.xyz, r0.xyzx
					mul r0.xyz, v4.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v4.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v4.zzzz, r0.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mul r1.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r1.xyz, cb2[4].xyzx, cb1[4].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb1[4].zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb2[7].xyzx
					add r1.xyz, r1.xyzx, -v0.xyzx
					dp3 o3.w, v4.xyzx, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r3.xyz, r0.yzxy, r2.zxyz
					mad r0.xyz, r2.yzxy, r0.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.w, v4.w, cb2[9].w
					mul o4.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, v1.xyzx, v1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v1.zxyz
					dp3 r0.w, v4.xyzx, v4.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v4.yzxy
					mul r3.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
					mul r0.xyz, r0.xyzx, v4.wwww
					dp3 o4.w, r0.xyzx, r1.xyzx
					dp3 o5.w, v1.xyzx, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					mul r0.xyz, r0.xyzx, cb0[10].xyzx
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "_NORMALMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					mul r0.xyz, r0.xyzx, cb0[10].xyzx
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_ALPHATEST_ON" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					mul o0.xyz, r0.xxxx, r1.xyzx
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "_PARALLAXMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.z, cb0[9].z, l(0.500000)
					mad r0.z, r1.y, cb0[9].z, -r0.z
					mad r0.xy, r0.zzzz, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t3.xyzw, s2
					add r0.z, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.z
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.xyxx, t2.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul o0.xyz, r0.zzzz, r2.xyzx
					mov o1.w, cb0[8].w
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s1
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s1
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					mul r0.xyz, r0.xyzx, cb0[10].xyzx
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t4.xyzw, s4
					mul r0.xyz, r0.xyzx, cb0[10].xyzx
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r1.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.w, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.w
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 4
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.z, cb0[9].z, l(0.500000)
					mad r0.z, r1.y, cb0[9].z, -r0.z
					mad r0.xy, r0.zzzz, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t4.xyzw, s3
					add r0.z, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.z
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r3.xyzw, r0.xyxx, t2.xyzw, s2
					sample r0.xyzw, r0.xyxx, t3.xyzw, s1
					mad r0.z, -r3.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.zzzz, r2.xyzx
					mad o1.xyz, r3.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r3.w, cb0[9].x
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					mul r0.xyz, r0.xyzx, cb0[10].xyzx
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_NORMALMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "_NORMALMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					mul r0.xyz, r0.xyzx, cb0[10].xyzx
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_ALPHATEST_ON" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					mul o0.xyz, r0.xxxx, r1.xyzx
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_NORMALMAP" "_PARALLAXMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.z, cb0[9].z, l(0.500000)
					mad r0.z, r1.y, cb0[9].z, -r0.z
					mad r0.xy, r0.zzzz, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t3.xyzw, s2
					add r0.z, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.z
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.xyxx, t2.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul o0.xyz, r0.zzzz, r2.xyzx
					mov o1.w, cb0[8].w
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s1
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s1
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					mul r0.xyz, r0.xyzx, cb0[10].xyzx
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t4.xyzw, s4
					mul r0.xyz, r0.xyzx, cb0[10].xyzx
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r1.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.w, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.w
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 4
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.z, cb0[9].z, l(0.500000)
					mad r0.z, r1.y, cb0[9].z, -r0.z
					mad r0.xy, r0.zzzz, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t4.xyzw, s3
					add r0.z, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.z
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r3.xyzw, r0.xyxx, t2.xyzw, s2
					sample r0.xyzw, r0.xyxx, t3.xyzw, s1
					mad r0.z, -r3.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.zzzz, r2.xyzx
					mad o1.xyz, r3.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r3.w, cb0[9].x
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					mul r0.xyz, r0.xyzx, cb0[10].xyzx
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					mul r0.xyz, r0.xyzx, cb0[10].xyzx
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_SEPARATE" "_ALPHATEST_ON" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					mul o0.xyz, r0.xxxx, r1.xyzx
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_PARALLAXMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.z, cb0[9].z, l(0.500000)
					mad r0.z, r1.y, cb0[9].z, -r0.z
					mad r0.xy, r0.zzzz, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t3.xyzw, s2
					add r0.z, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.z
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.xyxx, t2.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul o0.xyz, r0.zzzz, r2.xyzx
					mov o1.w, cb0[8].w
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s1
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s1
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					mul r0.xyz, r0.xyzx, cb0[10].xyzx
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t4.xyzw, s4
					mul r0.xyz, r0.xyzx, cb0[10].xyzx
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_ALPHATEST_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r1.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.w, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.w
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_PARALLAXMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 4
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.z, cb0[9].z, l(0.500000)
					mad r0.z, r1.y, cb0[9].z, -r0.z
					mad r0.xy, r0.zzzz, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t4.xyzw, s3
					add r0.z, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.z
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r3.xyzw, r0.xyxx, t2.xyzw, s2
					sample r0.xyzw, r0.xyxx, t3.xyzw, s1
					mad r0.z, -r3.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.zzzz, r2.xyzx
					mad o1.xyz, r3.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r3.w, cb0[9].x
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					mul o3.xyz, r0.xyzx, cb0[10].xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "_NORMALMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					mul o3.xyz, r0.xyzx, cb0[10].xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_ALPHATEST_ON" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					mul o0.xyz, r0.xxxx, r1.xyzx
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "_PARALLAXMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.z, cb0[9].z, l(0.500000)
					mad r0.z, r1.y, cb0[9].z, -r0.z
					mad r0.xy, r0.zzzz, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t3.xyzw, s2
					add r0.z, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.z
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.xyxx, t2.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul o0.xyz, r0.zzzz, r2.xyzx
					mov o1.w, cb0[8].w
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s1
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s1
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					mul o3.xyz, r0.xyzx, cb0[10].xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t4.xyzw, s4
					mul o3.xyz, r0.xyzx, cb0[10].xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r1.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.w, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.w
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 4
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.z, cb0[9].z, l(0.500000)
					mad r0.z, r1.y, cb0[9].z, -r0.z
					mad r0.xy, r0.zzzz, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t4.xyzw, s3
					add r0.z, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.z
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r3.xyzw, r0.xyxx, t2.xyzw, s2
					sample r0.xyzw, r0.xyxx, t3.xyzw, s1
					mad r0.z, -r3.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.zzzz, r2.xyzx
					mad o1.xyz, r3.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r3.w, cb0[9].x
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "UNITY_HDR_ON" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					mul o3.xyz, r0.xyzx, cb0[10].xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "_NORMALMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "UNITY_HDR_ON" "_NORMALMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					mul o3.xyz, r0.xyzx, cb0[10].xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "_ALPHATEST_ON" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					mul o0.xyz, r0.xxxx, r1.xyzx
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "_NORMALMAP" "_PARALLAXMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.z, cb0[9].z, l(0.500000)
					mad r0.z, r1.y, cb0[9].z, -r0.z
					mad r0.xy, r0.zzzz, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t3.xyzw, s2
					add r0.z, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.z
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.xyxx, t2.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul o0.xyz, r0.zzzz, r2.xyzx
					mov o1.w, cb0[8].w
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s1
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "UNITY_HDR_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s1
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					mul o3.xyz, r0.xyzx, cb0[10].xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "_EMISSION" "UNITY_HDR_ON" "_NORMALMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t4.xyzw, s4
					mul o3.xyz, r0.xyzx, cb0[10].xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r1.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.w, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.w
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRLIGHTMAP_COMBINED" "UNITY_HDR_ON" "_NORMALMAP" "_PARALLAXMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 4
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.z, cb0[9].z, l(0.500000)
					mad r0.z, r1.y, cb0[9].z, -r0.z
					mad r0.xy, r0.zzzz, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t4.xyzw, s3
					add r0.z, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.z
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r3.xyzw, r0.xyxx, t2.xyzw, s2
					sample r0.xyzw, r0.xyxx, t3.xyzw, s1
					mad r0.z, -r3.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.zzzz, r2.xyzx
					mad o1.xyz, r3.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r3.w, cb0[9].x
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					mul o3.xyz, r0.xyzx, cb0[10].xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mul r0.yzw, r1.xxyz, cb0[4].xxyz
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o1.w, cb0[8].w
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					mul o3.xyz, r0.xyzx, cb0[10].xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" "_ALPHATEST_ON" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
					mul o0.xyz, r0.xxxx, r1.xyzx
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					mov o1.w, cb0[8].w
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_PARALLAXMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.z, cb0[9].z, l(0.500000)
					mad r0.z, r1.y, cb0[9].z, -r0.z
					mad r0.xy, r0.zzzz, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t3.xyzw, s2
					add r0.z, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.z
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.xyxx, t2.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.z, -cb0[8].z, l(0.779084), l(0.779084)
					mul o0.xyz, r0.zzzz, r2.xyzx
					mov o1.w, cb0[8].w
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s1
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t2.xyzw, s2
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s1
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					dp3 r0.x, v5.xyzx, v5.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, v5.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					mul o3.xyz, r0.xyzx, cb0[10].xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_EMISSION" "UNITY_HDR_ON" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.x, -cb0[9].y, l(1.000000)
					mad o0.w, r0.y, cb0[9].y, r0.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					sample r0.xyzw, v1.xyxx, t4.xyzw, s4
					mul o3.xyz, r0.xyzx, cb0[10].xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_ALPHATEST_ON" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r1.xyzw, v1.xyxx, t3.xyzw, s3
					add r0.w, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.w
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.wwww, r1.xyzx
					mad o1.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r2.w, cb0[9].x
					sample r0.xyzw, v1.xyxx, t2.xyzw, s1
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_NORMALMAP" "DIRLIGHTMAP_SEPARATE" "_PARALLAXMAP" "_METALLICGLOSSMAP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 4
					mov r0.x, v3.w
					mov r0.y, v4.w
					mov r0.z, v5.w
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xy, r0.wwww, r0.xyxx
					mad r0.z, r0.z, r0.w, l(0.420000)
					div r0.xy, r0.xyxx, r0.zzzz
					sample r1.xyzw, v1.xyxx, t0.xyzw, s4
					mul r0.z, cb0[9].z, l(0.500000)
					mad r0.z, r1.y, cb0[9].z, -r0.z
					mad r0.xy, r0.zzzz, r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t4.xyzw, s3
					add r0.z, -cb0[9].y, l(1.000000)
					mad o0.w, r1.y, cb0[9].y, r0.z
					sample r1.xyzw, r0.xyxx, t1.xyzw, s0
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					sample r3.xyzw, r0.xyxx, t2.xyzw, s2
					sample r0.xyzw, r0.xyxx, t3.xyzw, s1
					mad r0.z, -r3.x, l(0.779084), l(0.779084)
					mul o0.xyz, r0.zzzz, r2.xyzx
					mad o1.xyz, r3.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul o1.w, r3.w, cb0[9].x
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[8].xxxx
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mov o3.xyzw, l(0,0,0,1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	SubShader {
		LOD 150
		Tags { "PerformanceChecks" = "False" "RenderType" = "Opaque" }
		Pass {
			Name "FORWARD"
			LOD 150
			Tags { "LIGHTMODE" = "FORWARDBASE" "PerformanceChecks" = "False" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Blend Zero Zero, Zero Zero
			ZWrite Off
			Cull Off
			GpuProgramID 353407
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o5.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r0.xyz, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r0.xyz, r0.xyzx
					mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r0.xyz, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r0.xyz, r0.xyzx
					mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r0.xyz, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r0.xyz, r0.xyzx
					mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o5.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r0.xyz, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r0.xyz, r0.xyzx
					mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o5.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r0.xyz, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r0.xyz, r0.xyzx
					mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o5.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r0.xyz, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r0.xyz, r0.xyzx
					mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r0.xyz, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r0.xyz, r0.xyzx
					mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r0.xyz, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r0.xyz, r0.xyzx
					mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r2.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r0.xyz, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r0.xyz, r0.xyzx
					mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o5.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r0.xyz, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r0.xyz, r0.xyzx
					mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r3.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r3.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r3.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r3.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r3.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb2[39].xyzw, r1.xyzw
					dp4 r3.y, cb2[40].xyzw, r1.xyzw
					dp4 r3.z, cb2[41].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r2.xyz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r2.xyz, r2.xyzx
					mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					add o6.xyz, r2.xyzx, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o3.w, r0.x
					mul r0.w, v4.w, cb3[9].w
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o5.xyz, r2.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r1.xyzw
					dp4 r3.y, cb2[43].xyzw, r1.xyzw
					dp4 r3.z, cb2[44].xyzw, r1.xyzw
					mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mov r2.w, l(1.000000)
					dp4 r3.x, cb2[39].xyzw, r2.xyzw
					dp4 r3.y, cb2[40].xyzw, r2.xyzw
					dp4 r3.z, cb2[41].xyzw, r2.xyzw
					add r1.xyz, r1.xyzx, r3.xyzx
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r1.xyz, r1.xyzx
					mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r1.xyz, r1.xyzx
					mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r2.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					add o6.xyz, r1.xyzx, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o3.w, r0.x
					mul r0.w, v4.w, cb3[9].w
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o5.xyz, r2.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r1.xyzw
					dp4 r3.y, cb2[43].xyzw, r1.xyzw
					dp4 r3.z, cb2[44].xyzw, r1.xyzw
					mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mov r2.w, l(1.000000)
					dp4 r3.x, cb2[39].xyzw, r2.xyzw
					dp4 r3.y, cb2[40].xyzw, r2.xyzw
					dp4 r3.z, cb2[41].xyzw, r2.xyzw
					add r1.xyz, r1.xyzx, r3.xyzx
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r1.xyz, r1.xyzx
					mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r1.xyz, r1.xyzx
					mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r2.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					add o6.xyz, r1.xyzx, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb2[39].xyzw, r1.xyzw
					dp4 r3.y, cb2[40].xyzw, r1.xyzw
					dp4 r3.z, cb2[41].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r2.xyz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r2.xyz, r2.xyzx
					mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					add o6.xyz, r2.xyzx, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb2[39].xyzw, r1.xyzw
					dp4 r3.y, cb2[40].xyzw, r1.xyzw
					dp4 r3.z, cb2[41].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r2.xyz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r2.xyz, r2.xyzx
					mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					add o6.xyz, r2.xyzx, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb2[39].xyzw, r1.xyzw
					dp4 r3.y, cb2[40].xyzw, r1.xyzw
					dp4 r3.z, cb2[41].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r2.xyz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r2.xyz, r2.xyzx
					mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					add o6.xyz, r2.xyzx, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o3.w, r0.x
					mul r0.w, v4.w, cb3[9].w
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o5.xyz, r2.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r1.xyzw
					dp4 r3.y, cb2[43].xyzw, r1.xyzw
					dp4 r3.z, cb2[44].xyzw, r1.xyzw
					mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mov r2.w, l(1.000000)
					dp4 r3.x, cb2[39].xyzw, r2.xyzw
					dp4 r3.y, cb2[40].xyzw, r2.xyzw
					dp4 r3.z, cb2[41].xyzw, r2.xyzw
					add r1.xyz, r1.xyzx, r3.xyzx
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r1.xyz, r1.xyzx
					mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r1.xyz, r1.xyzx
					mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r2.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					add o6.xyz, r1.xyzx, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o3.w, r0.x
					mul r0.w, v4.w, cb3[9].w
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o5.xyz, r2.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r1.xyzw
					dp4 r3.y, cb2[43].xyzw, r1.xyzw
					dp4 r3.z, cb2[44].xyzw, r1.xyzw
					mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mov r2.w, l(1.000000)
					dp4 r3.x, cb2[39].xyzw, r2.xyzw
					dp4 r3.y, cb2[40].xyzw, r2.xyzw
					dp4 r3.z, cb2[41].xyzw, r2.xyzw
					add r1.xyz, r1.xyzx, r3.xyzx
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r1.xyz, r1.xyzx
					mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r1.xyz, r1.xyzx
					mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r2.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					add o6.xyz, r1.xyzx, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o3.w, r0.x
					mul r0.w, v4.w, cb3[9].w
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mul o4.xyz, r0.wwww, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o5.xyz, r2.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r1.xyzw
					dp4 r3.y, cb2[43].xyzw, r1.xyzw
					dp4 r3.z, cb2[44].xyzw, r1.xyzw
					mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mov r2.w, l(1.000000)
					dp4 r3.x, cb2[39].xyzw, r2.xyzw
					dp4 r3.y, cb2[40].xyzw, r2.xyzw
					dp4 r3.z, cb2[41].xyzw, r2.xyzw
					add r1.xyz, r1.xyzx, r3.xyzx
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r1.xyz, r1.xyzx
					mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r1.xyz, r1.xyzx
					mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r2.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					add o6.xyz, r1.xyzx, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o5.xyz, r1.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb2[39].xyzw, r1.xyzw
					dp4 r3.y, cb2[40].xyzw, r1.xyzw
					dp4 r3.z, cb2[41].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r2.xyz, r2.xyzx
					mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r2.xyz, r2.xyzx
					mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb2[4].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb2[3].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					add o6.xyz, r2.xyzx, r0.xyzx
					mov o6.w, l(0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb2[1].xyzx
					mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb2[4].xyzx
					dp3 r3.y, v1.xyzx, cb2[5].xyzx
					dp3 r3.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb2[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb2[4].xyzx
					dp3 r1.y, v1.xyzx, cb2[5].xyzx
					dp3 r1.z, v1.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r2.xyzx
					add r3.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r3.xyzw
					mul r3.xyz, r1.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r2.y, r2.y
					mad r1.w, r2.x, r2.x, -r1.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r4.x, cb2[42].xyzw, r2.xyzw
					dp4 r4.y, cb2[43].xyzw, r2.xyzw
					dp4 r4.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o3.w, r1.x
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r1.xyzw, r3.zzzz, r2.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r2.xyzw
					mul r2.xyz, r1.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r3.y, r3.y
					mad r1.w, r3.x, r3.x, -r1.w
					mul r3.xyzw, r3.yzzx, r3.xyzz
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r3.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r2.xyzx, r3.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o3.w, r1.x
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r1.xyzw, r3.zzzz, r2.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r2.xyzw
					mul r2.xyz, r1.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r3.y, r3.y
					mad r1.w, r3.x, r3.x, -r1.w
					mul r3.xyzw, r3.yzzx, r3.xyzz
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r3.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r2.xyzx, r3.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r2.xyzx
					add r3.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r3.xyzw
					mul r3.xyz, r1.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r2.y, r2.y
					mad r1.w, r2.x, r2.x, -r1.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r4.x, cb2[42].xyzw, r2.xyzw
					dp4 r4.y, cb2[43].xyzw, r2.xyzw
					dp4 r4.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r2.xyzx
					add r3.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r3.xyzw
					mul r3.xyz, r1.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r2.y, r2.y
					mad r1.w, r2.x, r2.x, -r1.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r4.x, cb2[42].xyzw, r2.xyzw
					dp4 r4.y, cb2[43].xyzw, r2.xyzw
					dp4 r4.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r2.xyzx
					add r3.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r3.xyzw
					mul r3.xyz, r1.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r2.y, r2.y
					mad r1.w, r2.x, r2.x, -r1.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r4.x, cb2[42].xyzw, r2.xyzw
					dp4 r4.y, cb2[43].xyzw, r2.xyzw
					dp4 r4.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o3.w, r1.x
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r1.xyzw, r3.zzzz, r2.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r2.xyzw
					mul r2.xyz, r1.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r3.y, r3.y
					mad r1.w, r3.x, r3.x, -r1.w
					mul r3.xyzw, r3.yzzx, r3.xyzz
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r3.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r2.xyzx, r3.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o3.w, r1.x
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r1.xyzw, r3.zzzz, r2.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r2.xyzw
					mul r2.xyz, r1.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r3.y, r3.y
					mad r1.w, r3.x, r3.x, -r1.w
					mul r3.xyzw, r3.yzzx, r3.xyzz
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r3.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r2.xyzx, r3.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o3.w, r1.x
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r3.xyzx, r3.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mul r1.w, v4.w, cb3[9].w
					mul o4.xyz, r1.wwww, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o5.xyz, r3.xyzx
					add r2.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r1.xyzw, r3.zzzz, r2.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r2.xyzw
					mul r2.xyz, r1.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r3.y, r3.y
					mad r1.w, r3.x, r3.x, -r1.w
					mul r3.xyzw, r3.yzzx, r3.xyzz
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r3.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r2.xyzx, r3.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mov o2.w, l(0)
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o5.xyz, r2.xyzx
					add r3.xyzw, -r1.xxxx, cb2[3].xyzw
					add r4.xyzw, -r1.yyyy, cb2[4].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
					mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
					max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r1.xyzw
					mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xyzw, r1.xyzw, r3.xyzw
					mul r3.xyz, r1.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
					mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
					mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
					mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.w, r2.y, r2.y
					mad r1.w, r2.x, r2.x, -r1.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r4.x, cb2[42].xyzw, r2.xyzw
					dp4 r4.y, cb2[43].xyzw, r2.xyzw
					dp4 r4.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r1.wwww, r4.xyzx
					mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
					mov o6.w, l(0)
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r1.xyzx
					mov o2.w, l(0)
					mov r0.w, l(0)
					mov o3.xyzw, r0.wwwx
					mov o4.xyzw, r0.wwwy
					mov o5.w, r0.z
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb2[1].xyzx
					mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mov o3.w, r0.x
					mul r1.xyz, v4.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.yzxy, r2.zxyz
					mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r2.xyzx
					mul r0.x, v4.w, cb2[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s3
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  mov r4.y, v3.w
					  mov r4.z, v4.w
					  mov r4.w, v5.w
					  movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
					dp3 r2.w, v2.xyzx, r2.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xzw, r2.xxyz, -r2.wwww, v2.xxyz
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					mad r1.w, -r4.x, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.x
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r3.xzwx, t3.xyzw, s0, r1.w
					add r1.w, r6.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r3.xzw, r6.xxyz, r1.wwww
					mul r3.xyz, r3.yyyy, r3.xzwx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r2.w, r1.w, r1.w
					mad r6.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
					dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
					mov_sat r1.w, r1.w
					dp3 r6.x, r6.xyzx, cb1[0].xyzx
					add r6.y, -r1.w, l(1.000000)
					mul r6.zw, r6.xxxy, r6.xxxy
					mul r2.yz, r6.xxyx, r6.xxwx
					mul r4.yz, r6.zzyz, r2.yyzy
					add r1.w, -r0.w, l(1.000000)
					add_sat r1.w, r1.w, cb0[8].w
					sample r6.xyzw, r4.ywyy, t2.xyzw, s2
					mul r2.y, r6.x, l(16.000000)
					mul r2.yzw, r0.xxyz, r2.yyyy
					mad r1.xyz, r1.xyzx, r0.wwww, r2.yzwy
					mul r2.xyz, r2.xxxx, r5.xyzx
					add r4.xyw, -r0.xyxz, r1.wwww
					mad r0.xyz, r4.zzzz, r4.xywx, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s3
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  mov r4.y, v3.w
					  mov r4.z, v4.w
					  mov r4.w, v5.w
					  movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
					dp3 r2.w, v2.xyzx, r2.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xzw, r2.xxyz, -r2.wwww, v2.xxyz
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					mul r6.xyz, r3.yyyy, v6.xyzx
					mad r1.w, -r4.x, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.x
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r3.xzwx, t4.xyzw, s0, r1.w
					add r1.w, r7.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r3.xzw, r7.xxyz, r1.wwww
					mul r3.xyz, r3.yyyy, r3.xzwx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r2.w, r1.w, r1.w
					mad r7.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
					dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
					mov_sat r1.w, r1.w
					dp3 r7.x, r7.xyzx, cb1[0].xyzx
					add r7.y, -r1.w, l(1.000000)
					mul r7.zw, r7.xxxy, r7.xxxy
					mul r2.yz, r7.xxyx, r7.xxwx
					mul r4.yz, r7.zzyz, r2.yyzy
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					sample r7.xyzw, r4.ywyy, t2.xyzw, s2
					mul r1.w, r7.x, l(16.000000)
					mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
					mul r4.xyw, r2.xxxx, r5.xyxz
					add r5.xyz, -r0.xyzx, r0.wwww
					mad r0.xyz, r4.zzzz, r5.xyzx, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					mad r0.xyz, r2.yzwy, r4.xywx, r0.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s5
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s3
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  mov r4.y, v3.w
					  mov r4.z, v4.w
					  mov r4.w, v5.w
					  movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					sample r3.xyzw, v1.xyxx, t2.xyzw, s5
					add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
					dp3 r2.w, v2.xyzx, r2.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xzw, r2.xxyz, -r2.wwww, v2.xxyz
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					mul r6.xyz, r3.yyyy, v6.xyzx
					mad r1.w, -r4.x, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.x
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r3.xzwx, t4.xyzw, s0, r1.w
					add r1.w, r7.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r3.xzw, r7.xxyz, r1.wwww
					mul r3.xyz, r3.yyyy, r3.xzwx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r2.w, r1.w, r1.w
					mad r7.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
					dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
					mov_sat r1.w, r1.w
					dp3 r7.x, r7.xyzx, cb1[0].xyzx
					add r7.y, -r1.w, l(1.000000)
					mul r7.zw, r7.xxxy, r7.xxxy
					mul r2.yz, r7.xxyx, r7.xxwx
					mul r4.yz, r7.zzyz, r2.yyzy
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					sample r7.xyzw, r4.ywyy, t3.xyzw, s2
					mul r1.w, r7.x, l(16.000000)
					mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
					mul r4.xyw, r2.xxxx, r5.xyxz
					add r5.xyz, -r0.xyzx, r0.wwww
					mad r0.xyz, r4.zzzz, r5.xyzx, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					mad o0.xyz, r2.yzwy, r4.xywx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s3
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  mov r4.y, v3.w
					  mov r4.z, v4.w
					  mov r4.w, v5.w
					  movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t6.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					sample r3.xyzw, v1.xyxx, t2.xyzw, s5
					add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
					dp3 r2.w, v2.xyzx, r2.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xzw, r2.xxyz, -r2.wwww, v2.xxyz
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					mul r6.xyz, r3.yyyy, v6.xyzx
					mad r1.w, -r4.x, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.x
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r3.xzwx, t5.xyzw, s0, r1.w
					add r1.w, r7.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r3.xzw, r7.xxyz, r1.wwww
					mul r3.xyz, r3.yyyy, r3.xzwx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r2.w, r1.w, r1.w
					mad r7.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
					dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
					mov_sat r1.w, r1.w
					dp3 r7.x, r7.xyzx, cb1[0].xyzx
					add r7.y, -r1.w, l(1.000000)
					mul r7.zw, r7.xxxy, r7.xxxy
					mul r2.yz, r7.xxyx, r7.xxwx
					mul r4.yz, r7.zzyz, r2.yyzy
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					sample r7.xyzw, r4.ywyy, t3.xyzw, s2
					mul r1.w, r7.x, l(16.000000)
					mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
					mul r4.xyw, r2.xxxx, r5.xyxz
					add r5.xyz, -r0.xyzx, r0.wwww
					mad r0.xyz, r4.zzzz, r5.xyzx, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					mad r0.xyz, r2.yzwy, r4.xywx, r0.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s6
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s3
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  mov r4.y, v3.w
					  mov r4.z, v4.w
					  mov r4.w, v5.w
					  movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
					dp3 r2.w, v2.xyzx, r2.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xzw, r2.xxyz, -r2.wwww, v2.xxyz
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					mul r6.xyz, r3.yyyy, v6.xyzx
					mad r1.w, -r4.x, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.x
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r3.xzwx, t3.xyzw, s0, r1.w
					add r1.w, r7.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r3.xzw, r7.xxyz, r1.wwww
					mul r3.xyz, r3.yyyy, r3.xzwx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r2.w, r1.w, r1.w
					mad r7.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
					dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
					mov_sat r1.w, r1.w
					dp3 r7.x, r7.xyzx, cb1[0].xyzx
					add r7.y, -r1.w, l(1.000000)
					mul r7.zw, r7.xxxy, r7.xxxy
					mul r2.yz, r7.xxyx, r7.xxwx
					mul r4.yz, r7.zzyz, r2.yyzy
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					sample r7.xyzw, r4.ywyy, t2.xyzw, s2
					mul r1.w, r7.x, l(16.000000)
					mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
					mul r4.xyw, r2.xxxx, r5.xyxz
					add r5.xyz, -r0.xyzx, r0.wwww
					mad r0.xyz, r4.zzzz, r5.xyzx, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					mad o0.xyz, r2.yzwy, r4.xywx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					eq r0.y, cb3[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb3[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r0.yyyy, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r0.y, r4.y, l(0.250000), l(0.750000)
					  mad r0.z, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.z, r0.y
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, v1.xyxx, t2.xyzw, s5
					mad r5.z, -r0.w, cb0[9].x, l(1.000000)
					dp3 r0.z, v2.xyzx, r3.xyzx
					add r0.z, r0.z, r0.z
					mad r4.xzw, r3.xxyz, -r0.zzzz, v2.xxyz
					mul r6.xyz, r0.yyyy, cb0[2].xyzx
					mul r7.xyz, r4.yyyy, v6.xyzx
					mad r0.y, -r5.z, l(0.700000), l(1.700000)
					mul r0.y, r0.y, r5.z
					mul r0.y, r0.y, l(6.000000)
					sample_l r8.xyzw, r4.xzwx, t4.xyzw, s0, r0.y
					add r0.y, r8.w, l(-1.000000)
					mad r0.y, cb2[3].w, r0.y, l(1.000000)
					mul r0.y, r0.y, cb2[3].x
					mul r4.xzw, r8.xxyz, r0.yyyy
					mul r4.xyz, r4.yyyy, r4.xzwx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.z, r0.y, r0.y
					mad r8.xyz, r3.xyzx, -r0.zzzz, -v2.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					mov_sat r0.y, r0.y
					dp3 r3.x, r8.xyzx, cb1[0].xyzx
					add r3.y, -r0.y, l(1.000000)
					mul r3.zw, r3.xxxy, r3.xxxy
					mul r3.xw, r3.xxxy, r3.xxxw
					mul r5.xy, r3.zyzz, r3.xwxx
					add r0.x, -r0.x, l(1.000000)
					mad_sat r0.x, r0.w, cb0[9].x, r0.x
					sample r3.xyzw, r5.xzxx, t3.xyzw, s2
					mul r0.y, r3.x, l(16.000000)
					mad r3.xyz, r0.yyyy, r1.xyzx, r2.xyzx
					mul r0.yzw, r0.zzzz, r6.xxyz
					add r5.xzw, -r1.xxyz, r0.xxxx
					mad r1.xyz, r5.yyyy, r5.xzwx, r1.xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					mad r1.xyz, r7.xyzx, r2.xyzx, r1.xyzx
					mad o0.xyz, r3.xyzx, r0.yzwy, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					eq r0.y, cb3[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb3[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r0.yyyy, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r0.y, r4.y, l(0.250000), l(0.750000)
					  mad r0.z, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.z, r0.y
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, v1.xyxx, t2.xyzw, s5
					mad r5.z, -r0.w, cb0[9].x, l(1.000000)
					dp3 r0.z, v2.xyzx, r3.xyzx
					add r0.z, r0.z, r0.z
					mad r4.xzw, r3.xxyz, -r0.zzzz, v2.xxyz
					mul r6.xyz, r0.yyyy, cb0[2].xyzx
					mul r7.xyz, r4.yyyy, v6.xyzx
					mad r0.y, -r5.z, l(0.700000), l(1.700000)
					mul r0.y, r0.y, r5.z
					mul r0.y, r0.y, l(6.000000)
					sample_l r8.xyzw, r4.xzwx, t5.xyzw, s0, r0.y
					add r0.y, r8.w, l(-1.000000)
					mad r0.y, cb2[3].w, r0.y, l(1.000000)
					mul r0.y, r0.y, cb2[3].x
					mul r4.xzw, r8.xxyz, r0.yyyy
					mul r4.xyz, r4.yyyy, r4.xzwx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.z, r0.y, r0.y
					mad r8.xyz, r3.xyzx, -r0.zzzz, -v2.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					mov_sat r0.y, r0.y
					dp3 r3.x, r8.xyzx, cb1[0].xyzx
					add r3.y, -r0.y, l(1.000000)
					mul r3.zw, r3.xxxy, r3.xxxy
					mul r3.xw, r3.xxxy, r3.xxxw
					mul r5.xy, r3.zyzz, r3.xwxx
					add r0.x, -r0.x, l(1.000000)
					mad_sat r0.x, r0.w, cb0[9].x, r0.x
					sample r3.xyzw, r5.xzxx, t3.xyzw, s2
					mul r0.y, r3.x, l(16.000000)
					mad r3.xyz, r0.yyyy, r1.xyzx, r2.xyzx
					mul r0.yzw, r0.zzzz, r6.xxyz
					add r5.xzw, -r1.xxyz, r0.xxxx
					mad r1.xyz, r5.yyyy, r5.xzwx, r1.xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					mad r1.xyz, r7.xyzx, r2.xyzx, r1.xyzx
					mad r0.xyz, r3.xyzx, r0.yzwy, r1.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s6
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					sample r0.xyzw, v1.xyxx, t1.xyzw, s5
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					eq r0.y, cb3[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb3[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r0.yyyy, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r0.y, r4.y, l(0.250000), l(0.750000)
					  mad r0.z, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.z, r0.y
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, v1.xyxx, t3.xyzw, s6
					mad r5.z, -r0.w, cb0[9].x, l(1.000000)
					dp3 r0.z, v2.xyzx, r3.xyzx
					add r0.z, r0.z, r0.z
					mad r4.xzw, r3.xxyz, -r0.zzzz, v2.xxyz
					mul r6.xyz, r0.yyyy, cb0[2].xyzx
					mul r7.xyz, r4.yyyy, v6.xyzx
					mad r0.y, -r5.z, l(0.700000), l(1.700000)
					mul r0.y, r0.y, r5.z
					mul r0.y, r0.y, l(6.000000)
					sample_l r8.xyzw, r4.xzwx, t5.xyzw, s0, r0.y
					add r0.y, r8.w, l(-1.000000)
					mad r0.y, cb2[3].w, r0.y, l(1.000000)
					mul r0.y, r0.y, cb2[3].x
					mul r4.xzw, r8.xxyz, r0.yyyy
					mul r4.xyz, r4.yyyy, r4.xzwx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.z, r0.y, r0.y
					mad r8.xyz, r3.xyzx, -r0.zzzz, -v2.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					mov_sat r0.y, r0.y
					dp3 r3.x, r8.xyzx, cb1[0].xyzx
					add r3.y, -r0.y, l(1.000000)
					mul r3.zw, r3.xxxy, r3.xxxy
					mul r3.xw, r3.xxxy, r3.xxxw
					mul r5.xy, r3.zyzz, r3.xwxx
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					sample r3.xyzw, r5.xzxx, t4.xyzw, s2
					mul r0.y, r3.x, l(16.000000)
					mad r3.xyz, r0.yyyy, r1.xyzx, r2.xyzx
					mul r0.yzw, r0.zzzz, r6.xxyz
					add r5.xzw, -r1.xxyz, r0.xxxx
					mad r1.xyz, r5.yyyy, r5.xzwx, r1.xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					mad r1.xyz, r7.xyzx, r2.xyzx, r1.xyzx
					mad o0.xyz, r3.xyzx, r0.yzwy, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					sample r0.xyzw, v1.xyxx, t1.xyzw, s5
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					eq r0.y, cb3[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb3[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r0.yyyy, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r0.y, r4.y, l(0.250000), l(0.750000)
					  mad r0.z, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.z, r0.y
					  sample r4.xyzw, r4.xzwx, t7.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, v1.xyxx, t3.xyzw, s6
					mad r5.z, -r0.w, cb0[9].x, l(1.000000)
					dp3 r0.z, v2.xyzx, r3.xyzx
					add r0.z, r0.z, r0.z
					mad r4.xzw, r3.xxyz, -r0.zzzz, v2.xxyz
					mul r6.xyz, r0.yyyy, cb0[2].xyzx
					mul r7.xyz, r4.yyyy, v6.xyzx
					mad r0.y, -r5.z, l(0.700000), l(1.700000)
					mul r0.y, r0.y, r5.z
					mul r0.y, r0.y, l(6.000000)
					sample_l r8.xyzw, r4.xzwx, t6.xyzw, s0, r0.y
					add r0.y, r8.w, l(-1.000000)
					mad r0.y, cb2[3].w, r0.y, l(1.000000)
					mul r0.y, r0.y, cb2[3].x
					mul r4.xzw, r8.xxyz, r0.yyyy
					mul r4.xyz, r4.yyyy, r4.xzwx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.z, r0.y, r0.y
					mad r8.xyz, r3.xyzx, -r0.zzzz, -v2.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					mov_sat r0.y, r0.y
					dp3 r3.x, r8.xyzx, cb1[0].xyzx
					add r3.y, -r0.y, l(1.000000)
					mul r3.zw, r3.xxxy, r3.xxxy
					mul r3.xw, r3.xxxy, r3.xxxw
					mul r5.xy, r3.zyzz, r3.xwxx
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					sample r3.xyzw, r5.xzxx, t4.xyzw, s2
					mul r0.y, r3.x, l(16.000000)
					mad r3.xyz, r0.yyyy, r1.xyzx, r2.xyzx
					mul r0.yzw, r0.zzzz, r6.xxyz
					add r5.xzw, -r1.xxyz, r0.xxxx
					mad r1.xyz, r5.yyyy, r5.xzwx, r1.xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					mad r1.xyz, r7.xyzx, r2.xyzx, r1.xyzx
					mad r0.xyz, r3.xyzx, r0.yzwy, r1.xyzx
					sample r1.xyzw, v1.xyxx, t5.xyzw, s7
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s3
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s5
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  mov r4.y, v3.w
					  mov r4.z, v4.w
					  mov r4.w, v5.w
					  movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r3.y
					  sample r3.xyzw, r3.xzwx, t6.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					sample r3.xyzw, v1.xyxx, t3.xyzw, s6
					mad r4.z, -r2.w, cb0[9].x, l(1.000000)
					dp3 r3.x, v2.xyzx, r2.xyzx
					add r3.x, r3.x, r3.x
					mad r3.xzw, r2.xxyz, -r3.xxxx, v2.xxyz
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					mul r6.xyz, r3.yyyy, v6.xyzx
					mad r1.w, -r4.z, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.z
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r3.xzwx, t5.xyzw, s0, r1.w
					add r1.w, r7.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r3.xzw, r7.xxyz, r1.wwww
					mul r3.xyz, r3.yyyy, r3.xzwx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r3.w, r1.w, r1.w
					mad r7.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
					dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
					mov_sat r1.w, r1.w
					dp3 r7.x, r7.xyzx, cb1[0].xyzx
					add r7.y, -r1.w, l(1.000000)
					mul r7.zw, r7.xxxy, r7.xxxy
					mul r2.yz, r7.xxyx, r7.xxwx
					mul r4.xy, r7.zyzz, r2.yzyy
					mad r0.w, r2.w, cb0[9].x, -r0.w
					add_sat r0.w, r0.w, l(1.000000)
					sample r7.xyzw, r4.xzxx, t4.xyzw, s2
					mul r1.w, r7.x, l(16.000000)
					mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
					mul r4.xzw, r2.xxxx, r5.xxyz
					add r5.xyz, -r0.xyzx, r0.wwww
					mad r0.xyz, r4.yyyy, r5.xyzx, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					mad o0.xyz, r2.yzwy, r4.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s3
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  mov r4.y, v3.w
					  mov r4.z, v4.w
					  mov r4.w, v5.w
					  movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
					dp3 r2.w, v2.xyzx, r2.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xzw, r2.xxyz, -r2.wwww, v2.xxyz
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					mul r6.xyz, r3.yyyy, v6.xyzx
					mad r1.w, -r4.x, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.x
					mul r1.w, r1.w, l(6.000000)
					sample_l r7.xyzw, r3.xzwx, t3.xyzw, s0, r1.w
					add r1.w, r7.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r3.xzw, r7.xxyz, r1.wwww
					mul r3.xyz, r3.yyyy, r3.xzwx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r2.w, r1.w, r1.w
					mad r7.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
					dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
					mov_sat r1.w, r1.w
					dp3 r7.x, r7.xyzx, cb1[0].xyzx
					add r7.y, -r1.w, l(1.000000)
					mul r7.zw, r7.xxxy, r7.xxxy
					mul r2.yz, r7.xxyx, r7.xxwx
					mul r4.yz, r7.zzyz, r2.yyzy
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					sample r7.xyzw, r4.ywyy, t2.xyzw, s2
					mul r1.w, r7.x, l(16.000000)
					mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
					mul r4.xyw, r2.xxxx, r5.xyxz
					add r5.xyz, -r0.xyzx, r0.wwww
					mad r0.xyz, r4.zzzz, r5.xyzx, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
					mad o0.xyz, r2.yzwy, r4.xywx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t1.xyzw, s5
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r5.xyzw, v1.xyxx, t2.xyzw, s3
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r5.y, cb0[9].y, r3.w
					add r4.w, -cb0[8].w, l(1.000000)
					dp3 r5.x, r3.xyzx, r2.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r7.xyz, r2.wwww, r5.xyzx
					  add r8.xyz, -r4.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -r4.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r8.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r2.w
					add r5.w, r7.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r5.wwww
					lt r6.w, cb5[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb5[6].w
					  if_nz r6.w
					    dp3 r6.w, r5.xyzx, r5.xyzx
					    rsq r6.w, r6.w
					    mul r9.xyz, r5.xyzx, r6.wwww
					    add r10.xyz, -r4.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r4.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
					  endif 
					  sample_l r9.xyzw, r5.xyzx, t5.xyzw, s0, r2.w
					  add r2.w, r9.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r9.xyzx, r2.wwww
					  mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
					  mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r3.wwww, r8.xyzx
					mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r5.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.w, r4.w
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.w, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mul r5.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s4
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t2.xyzw, s5
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r5.xyzw, v1.xyxx, t3.xyzw, s4
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r5.y, cb0[9].y, r3.w
					add r4.w, -cb0[8].w, l(1.000000)
					dp3 r5.x, r3.xyzx, r2.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r7.xyz, r2.wwww, r5.xyzx
					  add r8.xyz, -r4.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -r4.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r8.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r2.w
					add r5.w, r7.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r5.wwww
					lt r6.w, cb5[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb5[6].w
					  if_nz r6.w
					    dp3 r6.w, r5.xyzx, r5.xyzx
					    rsq r6.w, r6.w
					    mul r9.xyz, r5.xyzx, r6.wwww
					    add r10.xyz, -r4.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r4.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
					  endif 
					  sample_l r9.xyzw, r5.xyzx, t5.xyzw, s0, r2.w
					  add r2.w, r9.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r9.xyzx, r2.wwww
					  mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
					  mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r3.wwww, r8.xyzx
					mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r5.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.w, r4.w
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.w, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mul r5.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.w
					  sample r5.xyzw, r5.xzwx, t7.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t2.xyzw, s6
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r5.xyzw, v1.xyxx, t3.xyzw, s4
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r5.y, cb0[9].y, r3.w
					add r4.w, -cb0[8].w, l(1.000000)
					dp3 r5.x, r3.xyzx, r2.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r7.xyz, r2.wwww, r5.xyzx
					  add r8.xyz, -r4.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -r4.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r8.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r2.w
					add r5.w, r7.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r5.wwww
					lt r6.w, cb5[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb5[6].w
					  if_nz r6.w
					    dp3 r6.w, r5.xyzx, r5.xyzx
					    rsq r6.w, r6.w
					    mul r9.xyz, r5.xyzx, r6.wwww
					    add r10.xyz, -r4.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r4.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
					  endif 
					  sample_l r9.xyzw, r5.xyzx, t6.xyzw, s0, r2.w
					  add r2.w, r9.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r9.xyzx, r2.wwww
					  mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
					  mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r3.wwww, r8.xyzx
					mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r5.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.w, r4.w
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.w, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mul r5.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s5
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t1.xyzw, s4
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r5.xyzw, v1.xyxx, t2.xyzw, s3
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r5.y, cb0[9].y, r3.w
					add r4.w, -cb0[8].w, l(1.000000)
					dp3 r5.x, r3.xyzx, r2.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r7.xyz, r2.wwww, r5.xyzx
					  add r8.xyz, -r4.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -r4.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r8.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r2.w
					add r5.w, r7.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r5.wwww
					lt r6.w, cb5[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb5[6].w
					  if_nz r6.w
					    dp3 r6.w, r5.xyzx, r5.xyzx
					    rsq r6.w, r6.w
					    mul r9.xyz, r5.xyzx, r6.wwww
					    add r10.xyz, -r4.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r4.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
					  endif 
					  sample_l r9.xyzw, r5.xyzx, t4.xyzw, s0, r2.w
					  add r2.w, r9.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r9.xyzx, r2.wwww
					  mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
					  mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r3.wwww, r8.xyzx
					mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r5.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.w, r4.w
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.w, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mul r5.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t6.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t2.xyzw, s5
					add r1.w, r1.w, -r6.x
					mad r0.z, r0.z, r1.w, r6.x
					sample r6.xyzw, v1.xyxx, t3.xyzw, s4
					add r1.w, -cb0[9].y, l(1.000000)
					mad r1.w, r6.y, cb0[9].y, r1.w
					mad r2.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r3.w, r4.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r6.xyz, r3.xyzx, -r3.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r8.xyz, r0.zzzz, r6.xyzx
					  add r9.xyz, -r5.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -r5.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r0.z, r9.y, r9.x
					  min r0.z, r9.z, r0.z
					  add r9.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r8.xyz, r8.xyzx, r0.zzzz, r9.xyzx
					else 
					  mov r8.xyz, r6.xyzx
					endif 
					mad r0.z, -r2.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r2.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t4.xyzw, s0, r0.z
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r10.xyz, r4.wwww, r6.xyzx
					    add r11.xyz, -r5.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r5.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r10.xyzx, r4.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t5.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r1.wwww, r9.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r2.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r2.w, r2.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r2.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad o0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t7.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t2.xyzw, s6
					add r1.w, r1.w, -r6.x
					mad r0.z, r0.z, r1.w, r6.x
					sample r6.xyzw, v1.xyxx, t3.xyzw, s4
					add r1.w, -cb0[9].y, l(1.000000)
					mad r1.w, r6.y, cb0[9].y, r1.w
					mad r2.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r3.w, r4.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r6.xyz, r3.xyzx, -r3.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r8.xyz, r0.zzzz, r6.xyzx
					  add r9.xyz, -r5.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -r5.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r0.z, r9.y, r9.x
					  min r0.z, r9.z, r0.z
					  add r9.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r8.xyz, r8.xyzx, r0.zzzz, r9.xyzx
					else 
					  mov r8.xyz, r6.xyzx
					endif 
					mad r0.z, -r2.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r2.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t5.xyzw, s0, r0.z
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r10.xyz, r4.wwww, r6.xyzx
					    add r11.xyz, -r5.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r5.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r10.xyzx, r4.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t6.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r1.wwww, r9.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r2.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r2.w, r2.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r2.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad r0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s5
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r0.yz, r0.yyzy, cb0[8].xxxx
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r0.y, r3.xyzx, r3.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t7.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t3.xyzw, s6
					add r1.w, r1.w, -r6.x
					mad r0.z, r0.z, r1.w, r6.x
					sample r6.xyzw, v1.xyxx, t4.xyzw, s5
					add r1.w, -cb0[9].y, l(1.000000)
					mad r1.w, r6.y, cb0[9].y, r1.w
					mad r2.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r3.w, r4.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r6.xyz, r3.xyzx, -r3.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r8.xyz, r0.zzzz, r6.xyzx
					  add r9.xyz, -r5.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -r5.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r0.z, r9.y, r9.x
					  min r0.z, r9.z, r0.z
					  add r9.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r8.xyz, r8.xyzx, r0.zzzz, r9.xyzx
					else 
					  mov r8.xyz, r6.xyzx
					endif 
					mad r0.z, -r2.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r2.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t5.xyzw, s0, r0.z
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r10.xyz, r4.wwww, r6.xyzx
					    add r11.xyz, -r5.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r5.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r10.xyzx, r4.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t6.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r1.wwww, r9.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r2.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r2.w, r2.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r2.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad o0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r0.yz, r0.yyzy, cb0[8].xxxx
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r0.y, r3.xyzx, r3.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t8.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t3.xyzw, s7
					add r1.w, r1.w, -r6.x
					mad r0.z, r0.z, r1.w, r6.x
					sample r6.xyzw, v1.xyxx, t4.xyzw, s5
					add r1.w, -cb0[9].y, l(1.000000)
					mad r1.w, r6.y, cb0[9].y, r1.w
					mad r2.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r3.w, r4.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r6.xyz, r3.xyzx, -r3.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r8.xyz, r0.zzzz, r6.xyzx
					  add r9.xyz, -r5.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -r5.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r0.z, r9.y, r9.x
					  min r0.z, r9.z, r0.z
					  add r9.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r8.xyz, r8.xyzx, r0.zzzz, r9.xyzx
					else 
					  mov r8.xyz, r6.xyzx
					endif 
					mad r0.z, -r2.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r2.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t6.xyzw, s0, r0.z
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r10.xyz, r4.wwww, r6.xyzx
					    add r11.xyz, -r5.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r5.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r10.xyzx, r4.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t7.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r3.wwww, r8.xyzx, -r5.xyzx
					  mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r1.wwww, r9.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r2.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r2.w, r2.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r2.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad r0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					sample r1.xyzw, v1.xyxx, t5.xyzw, s6
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r3.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r4.w, r5.xyzx, r5.xyzx
					sqrt r4.w, r4.w
					add r4.w, -r3.w, r4.w
					mad r3.w, cb3[25].w, r4.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r4.w, cb6[0].x, l(1.000000)
					if_nz r4.w
					  eq r4.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r4.w, r5.y, l(0.250000), l(0.750000)
					  mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r4.w, r5.y
					  sample r5.xyzw, r5.xzwx, t7.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t3.xyzw, s6
					add r4.w, r4.w, -r5.x
					mad r3.w, r3.w, r4.w, r5.x
					sample r5.xyzw, v1.xyxx, t4.xyzw, s5
					add r4.w, -cb0[9].y, l(1.000000)
					mad r4.w, r5.y, cb0[9].y, r4.w
					mad r5.x, -r2.w, cb0[9].x, l(1.000000)
					dp3 r5.y, r3.xyzx, r2.xyzx
					add r5.y, r5.y, r5.y
					mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
					mul r6.xyz, r3.wwww, cb0[2].xyzx
					lt r3.w, l(0.000000), cb5[2].w
					if_nz r3.w
					  dp3 r3.w, r5.yzwy, r5.yzwy
					  rsq r3.w, r3.w
					  mul r7.xyz, r3.wwww, r5.yzwy
					  add r8.xyz, -r4.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -r4.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r3.w, r8.y, r8.x
					  min r3.w, r8.z, r3.w
					  add r8.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.yzwy
					endif 
					mad r3.w, -r5.x, l(0.700000), l(1.700000)
					mul r3.w, r3.w, r5.x
					mul r3.w, r3.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r3.w
					add r6.w, r7.w, l(-1.000000)
					mad r6.w, cb5[3].w, r6.w, l(1.000000)
					mul r6.w, r6.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r6.wwww
					lt r7.w, cb5[1].w, l(0.999990)
					if_nz r7.w
					  lt r7.w, l(0.000000), cb5[6].w
					  if_nz r7.w
					    dp3 r7.w, r5.yzwy, r5.yzwy
					    rsq r7.w, r7.w
					    mul r9.xyz, r5.yzwy, r7.wwww
					    add r10.xyz, -r4.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r4.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r7.w, r10.y, r10.x
					    min r7.w, r10.z, r7.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
					  endif 
					  sample_l r9.xyzw, r5.yzwy, t6.xyzw, s0, r3.w
					  add r3.w, r9.w, l(-1.000000)
					  mad r3.w, cb5[7].w, r3.w, l(1.000000)
					  mul r3.w, r3.w, cb5[7].x
					  mul r4.xyz, r9.xyzx, r3.wwww
					  mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
					  mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
					endif 
					mul r4.xyz, r4.wwww, r8.xyzx
					mad r5.yzw, -v2.xxyz, r1.wwww, cb2[0].xxyz
					dp3 r1.w, r5.yzwy, r5.yzwy
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.yzw, r1.wwww, r5.yyzw
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r5.yzwy
					dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r5.xxxx
					add r2.z, r2.z, l(-0.500000)
					add r3.y, -r3.x, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r3.y, r2.z, r3.y, l(1.000000)
					add r3.z, -|r1.w|, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r2.z, r2.z, r3.z, l(1.000000)
					mul r2.z, r2.z, r3.y
					mul r2.z, r3.x, r2.z
					mul r3.y, r5.x, r5.x
					max r3.y, r3.y, l(0.002000)
					add r3.w, -r3.y, l(1.000000)
					mad r4.w, |r1.w|, r3.w, r3.y
					mad r3.w, r3.x, r3.w, r3.y
					mul r1.w, |r1.w|, r3.w
					mad r1.w, r3.x, r4.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.w, r3.y, r3.y
					mad r4.w, r2.x, r3.w, -r2.x
					mad r2.x, r4.w, r2.x, l(1.000000)
					mul r3.w, r3.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.w, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r3.x, r1.w
					mul r2.x, r3.y, l(0.280000)
					mad r2.x, -r2.x, r5.x, l(1.000000)
					dp3 r3.x, r0.xyzx, r0.xyzx
					ne r3.x, r3.x, l(0.000000)
					and r3.x, r3.x, l(0x3f800000)
					mul r1.w, r1.w, r3.x
					mad r0.w, r2.w, cb0[9].x, -r0.w
					add_sat r0.w, r0.w, l(1.000000)
					mul r3.xyw, r2.zzzz, r6.xyxz
					mul r5.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xywx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xyw, -r0.xyxz, r0.wwww
					mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 13
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb6[2].xyzx
					  mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb6[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r5.xy, v7.xyxx, v7.wwww
					sample r5.xyzw, r5.xyxx, t1.xyzw, s4
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r5.xyzw, v1.xyxx, t2.xyzw, s3
					add r3.w, -cb0[9].y, l(1.000000)
					mad r3.w, r5.y, cb0[9].y, r3.w
					add r4.w, -cb0[8].w, l(1.000000)
					dp3 r5.x, r3.xyzx, r2.xyzx
					add r5.x, r5.x, r5.x
					mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
					mul r6.xyz, r2.wwww, cb0[2].xyzx
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r5.xyzx, r5.xyzx
					  rsq r2.w, r2.w
					  mul r7.xyz, r2.wwww, r5.xyzx
					  add r8.xyz, -r4.xyzx, cb5[0].xyzx
					  div r8.xyz, r8.xyzx, r7.xyzx
					  add r9.xyz, -r4.xyzx, cb5[1].xyzx
					  div r9.xyz, r9.xyzx, r7.xyzx
					  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
					  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
					  min r2.w, r8.y, r8.x
					  min r2.w, r8.z, r2.w
					  add r8.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
					else 
					  mov r7.xyz, r5.xyzx
					endif 
					mad r2.w, -r4.w, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r4.w
					mul r2.w, r2.w, l(6.000000)
					sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r2.w
					add r5.w, r7.w, l(-1.000000)
					mad r5.w, cb5[3].w, r5.w, l(1.000000)
					mul r5.w, r5.w, cb5[3].x
					mul r8.xyz, r7.xyzx, r5.wwww
					lt r6.w, cb5[1].w, l(0.999990)
					if_nz r6.w
					  lt r6.w, l(0.000000), cb5[6].w
					  if_nz r6.w
					    dp3 r6.w, r5.xyzx, r5.xyzx
					    rsq r6.w, r6.w
					    mul r9.xyz, r5.xyzx, r6.wwww
					    add r10.xyz, -r4.xyzx, cb5[4].xyzx
					    div r10.xyz, r10.xyzx, r9.xyzx
					    add r11.xyz, -r4.xyzx, cb5[5].xyzx
					    div r11.xyz, r11.xyzx, r9.xyzx
					    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					    min r6.w, r10.y, r10.x
					    min r6.w, r10.z, r6.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
					  endif 
					  sample_l r9.xyzw, r5.xyzx, t4.xyzw, s0, r2.w
					  add r2.w, r9.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r9.xyzx, r2.wwww
					  mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
					  mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r3.wwww, r8.xyzx
					mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r5.xyzx, r5.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r5.xyz, r1.wwww, r5.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r5.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r4.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r4.w, r4.w
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r4.w, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r6.xxyz
					mul r5.xyz, r6.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r3.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r4.w, r5.xyzx, r5.xyzx
					sqrt r4.w, r4.w
					add r4.w, -r3.w, r4.w
					mad r3.w, cb3[25].w, r4.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r4.w, cb6[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.x, cb6[0].y, l(1.000000)
					  mul r5.yzw, v4.wwww, cb6[2].xxyz
					  mad r5.yzw, cb6[1].xxyz, v3.wwww, r5.yyzw
					  mad r5.yzw, cb6[3].xxyz, v5.wwww, r5.yyzw
					  add r5.yzw, r5.yyzw, cb6[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					div r5.yz, v7.xxyx, v7.wwww
					sample r6.xyzw, r5.yzyy, t1.xyzw, s5
					add r5.x, r5.x, -r6.x
					mad r3.w, r3.w, r5.x, r6.x
					sample r5.xyzw, v1.xyxx, t2.xyzw, s3
					add r5.x, -cb0[9].y, l(1.000000)
					mad r5.x, r5.y, cb0[9].y, r5.x
					add r5.y, -cb0[8].w, l(1.000000)
					dp3 r5.z, r3.xyzx, r2.xyzx
					add r5.z, r5.z, r5.z
					mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
					mul r7.xyz, r3.wwww, cb0[2].xyzx
					if_nz r4.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r3.w, r8.y, l(0.250000)
					  mul r4.w, cb6[0].z, l(0.500000)
					  mad r5.z, -cb6[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.w
					  min r8.x, r5.z, r3.w
					  sample r9.xyzw, r8.xzwx, t6.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t6.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t6.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r2.xyzw
					  dp4 r9.y, r10.xyzw, r2.xyzw
					  dp4 r9.z, r8.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r2.xyzw
					  dp4 r9.y, cb2[40].xyzw, r2.xyzw
					  dp4 r9.z, cb2[41].xyzw, r2.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r6.xyzx, r6.xyzx
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r6.xyzx
					  add r10.xyz, -r4.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r4.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r2.w, -r5.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r5.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r2.w
					add r3.w, r9.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r11.xyz, r4.wwww, r6.xyzx
					    add r12.xyz, -r4.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r4.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.w, r12.y, r12.x
					    min r4.w, r12.z, r4.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
					  endif 
					  sample_l r4.xyzw, r6.xyzx, t5.xyzw, s0, r2.w
					  add r2.w, r4.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r4.xyzx, r2.wwww
					  mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r5.xxxx, r10.xyzx
					mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r5.yyyy
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r5.y, r5.y
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r5.y, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r7.xxyz
					mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
					mul r5.xyz, r7.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s4
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r3.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r4.w, r5.xyzx, r5.xyzx
					sqrt r4.w, r4.w
					add r4.w, -r3.w, r4.w
					mad r3.w, cb3[25].w, r4.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r4.w, cb6[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.x, cb6[0].y, l(1.000000)
					  mul r5.yzw, v4.wwww, cb6[2].xxyz
					  mad r5.yzw, cb6[1].xxyz, v3.wwww, r5.yyzw
					  mad r5.yzw, cb6[3].xxyz, v5.wwww, r5.yyzw
					  add r5.yzw, r5.yyzw, cb6[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					div r5.yz, v7.xxyx, v7.wwww
					sample r6.xyzw, r5.yzyy, t2.xyzw, s5
					add r5.x, r5.x, -r6.x
					mad r3.w, r3.w, r5.x, r6.x
					sample r5.xyzw, v1.xyxx, t3.xyzw, s4
					add r5.x, -cb0[9].y, l(1.000000)
					mad r5.x, r5.y, cb0[9].y, r5.x
					add r5.y, -cb0[8].w, l(1.000000)
					dp3 r5.z, r3.xyzx, r2.xyzx
					add r5.z, r5.z, r5.z
					mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
					mul r7.xyz, r3.wwww, cb0[2].xyzx
					if_nz r4.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r3.w, r8.y, l(0.250000)
					  mul r4.w, cb6[0].z, l(0.500000)
					  mad r5.z, -cb6[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.w
					  min r8.x, r5.z, r3.w
					  sample r9.xyzw, r8.xzwx, t6.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t6.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t6.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r2.xyzw
					  dp4 r9.y, r10.xyzw, r2.xyzw
					  dp4 r9.z, r8.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r2.xyzw
					  dp4 r9.y, cb2[40].xyzw, r2.xyzw
					  dp4 r9.z, cb2[41].xyzw, r2.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r6.xyzx, r6.xyzx
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r6.xyzx
					  add r10.xyz, -r4.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r4.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r2.w, -r5.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r5.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r2.w
					add r3.w, r9.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r11.xyz, r4.wwww, r6.xyzx
					    add r12.xyz, -r4.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r4.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.w, r12.y, r12.x
					    min r4.w, r12.z, r4.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
					  endif 
					  sample_l r4.xyzw, r6.xyzx, t5.xyzw, s0, r2.w
					  add r2.w, r4.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r4.xyzx, r2.wwww
					  mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r5.xxxx, r10.xyzx
					mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r5.yyyy
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r5.y, r5.y
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r5.y, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r7.xxyz
					mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
					mul r5.xyz, r7.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r3.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r4.w, r5.xyzx, r5.xyzx
					sqrt r4.w, r4.w
					add r4.w, -r3.w, r4.w
					mad r3.w, cb3[25].w, r4.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r4.w, cb6[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.x, cb6[0].y, l(1.000000)
					  mul r5.yzw, v4.wwww, cb6[2].xxyz
					  mad r5.yzw, cb6[1].xxyz, v3.wwww, r5.yyzw
					  mad r5.yzw, cb6[3].xxyz, v5.wwww, r5.yyzw
					  add r5.yzw, r5.yyzw, cb6[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t7.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					div r5.yz, v7.xxyx, v7.wwww
					sample r6.xyzw, r5.yzyy, t2.xyzw, s6
					add r5.x, r5.x, -r6.x
					mad r3.w, r3.w, r5.x, r6.x
					sample r5.xyzw, v1.xyxx, t3.xyzw, s4
					add r5.x, -cb0[9].y, l(1.000000)
					mad r5.x, r5.y, cb0[9].y, r5.x
					add r5.y, -cb0[8].w, l(1.000000)
					dp3 r5.z, r3.xyzx, r2.xyzx
					add r5.z, r5.z, r5.z
					mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
					mul r7.xyz, r3.wwww, cb0[2].xyzx
					if_nz r4.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r3.w, r8.y, l(0.250000)
					  mul r4.w, cb6[0].z, l(0.500000)
					  mad r5.z, -cb6[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.w
					  min r8.x, r5.z, r3.w
					  sample r9.xyzw, r8.xzwx, t7.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t7.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t7.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r2.xyzw
					  dp4 r9.y, r10.xyzw, r2.xyzw
					  dp4 r9.z, r8.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r2.xyzw
					  dp4 r9.y, cb2[40].xyzw, r2.xyzw
					  dp4 r9.z, cb2[41].xyzw, r2.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r6.xyzx, r6.xyzx
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r6.xyzx
					  add r10.xyz, -r4.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r4.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r2.w, -r5.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r5.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r2.w
					add r3.w, r9.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r11.xyz, r4.wwww, r6.xyzx
					    add r12.xyz, -r4.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r4.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.w, r12.y, r12.x
					    min r4.w, r12.z, r4.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
					  endif 
					  sample_l r4.xyzw, r6.xyzx, t6.xyzw, s0, r2.w
					  add r2.w, r4.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r4.xyzx, r2.wwww
					  mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r5.xxxx, r10.xyzx
					mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r5.yyyy
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r5.y, r5.y
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r5.y, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r7.xxyz
					mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
					mul r5.xyz, r7.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s5
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r3.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r4.w, r5.xyzx, r5.xyzx
					sqrt r4.w, r4.w
					add r4.w, -r3.w, r4.w
					mad r3.w, cb3[25].w, r4.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r4.w, cb6[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.x, cb6[0].y, l(1.000000)
					  mul r5.yzw, v4.wwww, cb6[2].xxyz
					  mad r5.yzw, cb6[1].xxyz, v3.wwww, r5.yyzw
					  mad r5.yzw, cb6[3].xxyz, v5.wwww, r5.yyzw
					  add r5.yzw, r5.yyzw, cb6[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					div r5.yz, v7.xxyx, v7.wwww
					sample r6.xyzw, r5.yzyy, t1.xyzw, s4
					add r5.x, r5.x, -r6.x
					mad r3.w, r3.w, r5.x, r6.x
					sample r5.xyzw, v1.xyxx, t2.xyzw, s3
					add r5.x, -cb0[9].y, l(1.000000)
					mad r5.x, r5.y, cb0[9].y, r5.x
					add r5.y, -cb0[8].w, l(1.000000)
					dp3 r5.z, r3.xyzx, r2.xyzx
					add r5.z, r5.z, r5.z
					mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
					mul r7.xyz, r3.wwww, cb0[2].xyzx
					if_nz r4.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r3.w, r8.y, l(0.250000)
					  mul r4.w, cb6[0].z, l(0.500000)
					  mad r5.z, -cb6[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.w
					  min r8.x, r5.z, r3.w
					  sample r9.xyzw, r8.xzwx, t5.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t5.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t5.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r2.xyzw
					  dp4 r9.y, r10.xyzw, r2.xyzw
					  dp4 r9.z, r8.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r2.xyzw
					  dp4 r9.y, cb2[40].xyzw, r2.xyzw
					  dp4 r9.z, cb2[41].xyzw, r2.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r6.xyzx, r6.xyzx
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r6.xyzx
					  add r10.xyz, -r4.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r4.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r2.w, -r5.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r5.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
					add r3.w, r9.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r11.xyz, r4.wwww, r6.xyzx
					    add r12.xyz, -r4.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r4.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.w, r12.y, r12.x
					    min r4.w, r12.z, r4.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
					  endif 
					  sample_l r4.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
					  add r2.w, r4.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r4.xyzx, r2.wwww
					  mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r5.xxxx, r10.xyzx
					mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r5.yyyy
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r5.y, r5.y
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r5.y, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r7.xxyz
					mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
					mul r5.xyz, r7.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r2.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r2.w, r6.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.w, r4.w
					  sample r6.xyzw, r6.xzwx, t6.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t2.xyzw, s5
					add r2.w, r2.w, -r6.x
					mad r0.z, r0.z, r2.w, r6.x
					sample r6.xyzw, v1.xyxx, t3.xyzw, s4
					add r2.w, -cb0[9].y, l(1.000000)
					mad r2.w, r6.y, cb0[9].y, r2.w
					mad r4.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r5.w, r4.xyzx, r3.xyzx
					add r5.w, r5.w, r5.w
					mad r6.xyz, r3.xyzx, -r5.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					if_nz r1.w
					  eq r0.z, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r0.zzzz, r8.xyzx, r5.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r0.z, r8.y, l(0.250000)
					  mul r1.w, cb6[0].z, l(0.500000)
					  mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r0.z, r0.z, r1.w
					  min r8.x, r5.w, r0.z
					  sample r9.xyzw, r8.xzwx, t6.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t6.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t6.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r3.xyzw
					  dp4 r9.y, r10.xyzw, r3.xyzw
					  dp4 r9.z, r8.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r3.xyzw
					  dp4 r9.y, cb2[40].xyzw, r3.xyzw
					  dp4 r9.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r9.xyz, r0.zzzz, r6.xyzx
					  add r10.xyz, -r5.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r5.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r0.z, r10.y, r10.x
					  min r0.z, r10.z, r0.z
					  add r10.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r0.zzzz, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r0.z, -r4.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r4.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r0.z
					add r1.w, r9.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r1.wwww
					lt r3.w, cb5[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb5[6].w
					  if_nz r3.w
					    dp3 r3.w, r6.xyzx, r6.xyzx
					    rsq r3.w, r3.w
					    mul r11.xyz, r3.wwww, r6.xyzx
					    add r12.xyz, -r5.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r5.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r3.w, r12.y, r12.x
					    min r3.w, r12.z, r3.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r3.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t5.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r1.wwww, r9.xyzx, -r5.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r2.wwww, r10.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r4.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r4.w, r4.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r4.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mad r4.xyz, r8.xyzx, r2.wwww, r4.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad o0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r2.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r2.w, r6.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.w, r4.w
					  sample r6.xyzw, r6.xzwx, t7.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t2.xyzw, s6
					add r2.w, r2.w, -r6.x
					mad r0.z, r0.z, r2.w, r6.x
					sample r6.xyzw, v1.xyxx, t3.xyzw, s4
					add r2.w, -cb0[9].y, l(1.000000)
					mad r2.w, r6.y, cb0[9].y, r2.w
					mad r4.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r5.w, r4.xyzx, r3.xyzx
					add r5.w, r5.w, r5.w
					mad r6.xyz, r3.xyzx, -r5.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					if_nz r1.w
					  eq r0.z, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r0.zzzz, r8.xyzx, r5.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r0.z, r8.y, l(0.250000)
					  mul r1.w, cb6[0].z, l(0.500000)
					  mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r0.z, r0.z, r1.w
					  min r8.x, r5.w, r0.z
					  sample r9.xyzw, r8.xzwx, t7.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t7.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t7.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r3.xyzw
					  dp4 r9.y, r10.xyzw, r3.xyzw
					  dp4 r9.z, r8.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r3.xyzw
					  dp4 r9.y, cb2[40].xyzw, r3.xyzw
					  dp4 r9.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r9.xyz, r0.zzzz, r6.xyzx
					  add r10.xyz, -r5.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r5.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r0.z, r10.y, r10.x
					  min r0.z, r10.z, r0.z
					  add r10.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r0.zzzz, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r0.z, -r4.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r4.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r0.z
					add r1.w, r9.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r1.wwww
					lt r3.w, cb5[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb5[6].w
					  if_nz r3.w
					    dp3 r3.w, r6.xyzx, r6.xyzx
					    rsq r3.w, r3.w
					    mul r11.xyz, r3.wwww, r6.xyzx
					    add r12.xyz, -r5.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r5.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r3.w, r12.y, r12.x
					    min r3.w, r12.z, r3.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r3.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t6.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r1.wwww, r9.xyzx, -r5.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r2.wwww, r10.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r4.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r4.w, r4.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r4.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mad r4.xyz, r8.xyzx, r2.wwww, r4.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad r0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s5
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r0.yz, r0.yyzy, cb0[8].xxxx
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r0.y, r3.xyzx, r3.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r2.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r2.w, r6.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.w, r4.w
					  sample r6.xyzw, r6.xzwx, t7.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t3.xyzw, s6
					add r2.w, r2.w, -r6.x
					mad r0.z, r0.z, r2.w, r6.x
					sample r6.xyzw, v1.xyxx, t4.xyzw, s5
					add r2.w, -cb0[9].y, l(1.000000)
					mad r2.w, r6.y, cb0[9].y, r2.w
					mad r4.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r5.w, r4.xyzx, r3.xyzx
					add r5.w, r5.w, r5.w
					mad r6.xyz, r3.xyzx, -r5.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					if_nz r1.w
					  eq r0.z, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r0.zzzz, r8.xyzx, r5.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r0.z, r8.y, l(0.250000)
					  mul r1.w, cb6[0].z, l(0.500000)
					  mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r0.z, r0.z, r1.w
					  min r8.x, r5.w, r0.z
					  sample r9.xyzw, r8.xzwx, t7.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t7.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t7.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r3.xyzw
					  dp4 r9.y, r10.xyzw, r3.xyzw
					  dp4 r9.z, r8.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r3.xyzw
					  dp4 r9.y, cb2[40].xyzw, r3.xyzw
					  dp4 r9.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r9.xyz, r0.zzzz, r6.xyzx
					  add r10.xyz, -r5.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r5.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r0.z, r10.y, r10.x
					  min r0.z, r10.z, r0.z
					  add r10.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r0.zzzz, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r0.z, -r4.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r4.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r0.z
					add r1.w, r9.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r1.wwww
					lt r3.w, cb5[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb5[6].w
					  if_nz r3.w
					    dp3 r3.w, r6.xyzx, r6.xyzx
					    rsq r3.w, r3.w
					    mul r11.xyz, r3.wwww, r6.xyzx
					    add r12.xyz, -r5.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r5.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r3.w, r12.y, r12.x
					    min r3.w, r12.z, r3.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r3.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t6.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r1.wwww, r9.xyzx, -r5.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r2.wwww, r10.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r4.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r4.w, r4.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r4.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mad r4.xyz, r8.xyzx, r2.wwww, r4.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad o0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.xxxx, r2.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					mul r0.yz, r0.yyzy, cb0[8].xxxx
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					dp3 r0.y, r3.xyzx, r3.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, v2.xyzx, v2.xyzx
					rsq r0.y, r0.y
					mul r4.xyz, r0.yyyy, v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					add r6.xyz, -r5.xyzx, cb1[4].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r0.z, r6.xyzx, r7.xyzx
					add r6.xyz, r5.xyzx, -cb3[25].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					sqrt r1.w, r1.w
					add r1.w, -r0.z, r1.w
					mad r0.z, cb3[25].w, r1.w, r0.z
					mad_sat r0.z, r0.z, cb3[24].z, cb3[24].w
					eq r1.w, cb6[0].x, l(1.000000)
					if_nz r1.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r6.xyz, r2.wwww, r6.xyzx, r5.xyzx
					  add r6.xyz, r6.xyzx, -cb6[6].xyzx
					  mul r6.yzw, r6.xxyz, cb6[5].xxyz
					  mad r2.w, r6.y, l(0.250000), l(0.750000)
					  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r2.w, r4.w
					  sample r6.xyzw, r6.xzwx, t8.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r6.xyzw, cb2[46].xyzw
					div r6.xy, v7.xyxx, v7.wwww
					sample r6.xyzw, r6.xyxx, t3.xyzw, s7
					add r2.w, r2.w, -r6.x
					mad r0.z, r0.z, r2.w, r6.x
					sample r6.xyzw, v1.xyxx, t4.xyzw, s5
					add r2.w, -cb0[9].y, l(1.000000)
					mad r2.w, r6.y, cb0[9].y, r2.w
					mad r4.w, -r0.w, cb0[9].x, l(1.000000)
					dp3 r5.w, r4.xyzx, r3.xyzx
					add r5.w, r5.w, r5.w
					mad r6.xyz, r3.xyzx, -r5.wwww, r4.xyzx
					mul r7.xyz, r0.zzzz, cb0[2].xyzx
					if_nz r1.w
					  eq r0.z, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r0.zzzz, r8.xyzx, r5.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r0.z, r8.y, l(0.250000)
					  mul r1.w, cb6[0].z, l(0.500000)
					  mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r0.z, r0.z, r1.w
					  min r8.x, r5.w, r0.z
					  sample r9.xyzw, r8.xzwx, t8.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t8.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t8.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r3.xyzw
					  dp4 r9.y, r10.xyzw, r3.xyzw
					  dp4 r9.z, r8.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r3.xyzw
					  dp4 r9.y, cb2[40].xyzw, r3.xyzw
					  dp4 r9.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r0.z, l(0.000000), cb5[2].w
					if_nz r0.z
					  dp3 r0.z, r6.xyzx, r6.xyzx
					  rsq r0.z, r0.z
					  mul r9.xyz, r0.zzzz, r6.xyzx
					  add r10.xyz, -r5.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r5.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r0.z, r10.y, r10.x
					  min r0.z, r10.z, r0.z
					  add r10.xyz, r5.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r0.zzzz, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r0.z, -r4.w, l(0.700000), l(1.700000)
					mul r0.z, r0.z, r4.w
					mul r0.z, r0.z, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t6.xyzw, s0, r0.z
					add r1.w, r9.w, l(-1.000000)
					mad r1.w, cb5[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r1.wwww
					lt r3.w, cb5[1].w, l(0.999990)
					if_nz r3.w
					  lt r3.w, l(0.000000), cb5[6].w
					  if_nz r3.w
					    dp3 r3.w, r6.xyzx, r6.xyzx
					    rsq r3.w, r3.w
					    mul r11.xyz, r3.wwww, r6.xyzx
					    add r12.xyz, -r5.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r5.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r3.w, r12.y, r12.x
					    min r3.w, r12.z, r3.w
					    add r5.xyz, r5.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r3.wwww, r5.xyzx
					  endif 
					  sample_l r5.xyzw, r6.xyzx, t7.xyzw, s0, r0.z
					  add r0.z, r5.w, l(-1.000000)
					  mad r0.z, cb5[7].w, r0.z, l(1.000000)
					  mul r0.z, r0.z, cb5[7].x
					  mul r5.xyz, r5.xyzx, r0.zzzz
					  mad r6.xyz, r1.wwww, r9.xyzx, -r5.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
					endif 
					mul r5.xyz, r2.wwww, r10.xyzx
					mad r6.xyz, -v2.xyzx, r0.yyyy, cb2[0].xyzx
					dp3 r0.y, r6.xyzx, r6.xyzx
					max r0.y, r0.y, l(0.001000)
					rsq r0.y, r0.y
					mul r6.xyz, r0.yyyy, r6.xyzx
					dp3 r0.y, r3.xyzx, -r4.xyzx
					dp3_sat r0.z, r3.xyzx, cb2[0].xyzx
					dp3_sat r1.w, r3.xyzx, r6.xyzx
					dp3_sat r3.x, cb2[0].xyzx, r6.xyzx
					mul r3.y, r3.x, r3.x
					dp2 r3.y, r3.yyyy, r4.wwww
					add r3.y, r3.y, l(-0.500000)
					add r3.z, -r0.z, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.z, r3.y, r3.z, l(1.000000)
					add r3.w, -|r0.y|, l(1.000000)
					mul r4.x, r3.w, r3.w
					mul r4.x, r4.x, r4.x
					mul r3.w, r3.w, r4.x
					mad r3.y, r3.y, r3.w, l(1.000000)
					mul r3.y, r3.y, r3.z
					mul r3.y, r0.z, r3.y
					mul r3.z, r4.w, r4.w
					max r3.z, r3.z, l(0.002000)
					add r4.x, -r3.z, l(1.000000)
					mad r4.y, |r0.y|, r4.x, r3.z
					mad r4.x, r0.z, r4.x, r3.z
					mul r0.y, |r0.y|, r4.x
					mad r0.y, r0.z, r4.y, r0.y
					add r0.y, r0.y, l(0.000010)
					div r0.y, l(0.500000), r0.y
					mul r4.x, r3.z, r3.z
					mad r4.y, r1.w, r4.x, -r1.w
					mad r1.w, r4.y, r1.w, l(1.000000)
					mul r4.x, r4.x, l(0.318310)
					mad r1.w, r1.w, r1.w, l(0.000000)
					div r1.w, r4.x, r1.w
					mul r0.y, r0.y, r1.w
					mul r0.y, r0.y, l(3.141593)
					max r0.y, r0.y, l(0.000100)
					sqrt r0.y, r0.y
					mul r0.y, r0.z, r0.y
					mul r0.z, r3.z, l(0.280000)
					mad r0.z, -r0.z, r4.w, l(1.000000)
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.y, r0.y, r1.w
					mad r0.x, r0.w, cb0[9].x, -r0.x
					add_sat r0.x, r0.x, l(1.000000)
					mul r4.xyz, r3.yyyy, r7.xyzx
					mad r4.xyz, r8.xyzx, r2.wwww, r4.xyzx
					mul r6.xyz, r7.xyzx, r0.yyyy
					add r0.y, -r3.x, l(1.000000)
					mul r0.w, r0.y, r0.y
					mul r0.w, r0.w, r0.w
					mul r0.y, r0.y, r0.w
					add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r3.xyz, r3.xyzx, r0.yyyy, r1.xyzx
					mul r3.xyz, r3.xyzx, r6.xyzx
					mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r3.xyz, -r1.xyzx, r0.xxxx
					mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
					mad r0.xyz, r0.yzwy, r1.xyzx, r2.xyzx
					sample r1.xyzw, v1.xyxx, t5.xyzw, s6
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r4.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r5.x, r5.xyzx, r5.xyzx
					sqrt r5.x, r5.x
					add r5.x, -r4.w, r5.x
					mad r4.w, cb3[25].w, r5.x, r4.w
					mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
					eq r5.x, cb6[0].x, l(1.000000)
					if_nz r5.x
					  eq r5.y, cb6[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb6[2].xyzx
					  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb6[4].xyzx
					  movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
					  add r5.yzw, r5.yyzw, -cb6[6].xxyz
					  mul r6.yzw, r5.yyzw, cb6[5].xxyz
					  mad r5.y, r6.y, l(0.250000), l(0.750000)
					  mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
					  max r6.x, r5.z, r5.y
					  sample r6.xyzw, r6.xzwx, t7.xyzw, s1
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
					div r5.zw, v7.xxxy, v7.wwww
					sample r6.xyzw, r5.zwzz, t3.xyzw, s6
					add r5.y, r5.y, -r6.x
					mad r4.w, r4.w, r5.y, r6.x
					sample r6.xyzw, v1.xyxx, t4.xyzw, s5
					add r5.y, -cb0[9].y, l(1.000000)
					mad r5.y, r6.y, cb0[9].y, r5.y
					mad r5.z, -r2.w, cb0[9].x, l(1.000000)
					dp3 r5.w, r2.xyzx, r3.xyzx
					add r5.w, r5.w, r5.w
					mad r6.xyz, r3.xyzx, -r5.wwww, r2.xyzx
					mul r7.xyz, r4.wwww, cb0[2].xyzx
					if_nz r5.x
					  eq r4.w, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r4.w, r8.y, l(0.250000)
					  mul r5.x, cb6[0].z, l(0.500000)
					  mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r4.w, r4.w, r5.x
					  min r8.x, r5.w, r4.w
					  sample r9.xyzw, r8.xzwx, t7.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t7.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t7.xyzw, s1
					  mov r3.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r3.xyzw
					  dp4 r9.y, r10.xyzw, r3.xyzw
					  dp4 r9.z, r8.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r3.xyzw
					  dp4 r9.y, cb2[40].xyzw, r3.xyzw
					  dp4 r9.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r3.w, l(0.000000), cb5[2].w
					if_nz r3.w
					  dp3 r3.w, r6.xyzx, r6.xyzx
					  rsq r3.w, r3.w
					  mul r9.xyz, r3.wwww, r6.xyzx
					  add r10.xyz, -r4.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r4.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r3.w, r10.y, r10.x
					  min r3.w, r10.z, r3.w
					  add r10.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r3.wwww, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r3.w, -r5.z, l(0.700000), l(1.700000)
					mul r3.w, r3.w, r5.z
					mul r3.w, r3.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r3.w
					add r4.w, r9.w, l(-1.000000)
					mad r4.w, cb5[3].w, r4.w, l(1.000000)
					mul r4.w, r4.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r4.wwww
					lt r5.x, cb5[1].w, l(0.999990)
					if_nz r5.x
					  lt r5.x, l(0.000000), cb5[6].w
					  if_nz r5.x
					    dp3 r5.x, r6.xyzx, r6.xyzx
					    rsq r5.x, r5.x
					    mul r11.xyz, r5.xxxx, r6.xyzx
					    add r12.xyz, -r4.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r4.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r5.x, r12.y, r12.x
					    min r5.x, r12.z, r5.x
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
					  endif 
					  sample_l r6.xyzw, r6.xyzx, t6.xyzw, s0, r3.w
					  add r3.w, r6.w, l(-1.000000)
					  mad r3.w, cb5[7].w, r3.w, l(1.000000)
					  mul r3.w, r3.w, cb5[7].x
					  mul r4.xyz, r6.xyzx, r3.wwww
					  mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r5.yyyy, r10.xyzx
					mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r3.xyzx, -r2.xyzx
					dp3_sat r2.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r2.y, r3.xyzx, r6.xyzx
					dp3_sat r2.z, cb2[0].xyzx, r6.xyzx
					mul r3.x, r2.z, r2.z
					dp2 r3.x, r3.xxxx, r5.zzzz
					add r3.x, r3.x, l(-0.500000)
					add r3.y, -r2.x, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r3.y, r3.x, r3.y, l(1.000000)
					add r3.z, -|r1.w|, l(1.000000)
					mul r3.w, r3.z, r3.z
					mul r3.w, r3.w, r3.w
					mul r3.z, r3.z, r3.w
					mad r3.x, r3.x, r3.z, l(1.000000)
					mul r3.x, r3.x, r3.y
					mul r3.x, r2.x, r3.x
					mul r3.y, r5.z, r5.z
					max r3.y, r3.y, l(0.002000)
					add r3.w, -r3.y, l(1.000000)
					mad r4.w, |r1.w|, r3.w, r3.y
					mad r3.w, r2.x, r3.w, r3.y
					mul r1.w, |r1.w|, r3.w
					mad r1.w, r2.x, r4.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.w, r3.y, r3.y
					mad r4.w, r2.y, r3.w, -r2.y
					mad r2.y, r4.w, r2.y, l(1.000000)
					mul r3.w, r3.w, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r3.w, r2.y
					mul r1.w, r1.w, r2.y
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.x, r1.w
					mul r2.x, r3.y, l(0.280000)
					mad r2.x, -r2.x, r5.z, l(1.000000)
					dp3 r2.y, r0.xyzx, r0.xyzx
					ne r2.y, r2.y, l(0.000000)
					and r2.y, r2.y, l(0x3f800000)
					mul r1.w, r1.w, r2.y
					mad r0.w, r2.w, cb0[9].x, -r0.w
					add_sat r0.w, r0.w, l(1.000000)
					mul r3.xyw, r3.xxxx, r7.xyxz
					mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
					mul r5.xyz, r7.xyzx, r1.wwww
					add r1.w, -r2.z, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xywx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xyw, -r0.xyxz, r0.wwww
					mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					add r5.xyz, -r4.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r3.w, r5.xyzx, r6.xyzx
					add r5.xyz, r4.xyzx, -cb3[25].xyzx
					dp3 r4.w, r5.xyzx, r5.xyzx
					sqrt r4.w, r4.w
					add r4.w, -r3.w, r4.w
					mad r3.w, cb3[25].w, r4.w, r3.w
					mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
					eq r4.w, cb6[0].x, l(1.000000)
					if_nz r4.w
					  eq r5.x, cb6[0].y, l(1.000000)
					  mul r5.yzw, v4.wwww, cb6[2].xxyz
					  mad r5.yzw, cb6[1].xxyz, v3.wwww, r5.yyzw
					  mad r5.yzw, cb6[3].xxyz, v5.wwww, r5.yyzw
					  add r5.yzw, r5.yyzw, cb6[4].xxyz
					  movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
					  add r5.xyz, r5.xyzx, -cb6[6].xyzx
					  mul r5.yzw, r5.xxyz, cb6[5].xxyz
					  mad r5.y, r5.y, l(0.250000), l(0.750000)
					  mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
					  max r5.x, r5.y, r6.x
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s1
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
					div r5.yz, v7.xxyx, v7.wwww
					sample r6.xyzw, r5.yzyy, t1.xyzw, s4
					add r5.x, r5.x, -r6.x
					mad r3.w, r3.w, r5.x, r6.x
					sample r5.xyzw, v1.xyxx, t2.xyzw, s3
					add r5.x, -cb0[9].y, l(1.000000)
					mad r5.x, r5.y, cb0[9].y, r5.x
					add r5.y, -cb0[8].w, l(1.000000)
					dp3 r5.z, r3.xyzx, r2.xyzx
					add r5.z, r5.z, r5.z
					mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
					mul r7.xyz, r3.wwww, cb0[2].xyzx
					if_nz r4.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r8.xyz, v4.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r3.w, r8.y, l(0.250000)
					  mul r4.w, cb6[0].z, l(0.500000)
					  mad r5.z, -cb6[0].z, l(0.500000), l(0.250000)
					  max r3.w, r3.w, r4.w
					  min r8.x, r5.z, r3.w
					  sample r9.xyzw, r8.xzwx, t5.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t5.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t5.xyzw, s1
					  mov r2.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r2.xyzw
					  dp4 r9.y, r10.xyzw, r2.xyzw
					  dp4 r9.z, r8.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r2.xyzw
					  dp4 r9.y, cb2[40].xyzw, r2.xyzw
					  dp4 r9.z, cb2[41].xyzw, r2.xyzw
					endif 
					add r8.xyz, r9.xyzx, v6.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r6.xyzx, r6.xyzx
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r6.xyzx
					  add r10.xyz, -r4.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r4.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r4.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r6.xyzx
					endif 
					mad r2.w, -r5.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r5.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
					add r3.w, r9.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r6.xyzx, r6.xyzx
					    rsq r4.w, r4.w
					    mul r11.xyz, r4.wwww, r6.xyzx
					    add r12.xyz, -r4.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r4.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.w, r12.y, r12.x
					    min r4.w, r12.z, r4.w
					    add r4.xyz, r4.xyzx, -cb5[6].xyzx
					    mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
					  endif 
					  sample_l r4.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
					  add r2.w, r4.w, l(-1.000000)
					  mad r2.w, cb5[7].w, r2.w, l(1.000000)
					  mul r2.w, r2.w, cb5[7].x
					  mul r4.xyz, r4.xyzx, r2.wwww
					  mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
					  mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
					endif 
					mul r4.xyz, r5.xxxx, r10.xyzx
					mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r5.yyyy
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r3.x, r5.y, r5.y
					max r3.x, r3.x, l(0.002000)
					add r3.z, -r3.x, l(1.000000)
					mad r3.w, |r1.w|, r3.z, r3.x
					mad r3.z, r2.w, r3.z, r3.x
					mul r1.w, |r1.w|, r3.z
					mad r1.w, r2.w, r3.w, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r3.z, r3.x, r3.x
					mad r3.w, r2.x, r3.z, -r2.x
					mad r2.x, r3.w, r2.x, l(1.000000)
					mul r3.z, r3.z, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r2.x, r3.z, r2.x
					mul r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(3.141593)
					max r1.w, r1.w, l(0.000100)
					sqrt r1.w, r1.w
					mul r1.w, r2.w, r1.w
					mul r2.x, r3.x, l(0.280000)
					mad r2.x, -r2.x, r5.y, l(1.000000)
					dp3 r2.w, r0.xyzx, r0.xyzx
					ne r2.w, r2.w, l(0.000000)
					and r2.w, r2.w, l(0x3f800000)
					mul r1.w, r1.w, r2.w
					add r0.w, -r0.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[8].w
					mul r3.xzw, r2.zzzz, r7.xxyz
					mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
					mul r5.xyz, r7.xyzx, r1.wwww
					add r1.w, -r2.y, l(1.000000)
					mul r2.y, r1.w, r1.w
					mul r2.y, r2.y, r2.y
					mul r1.w, r1.w, r2.y
					add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
					mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
					mul r2.yzw, r2.yyzw, r5.xxyz
					mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
					mul r2.xyz, r4.xyzx, r2.xxxx
					add r3.xzw, -r0.xxyz, r0.wwww
					mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
					mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s3
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  mov r4.y, v3.w
					  mov r4.z, v4.w
					  mov r4.w, v5.w
					  movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
					dp3 r2.w, v2.xyzx, r2.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xzw, r2.xxyz, -r2.wwww, v2.xxyz
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					mad r1.w, -r4.x, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.x
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r3.xzwx, t4.xyzw, s0, r1.w
					add r1.w, r6.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r3.xzw, r6.xxyz, r1.wwww
					mul r3.xyz, r3.yyyy, r3.xzwx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r2.w, r1.w, r1.w
					mad r6.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
					dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
					mov_sat r1.w, r1.w
					dp3 r6.x, r6.xyzx, cb1[0].xyzx
					add r6.y, -r1.w, l(1.000000)
					mul r6.zw, r6.xxxy, r6.xxxy
					mul r2.yz, r6.xxyx, r6.xxwx
					mul r4.yz, r6.zzyz, r2.yyzy
					add r1.w, -r0.w, l(1.000000)
					add_sat r1.w, r1.w, cb0[8].w
					sample r6.xyzw, r4.ywyy, t2.xyzw, s2
					mul r2.y, r6.x, l(16.000000)
					mul r2.yzw, r0.xxyz, r2.yyyy
					mad r1.xyz, r1.xyzx, r0.wwww, r2.yzwy
					mul r2.xyz, r2.xxxx, r5.xyzx
					add r4.xyw, -r0.xyxz, r1.wwww
					mad r0.xyz, r4.zzzz, r4.xywx, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s5
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s3
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  mov r4.y, v3.w
					  mov r4.z, v4.w
					  mov r4.w, v5.w
					  movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t5.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					sample r3.xyzw, v1.xyxx, t2.xyzw, s5
					add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
					dp3 r2.w, v2.xyzx, r2.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xzw, r2.xxyz, -r2.wwww, v2.xxyz
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					mad r1.w, -r4.x, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.x
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r3.xzwx, t4.xyzw, s0, r1.w
					add r1.w, r6.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r3.xzw, r6.xxyz, r1.wwww
					mul r3.xyz, r3.yyyy, r3.xzwx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r2.w, r1.w, r1.w
					mad r6.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
					dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
					mov_sat r1.w, r1.w
					dp3 r6.x, r6.xyzx, cb1[0].xyzx
					add r6.y, -r1.w, l(1.000000)
					mul r6.zw, r6.xxxy, r6.xxxy
					mul r2.yz, r6.xxyx, r6.xxwx
					mul r4.yz, r6.zzyz, r2.yyzy
					add r1.w, -r0.w, l(1.000000)
					add_sat r1.w, r1.w, cb0[8].w
					sample r6.xyzw, r4.ywyy, t3.xyzw, s2
					mul r2.y, r6.x, l(16.000000)
					mul r2.yzw, r0.xxyz, r2.yyyy
					mad r1.xyz, r1.xyzx, r0.wwww, r2.yzwy
					mul r2.xyz, r2.xxxx, r5.xyzx
					add r4.xyw, -r0.xyxz, r1.wwww
					mad r0.xyz, r4.zzzz, r4.xywx, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s3
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  mov r4.y, v3.w
					  mov r4.z, v4.w
					  mov r4.w, v5.w
					  movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t6.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					sample r3.xyzw, v1.xyxx, t2.xyzw, s5
					add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
					dp3 r2.w, v2.xyzx, r2.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xzw, r2.xxyz, -r2.wwww, v2.xxyz
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					mad r1.w, -r4.x, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.x
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r3.xzwx, t5.xyzw, s0, r1.w
					add r1.w, r6.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r3.xzw, r6.xxyz, r1.wwww
					mul r3.xyz, r3.yyyy, r3.xzwx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r2.w, r1.w, r1.w
					mad r6.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
					dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
					mov_sat r1.w, r1.w
					dp3 r6.x, r6.xyzx, cb1[0].xyzx
					add r6.y, -r1.w, l(1.000000)
					mul r6.zw, r6.xxxy, r6.xxxy
					mul r2.yz, r6.xxyx, r6.xxwx
					mul r4.yz, r6.zzyz, r2.yyzy
					add r1.w, -r0.w, l(1.000000)
					add_sat r1.w, r1.w, cb0[8].w
					sample r6.xyzw, r4.ywyy, t3.xyzw, s2
					mul r2.y, r6.x, l(16.000000)
					mul r2.yzw, r0.xxyz, r2.yyyy
					mad r1.xyz, r1.xyzx, r0.wwww, r2.yzwy
					mul r2.xyz, r2.xxxx, r5.xyzx
					add r4.xyw, -r0.xyxz, r1.wwww
					mad r0.xyz, r4.zzzz, r4.xywx, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s6
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s3
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  mov r4.y, v3.w
					  mov r4.z, v4.w
					  mov r4.w, v5.w
					  movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
					dp3 r2.w, v2.xyzx, r2.xyzx
					add r2.w, r2.w, r2.w
					mad r3.xzw, r2.xxyz, -r2.wwww, v2.xxyz
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					mad r1.w, -r4.x, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.x
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r3.xzwx, t3.xyzw, s0, r1.w
					add r1.w, r6.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r3.xzw, r6.xxyz, r1.wwww
					mul r3.xyz, r3.yyyy, r3.xzwx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r2.w, r1.w, r1.w
					mad r6.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
					dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
					mov_sat r1.w, r1.w
					dp3 r6.x, r6.xyzx, cb1[0].xyzx
					add r6.y, -r1.w, l(1.000000)
					mul r6.zw, r6.xxxy, r6.xxxy
					mul r2.yz, r6.xxyx, r6.xxwx
					mul r4.yz, r6.zzyz, r2.yyzy
					add r1.w, -r0.w, l(1.000000)
					add_sat r1.w, r1.w, cb0[8].w
					sample r6.xyzw, r4.ywyy, t2.xyzw, s2
					mul r2.y, r6.x, l(16.000000)
					mul r2.yzw, r0.xxyz, r2.yyyy
					mad r1.xyz, r1.xyzx, r0.wwww, r2.yzwy
					mul r2.xyz, r2.xxxx, r5.xyzx
					add r4.xyw, -r0.xyxz, r1.wwww
					mad r0.xyz, r4.zzzz, r4.xywx, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					eq r0.y, cb3[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb3[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r0.yyyy, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r0.y, r4.y, l(0.250000), l(0.750000)
					  mad r0.z, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.z, r0.y
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, v1.xyxx, t2.xyzw, s5
					mad r5.z, -r0.w, cb0[9].x, l(1.000000)
					dp3 r0.z, v2.xyzx, r3.xyzx
					add r0.z, r0.z, r0.z
					mad r4.xzw, r3.xxyz, -r0.zzzz, v2.xxyz
					mul r6.xyz, r0.yyyy, cb0[2].xyzx
					mad r0.y, -r5.z, l(0.700000), l(1.700000)
					mul r0.y, r0.y, r5.z
					mul r0.y, r0.y, l(6.000000)
					sample_l r7.xyzw, r4.xzwx, t4.xyzw, s0, r0.y
					add r0.y, r7.w, l(-1.000000)
					mad r0.y, cb2[3].w, r0.y, l(1.000000)
					mul r0.y, r0.y, cb2[3].x
					mul r4.xzw, r7.xxyz, r0.yyyy
					mul r4.xyz, r4.yyyy, r4.xzwx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.z, r0.y, r0.y
					mad r7.xyz, r3.xyzx, -r0.zzzz, -v2.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					mov_sat r0.y, r0.y
					dp3 r3.x, r7.xyzx, cb1[0].xyzx
					add r3.y, -r0.y, l(1.000000)
					mul r3.zw, r3.xxxy, r3.xxxy
					mul r3.xw, r3.xxxy, r3.xxxw
					mul r5.xy, r3.zyzz, r3.xwxx
					add r0.y, -r0.x, l(1.000000)
					mad_sat r0.y, r0.w, cb0[9].x, r0.y
					sample r3.xyzw, r5.xzxx, t3.xyzw, s2
					mul r0.w, r3.x, l(16.000000)
					mul r3.xyz, r1.xyzx, r0.wwww
					mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
					mul r0.xzw, r0.zzzz, r6.xxyz
					add r3.xyz, -r1.xyzx, r0.yyyy
					mad r1.xyz, r5.yyyy, r3.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					mad o0.xyz, r2.xyzx, r0.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					eq r0.y, cb3[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb3[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r0.yyyy, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r0.y, r4.y, l(0.250000), l(0.750000)
					  mad r0.z, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.z, r0.y
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, v1.xyxx, t2.xyzw, s5
					mad r5.z, -r0.w, cb0[9].x, l(1.000000)
					dp3 r0.z, v2.xyzx, r3.xyzx
					add r0.z, r0.z, r0.z
					mad r4.xzw, r3.xxyz, -r0.zzzz, v2.xxyz
					mul r6.xyz, r0.yyyy, cb0[2].xyzx
					mad r0.y, -r5.z, l(0.700000), l(1.700000)
					mul r0.y, r0.y, r5.z
					mul r0.y, r0.y, l(6.000000)
					sample_l r7.xyzw, r4.xzwx, t5.xyzw, s0, r0.y
					add r0.y, r7.w, l(-1.000000)
					mad r0.y, cb2[3].w, r0.y, l(1.000000)
					mul r0.y, r0.y, cb2[3].x
					mul r4.xzw, r7.xxyz, r0.yyyy
					mul r4.xyz, r4.yyyy, r4.xzwx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.z, r0.y, r0.y
					mad r7.xyz, r3.xyzx, -r0.zzzz, -v2.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					mov_sat r0.y, r0.y
					dp3 r3.x, r7.xyzx, cb1[0].xyzx
					add r3.y, -r0.y, l(1.000000)
					mul r3.zw, r3.xxxy, r3.xxxy
					mul r3.xw, r3.xxxy, r3.xxxw
					mul r5.xy, r3.zyzz, r3.xwxx
					add r0.y, -r0.x, l(1.000000)
					mad_sat r0.y, r0.w, cb0[9].x, r0.y
					sample r3.xyzw, r5.xzxx, t3.xyzw, s2
					mul r0.w, r3.x, l(16.000000)
					mul r3.xyz, r1.xyzx, r0.wwww
					mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
					mul r0.xzw, r0.zzzz, r6.xxyz
					add r3.xyz, -r1.xyzx, r0.yyyy
					mad r1.xyz, r5.yyyy, r3.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					mad r0.xyz, r2.xyzx, r0.xzwx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s6
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t1.xyzw, s5
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					eq r0.y, cb3[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb3[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r0.yyyy, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r0.y, r4.y, l(0.250000), l(0.750000)
					  mad r0.z, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.z, r0.y
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, v1.xyxx, t3.xyzw, s6
					mad r5.z, -r0.w, cb0[9].x, l(1.000000)
					dp3 r0.z, v2.xyzx, r3.xyzx
					add r0.z, r0.z, r0.z
					mad r4.xzw, r3.xxyz, -r0.zzzz, v2.xxyz
					mul r6.xyz, r0.yyyy, cb0[2].xyzx
					mad r0.y, -r5.z, l(0.700000), l(1.700000)
					mul r0.y, r0.y, r5.z
					mul r0.y, r0.y, l(6.000000)
					sample_l r7.xyzw, r4.xzwx, t5.xyzw, s0, r0.y
					add r0.y, r7.w, l(-1.000000)
					mad r0.y, cb2[3].w, r0.y, l(1.000000)
					mul r0.y, r0.y, cb2[3].x
					mul r4.xzw, r7.xxyz, r0.yyyy
					mul r4.xyz, r4.yyyy, r4.xzwx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.z, r0.y, r0.y
					mad r7.xyz, r3.xyzx, -r0.zzzz, -v2.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					mov_sat r0.y, r0.y
					dp3 r3.x, r7.xyzx, cb1[0].xyzx
					add r3.y, -r0.y, l(1.000000)
					mul r3.zw, r3.xxxy, r3.xxxy
					mul r3.xw, r3.xxxy, r3.xxxw
					mul r5.xy, r3.zyzz, r3.xwxx
					mad r0.y, r0.w, cb0[9].x, -r0.x
					add_sat r0.y, r0.y, l(1.000000)
					sample r3.xyzw, r5.xzxx, t4.xyzw, s2
					mul r0.w, r3.x, l(16.000000)
					mul r3.xyz, r1.xyzx, r0.wwww
					mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
					mul r0.xzw, r0.zzzz, r6.xxyz
					add r3.xyz, -r1.xyzx, r0.yyyy
					mad r1.xyz, r5.yyyy, r3.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					mad o0.xyz, r2.xyzx, r0.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_EMISSION" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t1.xyzw, s5
					sample r1.xyzw, v1.xyxx, t0.xyzw, s3
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					eq r0.y, cb3[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb3[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v3.w
					  mov r5.z, v4.w
					  mov r5.w, v5.w
					  movc r4.xyz, r0.yyyy, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r0.y, r4.y, l(0.250000), l(0.750000)
					  mad r0.z, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.z, r0.y
					  sample r4.xyzw, r4.xzwx, t7.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, v1.xyxx, t3.xyzw, s6
					mad r5.z, -r0.w, cb0[9].x, l(1.000000)
					dp3 r0.z, v2.xyzx, r3.xyzx
					add r0.z, r0.z, r0.z
					mad r4.xzw, r3.xxyz, -r0.zzzz, v2.xxyz
					mul r6.xyz, r0.yyyy, cb0[2].xyzx
					mad r0.y, -r5.z, l(0.700000), l(1.700000)
					mul r0.y, r0.y, r5.z
					mul r0.y, r0.y, l(6.000000)
					sample_l r7.xyzw, r4.xzwx, t6.xyzw, s0, r0.y
					add r0.y, r7.w, l(-1.000000)
					mad r0.y, cb2[3].w, r0.y, l(1.000000)
					mul r0.y, r0.y, cb2[3].x
					mul r4.xzw, r7.xxyz, r0.yyyy
					mul r4.xyz, r4.yyyy, r4.xzwx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.z, r0.y, r0.y
					mad r7.xyz, r3.xyzx, -r0.zzzz, -v2.xyzx
					dp3_sat r0.z, r3.xyzx, cb1[0].xyzx
					mov_sat r0.y, r0.y
					dp3 r3.x, r7.xyzx, cb1[0].xyzx
					add r3.y, -r0.y, l(1.000000)
					mul r3.zw, r3.xxxy, r3.xxxy
					mul r3.xw, r3.xxxy, r3.xxxw
					mul r5.xy, r3.zyzz, r3.xwxx
					mad r0.y, r0.w, cb0[9].x, -r0.x
					add_sat r0.y, r0.y, l(1.000000)
					sample r3.xyzw, r5.xzxx, t4.xyzw, s2
					mul r0.w, r3.x, l(16.000000)
					mul r3.xyz, r1.xyzx, r0.wwww
					mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
					mul r0.xzw, r0.zzzz, r6.xxyz
					add r3.xyz, -r1.xyzx, r0.yyyy
					mad r1.xyz, r5.yyyy, r3.xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, r4.xyzx
					mad r0.xyz, r2.xyzx, r0.xzwx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t5.xyzw, s7
					mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s3
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s5
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb3[2].xyzx
					  mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb3[4].xyzx
					  mov r4.y, v3.w
					  mov r4.z, v4.w
					  mov r4.w, v5.w
					  movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
					  add r3.xyz, r3.xyzx, -cb3[6].xyzx
					  mul r3.yzw, r3.xxyz, cb3[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r3.y
					  sample r3.xyzw, r3.xzwx, t6.xyzw, s1
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					sample r3.xyzw, v1.xyxx, t3.xyzw, s6
					mad r4.z, -r2.w, cb0[9].x, l(1.000000)
					dp3 r3.x, v2.xyzx, r2.xyzx
					add r3.x, r3.x, r3.x
					mad r3.xzw, r2.xxyz, -r3.xxxx, v2.xxyz
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					mad r1.w, -r4.z, l(0.700000), l(1.700000)
					mul r1.w, r1.w, r4.z
					mul r1.w, r1.w, l(6.000000)
					sample_l r6.xyzw, r3.xzwx, t5.xyzw, s0, r1.w
					add r1.w, r6.w, l(-1.000000)
					mad r1.w, cb2[3].w, r1.w, l(1.000000)
					mul r1.w, r1.w, cb2[3].x
					mul r3.xzw, r6.xxyz, r1.wwww
					mul r3.xyz, r3.yyyy, r3.xzwx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r3.w, r1.w, r1.w
					mad r6.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
					dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
					mov_sat r1.w, r1.w
					dp3 r6.x, r6.xyzx, cb1[0].xyzx
					add r6.y, -r1.w, l(1.000000)
					mul r6.zw, r6.xxxy, r6.xxxy
					mul r2.yz, r6.xxyx, r6.xxwx
					mul r4.xy, r6.zyzz, r2.yzyy
					mad r1.w, r2.w, cb0[9].x, -r0.w
					add_sat r1.w, r1.w, l(1.000000)
					sample r6.xyzw, r4.xzxx, t4.xyzw, s2
					mul r2.y, r6.x, l(16.000000)
					mul r2.yzw, r0.xxyz, r2.yyyy
					mad r1.xyz, r1.xyzx, r0.wwww, r2.yzwy
					mul r2.xyz, r2.xxxx, r5.xyzx
					add r4.xzw, -r0.xxyz, r1.wwww
					mad r0.xyz, r4.yyyy, r4.xzwx, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD_DELTA"
			LOD 150
			Tags { "LIGHTMODE" = "FORWARDADD" "PerformanceChecks" = "False" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			Blend Zero One, Zero One
			ZWrite Off
			GpuProgramID 435538
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v4.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v4.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mul r1.xyz, v4.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov o3.w, r2.x
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r3.xyz, r1.yzxy, r0.zxyz
					mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
					mov o5.xyz, r0.xyzx
					mul r0.x, v4.w, cb3[9].w
					mul o4.xyz, r0.xxxx, r1.xyzx
					mov o4.w, r2.y
					mov o5.w, r2.z
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					eq r0.x, cb0[9].w, l(0.000000)
					movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					add r1.xyz, r0.xyzx, -cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o2.xyz, r0.wwww, r1.xyzx
					mov o2.w, l(0)
					mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r0.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r1.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyzw, r0.yyyy, cb0[12].xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
					mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov o3.w, r3.x
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r4.xyz, r2.yzxy, r1.zxyz
					mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r1.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r3.y
					mov o5.w, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb3[3].xyzw
					mul r1.xyzw, r0.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
					mov o0.xyzw, r0.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add o2.xyz, r1.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					mov r2.w, l(0)
					mov o3.xyzw, r2.wwwx
					mov o4.xyzw, r2.wwwy
					mov o5.w, r2.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r2.x, cb0[9].w, l(0.000000)
					movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r2.xyz, v0.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
					mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
					add o2.xyz, r2.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r3.xyz, v4.yyyy, cb3[1].xyzx
					mad r3.xyz, cb3[0].xyzx, v4.xxxx, r3.xyzx
					mad r3.xyz, cb3[2].xyzx, v4.zzzz, r3.xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mov o3.xyz, r3.xyzx
					mad r4.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r2.xyzx
					mov o3.w, r4.x
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r5.xyz, r3.yzxy, r2.zxyz
					mad r3.xyz, r2.yzxy, r3.zxyz, -r5.xyzx
					mov o5.xyz, r2.xyzx
					mul r2.x, v4.w, cb3[9].w
					mul o4.xyz, r2.xxxx, r3.xyzx
					mov o4.w, r4.y
					mov o5.w, r4.z
					mul r2.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r2.x, cb0[9].w, l(0.000000)
					movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r2.xyz, v0.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
					mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
					add o2.xyz, r2.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r2.xyzx
					mov r3.w, l(0)
					mov o3.xyzw, r3.wwwx
					mov o4.xyzw, r3.wwwy
					mov o5.w, r3.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul o5.xyz, r2.wwww, r2.xyzx
					mul r2.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r2.x, cb0[9].w, l(0.000000)
					movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r2.xyz, v0.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
					mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
					add o2.xyz, r2.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r2.xyzx
					mov r3.w, l(0)
					mov o3.xyzw, r3.wwwx
					mov o4.xyzw, r3.wwwy
					mov o5.w, r3.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul o5.xyz, r2.wwww, r2.xyzx
					mul r2.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r2.x, cb0[9].w, l(0.000000)
					movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r2.xyz, v0.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
					mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
					add o2.xyz, r2.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r3.xyz, v4.yyyy, cb3[1].xyzx
					mad r3.xyz, cb3[0].xyzx, v4.xxxx, r3.xyzx
					mad r3.xyz, cb3[2].xyzx, v4.zzzz, r3.xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mov o3.xyz, r3.xyzx
					mad r4.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r2.xyzx
					mov o3.w, r4.x
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r5.xyz, r3.yzxy, r2.zxyz
					mad r3.xyz, r2.yzxy, r3.zxyz, -r5.xyzx
					mov o5.xyz, r2.xyzx
					mul r2.x, v4.w, cb3[9].w
					mul o4.xyz, r2.xxxx, r3.xyzx
					mov o4.w, r4.y
					mov o5.w, r4.z
					mul r2.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r2.x, cb0[9].w, l(0.000000)
					movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r2.xyz, v0.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
					mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
					add o2.xyz, r2.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mul r3.xyz, v4.yyyy, cb3[1].xyzx
					mad r3.xyz, cb3[0].xyzx, v4.xxxx, r3.xyzx
					mad r3.xyz, cb3[2].xyzx, v4.zzzz, r3.xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mov o3.xyz, r3.xyzx
					mad r4.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r2.xyzx
					mov o3.w, r4.x
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r5.xyz, r3.yzxy, r2.zxyz
					mad r3.xyz, r2.yzxy, r3.zxyz, -r5.xyzx
					mov o5.xyz, r2.xyzx
					mul r2.x, v4.w, cb3[9].w
					mul o4.xyz, r2.xxxx, r3.xyzx
					mov o4.w, r4.y
					mov o5.w, r4.z
					mul r2.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_output o8.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					eq r2.x, cb0[9].w, l(0.000000)
					movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r2.xyz, v0.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
					mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
					add o2.xyz, r2.xyzx, -cb1[4].xyzx
					mov o2.w, l(0)
					mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r2.xyzx
					mov r3.w, l(0)
					mov o3.xyzw, r3.wwwx
					mov o4.xyzw, r3.wwwy
					mov o5.w, r3.z
					dp3 r2.x, v1.xyzx, cb3[4].xyzx
					dp3 r2.y, v1.xyzx, cb3[5].xyzx
					dp3 r2.z, v1.xyzx, cb3[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul o5.xyz, r2.wwww, r2.xyzx
					mul r2.xy, r0.yyyy, cb0[12].xyxx
					mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
					mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov r1.w, l(0)
					mov o3.xyzw, r1.wwwx
					mov o4.xyzw, r1.wwwy
					mov o5.w, r1.z
					dp3 r1.x, v1.xyzx, cb3[4].xyzx
					dp3 r1.y, v1.xyzx, cb3[5].xyzx
					dp3 r1.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o5.xyz, r1.wwww, r1.xyzx
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xy          3     NONE   float   xy  
					// TANGENT                  0   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_input v3.xy
					dcl_input v4.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					eq r1.x, cb0[9].w, l(0.000000)
					movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
					mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mul r1.xyz, v0.yyyy, cb3[1].xyzx
					mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
					mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					add r2.xyz, r1.xyzx, -cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul o2.xyz, r1.wwww, r2.xyzx
					mov o2.w, l(0)
					mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mov o3.w, r1.x
					mul r2.xyz, v4.yyyy, cb3[1].xyzx
					mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r2.xyz, r1.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					dp3 r3.x, v1.xyzx, cb3[4].xyzx
					dp3 r3.y, v1.xyzx, cb3[5].xyzx
					dp3 r3.z, v1.xyzx, cb3[6].xyzx
					dp3 r1.x, r3.xyzx, r3.xyzx
					rsq r1.x, r1.x
					mul r3.xyz, r1.xxxx, r3.xyzx
					mul r4.xyz, r2.yzxy, r3.zxyz
					mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
					mov o5.xyz, r3.xyzx
					mul r1.x, v4.w, cb3[9].w
					mul o4.xyz, r1.xxxx, r2.xyzx
					mov o4.w, r1.y
					mov o5.w, r1.z
					mul r1.xyz, r0.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
					mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					mul r3.xyz, v6.yyyy, cb0[12].xyzx
					mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
					mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
					add r3.xyz, r3.xyzx, cb0[14].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					dp3 r2.w, r3.xyzx, r3.xyzx
					sample r3.xyzw, r2.wwww, t1.xyzw, s3
					mul r1.w, r1.w, r3.x
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t2.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v6.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t3.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t2.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v6.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t2.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					eq r0.y, cb2[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r0.yyyy, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r0.y, r4.y, l(0.250000), l(0.750000)
					  mad r0.z, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.z, r0.y
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r4.xyzw, cb1[46].xyzw
					mul r4.xyz, r0.yyyy, cb0[2].xyzx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.y, r0.y, r0.y
					mad r5.xyz, r3.xyzx, -r0.yyyy, -v2.xyzx
					mov r6.x, v3.w
					mov r6.y, v4.w
					mov r6.z, v5.w
					dp3_sat r0.y, r3.xyzx, r6.xyzx
					dp3 r0.z, r5.xyzx, r6.xyzx
					mul r0.z, r0.z, r0.z
					mul r3.x, r0.z, r0.z
					mad r3.y, -r0.w, cb0[9].x, l(1.000000)
					sample r3.xyzw, r3.xyxx, t2.xyzw, s1
					mul r0.z, r3.x, l(16.000000)
					mul r1.xyz, r1.xyzx, r0.zzzz
					mad r0.xzw, r2.xxyz, r0.xxxx, r1.xxyz
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul o0.xyz, r0.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					eq r0.y, cb2[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r0.yyyy, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r0.y, r4.y, l(0.250000), l(0.750000)
					  mad r0.z, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r0.z, r0.y
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r4.xyzw, cb1[46].xyzw
					mul r4.xyz, r0.yyyy, cb0[2].xyzx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.y, r0.y, r0.y
					mad r5.xyz, r3.xyzx, -r0.yyyy, -v2.xyzx
					mov r6.x, v3.w
					mov r6.y, v4.w
					mov r6.z, v5.w
					dp3_sat r0.y, r3.xyzx, r6.xyzx
					dp3 r0.z, r5.xyzx, r6.xyzx
					mul r0.z, r0.z, r0.z
					mul r3.x, r0.z, r0.z
					mad r3.y, -r0.w, cb0[9].x, l(1.000000)
					sample r3.xyzw, r3.xyxx, t3.xyzw, s1
					mul r0.z, r3.x, l(16.000000)
					mul r1.xyz, r1.xyzx, r0.zzzz
					mad r0.xzw, r2.xxyz, r0.xxxx, r1.xxyz
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul o0.xyz, r0.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v6.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r3.y
					  sample r3.xyzw, r3.xzwx, t4.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					mad r2.y, -r2.w, cb0[9].x, l(1.000000)
					sample r2.xyzw, r2.xyxx, t3.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v6.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t2.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					mul r3.xyzw, v6.yyyy, cb0[12].xyzw
					mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
					mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
					add r3.xyzw, r3.xyzw, cb0[14].xyzw
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					lt r2.w, l(0.000000), r3.z
					and r2.w, r2.w, l(0x3f800000)
					div r4.xy, r3.xyxx, r3.wwww
					add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r4.xyzw, r4.xyxx, t2.xyzw, s4
					mul r2.w, r2.w, r4.w
					dp3 r3.x, r3.xyzx, r3.xyzx
					sample r3.xyzw, r3.xxxx, t3.xyzw, s5
					mul r2.w, r2.w, r3.x
					mul r1.w, r1.w, r2.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t4.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					mul r3.xyzw, v6.yyyy, cb0[12].xyzw
					mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
					mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
					add r3.xyzw, r3.xyzw, cb0[14].xyzw
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					lt r2.w, l(0.000000), r3.z
					and r2.w, r2.w, l(0x3f800000)
					div r4.xy, r3.xyxx, r3.wwww
					add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r4.xyzw, r4.xyxx, t1.xyzw, s3
					mul r2.w, r2.w, r4.w
					dp3 r3.x, r3.xyzx, r3.xyzx
					sample r3.xyzw, r3.xxxx, t2.xyzw, s4
					mul r2.w, r2.w, r3.x
					mul r1.w, r1.w, r2.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t3.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					eq r0.y, cb2[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.yyyy, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.y, r5.y, l(0.250000), l(0.750000)
					  mad r0.z, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.z, r0.y
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r5.xyzw, cb1[46].xyzw
					lt r0.z, l(0.000000), r4.z
					and r0.z, r0.z, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t2.xyzw, s4
					mul r0.z, r0.z, r5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t3.xyzw, s5
					mul r0.z, r0.z, r4.x
					mul r0.y, r0.y, r0.z
					mul r4.xyz, r0.yyyy, cb0[2].xyzx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.y, r0.y, r0.y
					mad r5.xyz, r3.xyzx, -r0.yyyy, -v2.xyzx
					mov r6.x, v3.w
					mov r6.y, v4.w
					mov r6.z, v5.w
					dp3_sat r0.y, r3.xyzx, r6.xyzx
					dp3 r0.z, r5.xyzx, r6.xyzx
					mul r0.z, r0.z, r0.z
					mul r3.x, r0.z, r0.z
					mad r3.y, -r0.w, cb0[9].x, l(1.000000)
					sample r3.xyzw, r3.xyxx, t4.xyzw, s1
					mul r0.z, r3.x, l(16.000000)
					mul r1.xyz, r1.xyzx, r0.zzzz
					mad r0.xzw, r2.xxyz, r0.xxxx, r1.xxyz
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul o0.xyz, r0.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					mul r4.xyzw, v6.yyyy, cb0[12].xyzw
					mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[14].xyzw
					eq r0.y, cb2[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.yyyy, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.y, r5.y, l(0.250000), l(0.750000)
					  mad r0.z, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.z, r0.y
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r5.xyzw, cb1[46].xyzw
					lt r0.z, l(0.000000), r4.z
					and r0.z, r0.z, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t3.xyzw, s5
					mul r0.z, r0.z, r5.w
					dp3 r1.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r1.wwww, t4.xyzw, s6
					mul r0.z, r0.z, r4.x
					mul r0.y, r0.y, r0.z
					mul r4.xyz, r0.yyyy, cb0[2].xyzx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.y, r0.y, r0.y
					mad r5.xyz, r3.xyzx, -r0.yyyy, -v2.xyzx
					mov r6.x, v3.w
					mov r6.y, v4.w
					mov r6.z, v5.w
					dp3_sat r0.y, r3.xyzx, r6.xyzx
					dp3 r0.z, r5.xyzx, r6.xyzx
					mul r0.z, r0.z, r0.z
					mul r3.x, r0.z, r0.z
					mad r3.y, -r0.w, cb0[9].x, l(1.000000)
					sample r3.xyzw, r3.xyxx, t5.xyzw, s1
					mul r0.z, r3.x, l(16.000000)
					mul r1.xyz, r1.xyzx, r0.zzzz
					mad r0.xzw, r2.xxyz, r0.xxxx, r1.xxyz
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul o0.xyz, r0.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					mul r3.xyzw, v6.yyyy, cb0[12].xyzw
					mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
					mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
					add r3.xyzw, r3.xyzw, cb0[14].xyzw
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r4.y
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					lt r4.x, l(0.000000), r3.z
					and r4.x, r4.x, l(0x3f800000)
					div r4.yz, r3.xxyx, r3.wwww
					add r4.yz, r4.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r5.xyzw, r4.yzyy, t3.xyzw, s5
					mul r3.w, r4.x, r5.w
					dp3 r3.x, r3.xyzx, r3.xyzx
					sample r4.xyzw, r3.xxxx, t4.xyzw, s6
					mul r3.x, r3.w, r4.x
					mul r1.w, r1.w, r3.x
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					mad r2.y, -r2.w, cb0[9].x, l(1.000000)
					sample r2.xyzw, r2.xyxx, t5.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					mul r3.xyzw, v6.yyyy, cb0[12].xyzw
					mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
					mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
					add r3.xyzw, r3.xyzw, cb0[14].xyzw
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					lt r2.w, l(0.000000), r3.z
					and r2.w, r2.w, l(0x3f800000)
					div r4.xy, r3.xyxx, r3.wwww
					add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r4.xyzw, r4.xyxx, t1.xyzw, s3
					mul r2.w, r2.w, r4.w
					dp3 r3.x, r3.xyzx, r3.xyzx
					sample r3.xyzw, r3.xxxx, t2.xyzw, s4
					mul r2.w, r2.w, r3.x
					mul r1.w, r1.w, r2.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t3.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					mul r3.xyz, v6.yyyy, cb0[12].xyzx
					mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
					mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
					add r3.xyz, r3.xyzx, cb0[14].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					dp3 r2.w, r3.xyzx, r3.xyzx
					sample r4.xyzw, r2.wwww, t2.xyzw, s5
					sample r3.xyzw, r3.xyzx, t3.xyzw, s4
					mul r2.w, r3.w, r4.x
					mul r1.w, r1.w, r2.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t4.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					mul r3.xyz, v6.yyyy, cb0[12].xyzx
					mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
					mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
					add r3.xyz, r3.xyzx, cb0[14].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					dp3 r2.w, r3.xyzx, r3.xyzx
					sample r4.xyzw, r2.wwww, t1.xyzw, s4
					sample r3.xyzw, r3.xyzx, t2.xyzw, s3
					mul r2.w, r3.w, r4.x
					mul r1.w, r1.w, r2.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t3.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.y, cb2[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.yyyy, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.y, r5.y, l(0.250000), l(0.750000)
					  mad r0.z, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.z, r0.y
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r5.xyzw, cb1[46].xyzw
					dp3 r0.z, r4.xyzx, r4.xyzx
					sample r5.xyzw, r0.zzzz, t2.xyzw, s5
					sample r4.xyzw, r4.xyzx, t3.xyzw, s4
					mul r0.z, r4.w, r5.x
					mul r0.y, r0.y, r0.z
					mul r4.xyz, r0.yyyy, cb0[2].xyzx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.y, r0.y, r0.y
					mad r5.xyz, r3.xyzx, -r0.yyyy, -v2.xyzx
					mov r6.x, v3.w
					mov r6.y, v4.w
					mov r6.z, v5.w
					dp3_sat r0.y, r3.xyzx, r6.xyzx
					dp3 r0.z, r5.xyzx, r6.xyzx
					mul r0.z, r0.z, r0.z
					mul r3.x, r0.z, r0.z
					mad r3.y, -r0.w, cb0[9].x, l(1.000000)
					sample r3.xyzw, r3.xyxx, t4.xyzw, s1
					mul r0.z, r3.x, l(16.000000)
					mul r1.xyz, r1.xyzx, r0.zzzz
					mad r0.xzw, r2.xxyz, r0.xxxx, r1.xxyz
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul o0.xyz, r0.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.y, cb2[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.yyyy, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.y, r5.y, l(0.250000), l(0.750000)
					  mad r0.z, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.z, r0.y
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r5.xyzw, cb1[46].xyzw
					dp3 r0.z, r4.xyzx, r4.xyzx
					sample r5.xyzw, r0.zzzz, t3.xyzw, s6
					sample r4.xyzw, r4.xyzx, t4.xyzw, s5
					mul r0.z, r4.w, r5.x
					mul r0.y, r0.y, r0.z
					mul r4.xyz, r0.yyyy, cb0[2].xyzx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.y, r0.y, r0.y
					mad r5.xyz, r3.xyzx, -r0.yyyy, -v2.xyzx
					mov r6.x, v3.w
					mov r6.y, v4.w
					mov r6.z, v5.w
					dp3_sat r0.y, r3.xyzx, r6.xyzx
					dp3 r0.z, r5.xyzx, r6.xyzx
					mul r0.z, r0.z, r0.z
					mul r3.x, r0.z, r0.z
					mad r3.y, -r0.w, cb0[9].x, l(1.000000)
					sample r3.xyzw, r3.xyxx, t5.xyzw, s1
					mul r0.z, r3.x, l(16.000000)
					mul r1.xyz, r1.xyzx, r0.zzzz
					mad r0.xzw, r2.xxyz, r0.xxxx, r1.xxyz
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul o0.xyz, r0.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					mul r3.xyz, v6.yyyy, cb0[12].xyzx
					mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
					mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
					add r3.xyz, r3.xyzx, cb0[14].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r3.w
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					dp3 r3.w, r3.xyzx, r3.xyzx
					sample r4.xyzw, r3.wwww, t3.xyzw, s6
					sample r3.xyzw, r3.xyzx, t4.xyzw, s5
					mul r3.x, r3.w, r4.x
					mul r1.w, r1.w, r3.x
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					mad r2.y, -r2.w, cb0[9].x, l(1.000000)
					sample r2.xyzw, r2.xyxx, t5.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					mul r3.xyz, v6.yyyy, cb0[12].xyzx
					mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
					mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
					add r3.xyz, r3.xyzx, cb0[14].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					dp3 r2.w, r3.xyzx, r3.xyzx
					sample r4.xyzw, r2.wwww, t1.xyzw, s4
					sample r3.xyzw, r3.xyzx, t2.xyzw, s3
					mul r2.w, r3.w, r4.x
					mul r1.w, r1.w, r2.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t3.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					mul r3.xy, v6.yyyy, cb0[12].xyxx
					mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
					mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
					add r3.xy, r3.xyxx, cb0[14].xyxx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					sample r3.xyzw, r3.xyxx, t2.xyzw, s4
					mul r1.w, r1.w, r3.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t3.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					mul r3.xy, v6.yyyy, cb0[12].xyxx
					mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
					mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
					add r3.xy, r3.xyxx, cb0[14].xyxx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					sample r3.xyzw, r3.xyxx, t1.xyzw, s3
					mul r1.w, r1.w, r3.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t2.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					mul r0.yz, v6.yyyy, cb0[12].xxyx
					mad r0.yz, cb0[11].xxyx, v6.xxxx, r0.yyzy
					mad r0.yz, cb0[13].xxyx, v6.zzzz, r0.yyzy
					add r0.yz, r0.yyzy, cb0[14].xxyx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, r0.yzyy, t2.xyzw, s4
					mul r0.y, r1.w, r4.w
					mul r4.xyz, r0.yyyy, cb0[2].xyzx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.y, r0.y, r0.y
					mad r5.xyz, r3.xyzx, -r0.yyyy, -v2.xyzx
					mov r6.x, v3.w
					mov r6.y, v4.w
					mov r6.z, v5.w
					dp3_sat r0.y, r3.xyzx, r6.xyzx
					dp3 r0.z, r5.xyzx, r6.xyzx
					mul r0.z, r0.z, r0.z
					mul r3.x, r0.z, r0.z
					mad r3.y, -r0.w, cb0[9].x, l(1.000000)
					sample r3.xyzw, r3.xyxx, t3.xyzw, s1
					mul r0.z, r3.x, l(16.000000)
					mul r1.xyz, r1.xyzx, r0.zzzz
					mad r0.xzw, r2.xxyz, r0.xxxx, r1.xxyz
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul o0.xyz, r0.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					mul r0.yz, v6.yyyy, cb0[12].xxyx
					mad r0.yz, cb0[11].xxyx, v6.xxxx, r0.yyzy
					mad r0.yz, cb0[13].xxyx, v6.zzzz, r0.yyzy
					add r0.yz, r0.yyzy, cb0[14].xxyx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					sample r4.xyzw, r0.yzyy, t3.xyzw, s5
					mul r0.y, r1.w, r4.w
					mul r4.xyz, r0.yyyy, cb0[2].xyzx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.y, r0.y, r0.y
					mad r5.xyz, r3.xyzx, -r0.yyyy, -v2.xyzx
					mov r6.x, v3.w
					mov r6.y, v4.w
					mov r6.z, v5.w
					dp3_sat r0.y, r3.xyzx, r6.xyzx
					dp3 r0.z, r5.xyzx, r6.xyzx
					mul r0.z, r0.z, r0.z
					mul r3.x, r0.z, r0.z
					mad r3.y, -r0.w, cb0[9].x, l(1.000000)
					sample r3.xyzw, r3.xyxx, t4.xyzw, s1
					mul r0.z, r3.x, l(16.000000)
					mul r1.xyz, r1.xyzx, r0.zzzz
					mad r0.xzw, r2.xxyz, r0.xxxx, r1.xxyz
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul o0.xyz, r0.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					mul r3.xy, v6.yyyy, cb0[12].xyxx
					mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
					mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
					add r3.xy, r3.xyxx, cb0[14].xyxx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.z, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r3.z
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					sample r3.xyzw, r3.xyxx, t3.xyzw, s5
					mul r1.w, r1.w, r3.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					mad r2.y, -r2.w, cb0[9].x, l(1.000000)
					sample r2.xyzw, r2.xyxx, t4.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					mul r3.xy, v6.yyyy, cb0[12].xyxx
					mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
					mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
					add r3.xy, r3.xyxx, cb0[14].xyxx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					sample r3.xyzw, r3.xyxx, t1.xyzw, s3
					mul r1.w, r1.w, r3.w
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t2.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					mul r0.xyzw, v6.yyyy, cb0[12].xyzw
					mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
					mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[14].xyzw
					div r1.xy, r0.xyxx, r0.wwww
					add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r1.xyzw, r1.xyxx, t2.xyzw, s4
					lt r0.w, l(0.000000), r0.z
					dp3 r0.x, r0.xyzx, r0.xyzx
					sample r2.xyzw, r0.xxxx, t3.xyzw, s5
					and r0.x, r0.w, l(0x3f800000)
					mul r0.x, r1.w, r0.x
					mul r0.x, r2.x, r0.x
					mul r1.xyzw, v6.yyyy, cb1[9].xyzw
					mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
					mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
					add r1.xyzw, r1.xyzw, cb1[11].xyzw
					div r0.yzw, r1.xxyz, r1.wwww
					sample_c_lz r0.y, r0.yzyy, t5.xxxx, s1, r0.w
					add r0.z, -cb1[24].x, l(1.000000)
					mad r0.y, r0.y, r0.z, cb1[24].x
					mul r0.x, r0.y, r0.x
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s3
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xyz, r1.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
					mov r2.x, v3.w
					mov r2.y, v4.w
					mov r2.z, v5.w
					dp3_sat r0.w, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, -v2.xyzx, r1.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
					dp3 r0.w, r1.xyzx, r2.xyzx
					mul r0.w, r0.w, r0.w
					mul r1.x, r0.w, r0.w
					add r1.y, -cb0[8].w, l(1.000000)
					sample r1.xyzw, r1.xyxx, t4.xyzw, s0
					mul r0.w, r1.x, l(16.000000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mul r1.xyz, r1.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r1.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mul r0.xyz, r0.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, -v2.xyzx, r2.xyzx
					add r0.w, r0.w, r0.w
					mad r3.xyz, r2.xyzx, -r0.wwww, -v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r0.w, r3.xyzx, r4.xyzx
					dp3_sat r1.w, r2.xyzx, r4.xyzx
					mul r0.w, r0.w, r0.w
					mul r2.x, r0.w, r0.w
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t3.xyzw, s0
					mul r0.w, r2.x, l(16.000000)
					mul r1.xyz, r1.xyzx, r0.wwww
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
					mul r2.xyzw, v6.yyyy, cb0[12].xyzw
					mad r2.xyzw, cb0[11].xyzw, v6.xxxx, r2.xyzw
					mad r2.xyzw, cb0[13].xyzw, v6.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb0[14].xyzw
					div r1.xy, r2.xyxx, r2.wwww
					add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r3.xyzw, r1.xyxx, t1.xyzw, s3
					lt r0.w, l(0.000000), r2.z
					dp3 r1.x, r2.xyzx, r2.xyzx
					sample r2.xyzw, r1.xxxx, t2.xyzw, s4
					and r0.w, r0.w, l(0x3f800000)
					mul r0.w, r3.w, r0.w
					mul r0.w, r2.x, r0.w
					mul r2.xyzw, v6.yyyy, cb1[9].xyzw
					mad r2.xyzw, cb1[8].xyzw, v6.xxxx, r2.xyzw
					mad r2.xyzw, cb1[10].xyzw, v6.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb1[11].xyzw
					div r1.xyz, r2.xyzx, r2.wwww
					sample_c_lz r1.x, r1.xyxx, t4.xxxx, s1, r1.z
					add r1.y, -cb1[24].x, l(1.000000)
					mad r1.x, r1.x, r1.y, cb1[24].x
					mul r0.w, r0.w, r1.x
					mul r1.xyz, r0.wwww, cb0[2].xyzx
					mul r1.xyz, r1.wwww, r1.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					mul r0.xyzw, v6.yyyy, cb0[12].xyzw
					mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
					mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[14].xyzw
					div r1.xy, r0.xyxx, r0.wwww
					add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r1.xyzw, r1.xyxx, t2.xyzw, s4
					lt r0.w, l(0.000000), r0.z
					dp3 r0.x, r0.xyzx, r0.xyzx
					sample r2.xyzw, r0.xxxx, t3.xyzw, s5
					and r0.x, r0.w, l(0x3f800000)
					mul r0.x, r1.w, r0.x
					mul r0.x, r2.x, r0.x
					mul r1.xyzw, v6.yyyy, cb1[9].xyzw
					mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
					mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
					add r1.xyzw, r1.xyzw, cb1[11].xyzw
					div r0.yzw, r1.xxyz, r1.wwww
					sample_c_lz r0.y, r0.yzyy, t5.xxxx, s1, r0.w
					add r0.z, -cb1[24].x, l(1.000000)
					mad r0.y, r0.y, r0.z, cb1[24].x
					mul r0.x, r0.y, r0.x
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.xyzx
					mov r2.x, v3.w
					mov r2.y, v4.w
					mov r2.z, v5.w
					dp3_sat r0.w, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, -v2.xyzx, r1.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
					dp3 r0.w, r1.xyzx, r2.xyzx
					mul r0.w, r0.w, r0.w
					mul r1.x, r0.w, r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mad r1.y, -r2.w, cb0[9].x, l(1.000000)
					sample r1.xyzw, r1.xyxx, t4.xyzw, s0
					mul r0.w, r1.x, l(16.000000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mad r2.yzw, cb0[4].xxyz, r1.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
					mul r1.xyz, r1.xyzx, cb0[4].xyzx
					mad r2.yzw, r2.xxxx, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
					mad r1.w, -r2.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.wwww, r2.yzwy
					mad r1.xyz, r1.xyzx, r1.wwww, r2.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					mul r0.xyzw, v6.yyyy, cb0[12].xyzw
					mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
					mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[14].xyzw
					div r1.xy, r0.xyxx, r0.wwww
					add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r1.xyzw, r1.xyxx, t3.xyzw, s5
					lt r0.w, l(0.000000), r0.z
					dp3 r0.x, r0.xyzx, r0.xyzx
					sample r2.xyzw, r0.xxxx, t4.xyzw, s6
					and r0.x, r0.w, l(0x3f800000)
					mul r0.x, r1.w, r0.x
					mul r0.x, r2.x, r0.x
					mul r1.xyzw, v6.yyyy, cb1[9].xyzw
					mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
					mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
					add r1.xyzw, r1.xyzw, cb1[11].xyzw
					div r0.yzw, r1.xxyz, r1.wwww
					sample_c_lz r0.y, r0.yzyy, t6.xxxx, s1, r0.w
					add r0.z, -cb1[24].x, l(1.000000)
					mad r0.y, r0.y, r0.z, cb1[24].x
					mul r0.x, r0.y, r0.x
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					sample r1.xyzw, v1.xyxx, t2.xyzw, s3
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xyz, r1.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
					mov r2.x, v3.w
					mov r2.y, v4.w
					mov r2.z, v5.w
					dp3_sat r0.w, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, -v2.xyzx, r1.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
					dp3 r0.w, r1.xyzx, r2.xyzx
					mul r0.w, r0.w, r0.w
					mul r1.x, r0.w, r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r1.y, -r2.w, cb0[9].x, l(1.000000)
					sample r1.xyzw, r1.xyxx, t5.xyzw, s0
					mul r0.w, r1.x, l(16.000000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mad r2.yzw, cb0[4].xxyz, r1.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
					mul r1.xyz, r1.xyzx, cb0[4].xyzx
					mad r2.yzw, r2.xxxx, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
					mad r1.w, -r2.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.wwww, r2.yzwy
					mad r1.xyz, r1.xyzx, r1.wwww, r2.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r1.xyzw, v1.xyxx, t2.xyzw, s3
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xyz, r1.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, -v2.xyzx, r1.xyzx
					add r0.w, r0.w, r0.w
					mad r2.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
					mov r3.x, v3.w
					mov r3.y, v4.w
					mov r3.z, v5.w
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r1.x, r1.xyzx, r3.xyzx
					mul r0.w, r0.w, r0.w
					mul r2.x, r0.w, r0.w
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					mad r2.y, -r3.w, cb0[9].x, l(1.000000)
					sample r2.xyzw, r2.xyxx, t5.xyzw, s0
					mul r0.w, r2.x, l(16.000000)
					mad r1.yzw, r0.xxyz, cb0[4].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
					mul r0.xyz, r0.xyzx, cb0[4].xyzx
					mad r1.yzw, r3.xxxx, r1.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
					mad r2.x, -r3.x, l(0.779084), l(0.779084)
					mul r1.yzw, r0.wwww, r1.yyzw
					mad r0.xyz, r0.xyzx, r2.xxxx, r1.yzwy
					mul r2.xyzw, v6.yyyy, cb0[12].xyzw
					mad r2.xyzw, cb0[11].xyzw, v6.xxxx, r2.xyzw
					mad r2.xyzw, cb0[13].xyzw, v6.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb0[14].xyzw
					div r1.yz, r2.xxyx, r2.wwww
					add r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r3.xyzw, r1.yzyy, t3.xyzw, s5
					lt r0.w, l(0.000000), r2.z
					dp3 r1.y, r2.xyzx, r2.xyzx
					sample r2.xyzw, r1.yyyy, t4.xyzw, s6
					and r0.w, r0.w, l(0x3f800000)
					mul r0.w, r3.w, r0.w
					mul r0.w, r2.x, r0.w
					mul r2.xyzw, v6.yyyy, cb1[9].xyzw
					mad r2.xyzw, cb1[8].xyzw, v6.xxxx, r2.xyzw
					mad r2.xyzw, cb1[10].xyzw, v6.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb1[11].xyzw
					div r1.yzw, r2.xxyz, r2.wwww
					sample_c_lz r1.y, r1.yzyy, t6.xxxx, s1, r1.w
					add r1.z, -cb1[24].x, l(1.000000)
					mad r1.y, r1.y, r1.z, cb1[24].x
					mul r0.w, r0.w, r1.y
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					mul r1.xyz, r1.xxxx, r1.yzwy
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					mul r0.xyzw, v6.yyyy, cb0[12].xyzw
					mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
					mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb0[14].xyzw
					div r1.xy, r0.xyxx, r0.wwww
					add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					lt r0.w, l(0.000000), r0.z
					dp3 r0.x, r0.xyzx, r0.xyzx
					sample r2.xyzw, r0.xxxx, t2.xyzw, s4
					and r0.x, r0.w, l(0x3f800000)
					mul r0.x, r1.w, r0.x
					mul r0.x, r2.x, r0.x
					mul r1.xyzw, v6.yyyy, cb1[9].xyzw
					mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
					mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
					add r1.xyzw, r1.xyzw, cb1[11].xyzw
					div r0.yzw, r1.xxyz, r1.wwww
					sample_c_lz r0.y, r0.yzyy, t4.xxxx, s1, r0.w
					add r0.z, -cb1[24].x, l(1.000000)
					mad r0.y, r0.y, r0.z, cb1[24].x
					mul r0.x, r0.y, r0.x
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.xyzx
					mov r2.x, v3.w
					mov r2.y, v4.w
					mov r2.z, v5.w
					dp3_sat r0.w, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, -v2.xyzx, r1.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
					dp3 r0.w, r1.xyzx, r2.xyzx
					mul r0.w, r0.w, r0.w
					mul r1.x, r0.w, r0.w
					add r1.y, -cb0[8].w, l(1.000000)
					sample r1.xyzw, r1.xyxx, t3.xyzw, s0
					mul r0.w, r1.x, l(16.000000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mul r1.xyz, r1.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t2.xyzw, s3
					add r2.w, r2.w, -r4.x
					mad r1.w, r1.w, r2.w, r4.x
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t1.xyzw, s2
					add r2.w, r2.w, -r4.x
					mad r1.w, r1.w, r2.w, r4.x
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s2
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r2.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb5[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t2.xyzw, s3
					add r3.w, r3.w, -r4.x
					mad r2.w, r2.w, r3.w, r4.x
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r2.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb5[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t3.xyzw, s4
					add r3.w, r3.w, -r4.x
					mad r2.w, r2.w, r3.w, r4.x
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r1.w, r3.w
					mad r1.w, cb3[25].w, r3.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r3.w, cb5[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t3.xyzw, s4
					add r3.w, r3.w, -r4.x
					mad r1.w, r1.w, r3.w, r4.x
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					mad r1.w, -r2.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					add r4.xyz, -v6.xyzx, cb1[4].xyzx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r4.xyzx, r5.xyzx
					add r4.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v7.xyxx, v7.wwww
					sample r4.xyzw, r4.xyxx, t1.xyzw, s2
					add r2.w, r2.w, -r4.x
					mad r1.w, r1.w, r2.w, r4.x
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v8.xxxy, v8.wwww
					sample r5.xyzw, r4.zwzz, t2.xyzw, s3
					add r2.w, r2.w, -r5.x
					mad r1.w, r1.w, r2.w, r5.x
					sample r4.xyzw, r4.xyxx, t3.xyzw, s4
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v8.xxxy, v8.wwww
					sample r5.xyzw, r4.zwzz, t1.xyzw, s2
					add r2.w, r2.w, -r5.x
					mad r1.w, r1.w, r2.w, r5.x
					sample r4.xyzw, r4.xyxx, t2.xyzw, s3
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s2
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb5[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.z
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v8.xxxy, v8.wwww
					sample r5.xyzw, r4.zwzz, t2.xyzw, s3
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r4.xyzw, r4.xyxx, t3.xyzw, s4
					mul r2.w, r2.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					mul r0.xyz, r0.xxxx, r2.xyzx
					sample r2.xyzw, v1.xyxx, t2.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					dp3 r1.w, v2.xyzx, v2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r2.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb5[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.z
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v8.xxxy, v8.wwww
					sample r5.xyzw, r4.zwzz, t3.xyzw, s4
					add r3.w, r3.w, -r5.x
					mad r2.w, r2.w, r3.w, r5.x
					sample r4.xyzw, r4.xyxx, t4.xyzw, s5
					mul r2.w, r2.w, r4.w
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r0.w, -r0.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
					dp3 r1.w, r6.xyzx, r6.xyzx
					max r1.w, r1.w, l(0.001000)
					rsq r1.w, r1.w
					mul r6.xyz, r1.wwww, r6.xyzx
					dp3 r1.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r0.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r1.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r0.w, r0.w, r0.w
					max r0.w, r0.w, l(0.002000)
					add r3.x, -r0.w, l(1.000000)
					mad r3.y, |r1.w|, r3.x, r0.w
					mad r3.x, r2.w, r3.x, r0.w
					mul r1.w, |r1.w|, r3.x
					mad r1.w, r2.w, r3.y, r1.w
					add r1.w, r1.w, l(0.000010)
					div r1.w, l(0.500000), r1.w
					mul r0.w, r0.w, r0.w
					mad r3.x, r2.x, r0.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r0.w, r0.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r0.w, r0.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r1.xyzx, r1.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
					mul r1.xyz, r1.xyzx, r3.xyzx
					mad o0.xyz, r0.xyzx, r2.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					sample r3.xyzw, v1.xyxx, t2.xyzw, s2
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[8].xxxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r3.w, r5.xyzx, r5.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r1.w, r3.w
					mad r1.w, cb3[25].w, r3.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r3.w, cb5[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.z
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v8.xxxy, v8.wwww
					sample r5.xyzw, r4.zwzz, t3.xyzw, s4
					add r3.w, r3.w, -r5.x
					mad r1.w, r1.w, r3.w, r5.x
					sample r4.xyzw, r4.xyxx, t4.xyzw, s5
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					mad r1.w, -r2.w, cb0[9].x, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t0.xyzw, s1
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, v2.xyzx, v2.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v2.xyzx
					mul r4.xy, v6.yyyy, cb0[12].xyxx
					mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
					mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[14].xyxx
					add r5.xyz, -v6.xyzx, cb1[4].xyzx
					mov r6.x, cb4[9].z
					mov r6.y, cb4[10].z
					mov r6.z, cb4[11].z
					dp3 r1.w, r5.xyzx, r6.xyzx
					add r5.xyz, v6.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t3.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v8.xxxy, v8.wwww
					sample r5.xyzw, r4.zwzz, t1.xyzw, s2
					add r2.w, r2.w, -r5.x
					mad r1.w, r1.w, r2.w, r5.x
					sample r4.xyzw, r4.xyxx, t2.xyzw, s3
					mul r1.w, r1.w, r4.w
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r1.w, -cb0[8].w, l(1.000000)
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
					dp3 r0.w, r6.xyzx, r6.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r6.xyz, r0.wwww, r6.xyzx
					dp3 r0.w, r2.xyzx, -r3.xyzx
					dp3_sat r2.w, r2.xyzx, r5.xyzx
					dp3_sat r2.x, r2.xyzx, r6.xyzx
					dp3_sat r2.y, r5.xyzx, r6.xyzx
					mul r2.z, r2.y, r2.y
					dp2 r2.z, r2.zzzz, r1.wwww
					add r2.z, r2.z, l(-0.500000)
					add r3.x, -r2.w, l(1.000000)
					mul r3.y, r3.x, r3.x
					mul r3.y, r3.y, r3.y
					mul r3.x, r3.x, r3.y
					mad r3.x, r2.z, r3.x, l(1.000000)
					add r3.y, -|r0.w|, l(1.000000)
					mul r3.z, r3.y, r3.y
					mul r3.z, r3.z, r3.z
					mul r3.y, r3.y, r3.z
					mad r2.z, r2.z, r3.y, l(1.000000)
					mul r2.z, r2.z, r3.x
					mul r2.z, r2.w, r2.z
					mul r1.w, r1.w, r1.w
					max r1.w, r1.w, l(0.002000)
					add r3.x, -r1.w, l(1.000000)
					mad r3.y, |r0.w|, r3.x, r1.w
					mad r3.x, r2.w, r3.x, r1.w
					mul r0.w, |r0.w|, r3.x
					mad r0.w, r2.w, r3.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r1.w, r1.w, r1.w
					mad r3.x, r2.x, r1.w, -r2.x
					mad r2.x, r3.x, r2.x, l(1.000000)
					mul r1.w, r1.w, l(0.318310)
					mad r2.x, r2.x, r2.x, l(0.000000)
					div r1.w, r1.w, r2.x
					mul r0.w, r0.w, r1.w
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.w, r0.w
					dp3 r1.w, r0.xyzx, r0.xyzx
					ne r1.w, r1.w, l(0.000000)
					and r1.w, r1.w, l(0x3f800000)
					mul r0.w, r0.w, r1.w
					mul r2.xzw, r2.zzzz, r4.xxyz
					mul r3.xyz, r4.xyzx, r0.wwww
					add r0.w, -r2.y, l(1.000000)
					mul r1.w, r0.w, r0.w
					mul r1.w, r1.w, r1.w
					mul r0.w, r0.w, r1.w
					add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[3], immediateIndexed
					dcl_constantbuffer CB2[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, -v2.xyzx, r0.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
					mov r2.x, v3.w
					mov r2.y, v4.w
					mov r2.z, v5.w
					dp3 r0.w, r1.xyzx, r2.xyzx
					dp3_sat r0.x, r0.xyzx, r2.xyzx
					mul r0.y, r0.w, r0.w
					mul r1.x, r0.y, r0.y
					add r1.y, -cb0[8].w, l(1.000000)
					sample r1.xyzw, r1.xyxx, t3.xyzw, s0
					mul r0.y, r1.x, l(16.000000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mul r1.xyz, r1.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul r0.yzw, r0.yyyy, r2.xxyz
					mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
					mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
					add r1.xyz, v6.xyzx, -cb1[1].xyzx
					max r1.w, |r1.y|, |r1.x|
					max r1.w, |r1.z|, r1.w
					add r1.w, r1.w, -cb1[2].z
					max r1.w, r1.w, l(0.000010)
					mul r1.w, r1.w, cb1[2].w
					div r1.w, cb1[2].y, r1.w
					add r1.w, r1.w, -cb1[2].x
					add r1.w, -r1.w, l(1.000000)
					sample_c_lz r1.x, r1.xyzx, t4.xxxx, s1, r1.w
					add r1.y, -cb2[24].x, l(1.000000)
					mad r1.x, r1.x, r1.y, cb2[24].x
					mul r1.yzw, v6.yyyy, cb0[12].xxyz
					mad r1.yzw, cb0[11].xxyz, v6.xxxx, r1.yyzw
					mad r1.yzw, cb0[13].xxyz, v6.zzzz, r1.yyzw
					add r1.yzw, r1.yyzw, cb0[14].xxyz
					dp3 r1.y, r1.yzwy, r1.yzwy
					sample r2.xyzw, r1.yyyy, t2.xyzw, s4
					mul r1.x, r1.x, r2.x
					mul r1.xyz, r1.xxxx, cb0[2].xyzx
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul o0.xyz, r0.yzwy, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[3], immediateIndexed
					dcl_constantbuffer CB2[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r1.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mul r0.xyz, r0.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, -v2.xyzx, r2.xyzx
					add r0.w, r0.w, r0.w
					mad r3.xyz, r2.xyzx, -r0.wwww, -v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r0.w, r3.xyzx, r4.xyzx
					dp3_sat r1.w, r2.xyzx, r4.xyzx
					mul r0.w, r0.w, r0.w
					mul r2.x, r0.w, r0.w
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t2.xyzw, s0
					mul r0.w, r2.x, l(16.000000)
					mul r1.xyz, r1.xyzx, r0.wwww
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
					add r1.xyz, v6.xyzx, -cb1[1].xyzx
					max r0.w, |r1.y|, |r1.x|
					max r0.w, |r1.z|, r0.w
					add r0.w, r0.w, -cb1[2].z
					max r0.w, r0.w, l(0.000010)
					mul r0.w, r0.w, cb1[2].w
					div r0.w, cb1[2].y, r0.w
					add r0.w, r0.w, -cb1[2].x
					add r0.w, -r0.w, l(1.000000)
					sample_c_lz r0.w, r1.xyzx, t3.xxxx, s1, r0.w
					add r1.x, -cb2[24].x, l(1.000000)
					mad r0.w, r0.w, r1.x, cb2[24].x
					mul r1.xyz, v6.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, v6.xxxx, r1.xyzx
					mad r1.xyz, cb0[13].xyzx, v6.zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb0[14].xyzx
					dp3 r1.x, r1.xyzx, r1.xyzx
					sample r2.xyzw, r1.xxxx, t1.xyzw, s3
					mul r0.w, r0.w, r2.x
					mul r1.xyz, r0.wwww, cb0[2].xyzx
					mul r1.xyz, r1.wwww, r1.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[3], immediateIndexed
					dcl_constantbuffer CB2[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					add r0.xyz, v6.xyzx, -cb1[1].xyzx
					max r0.w, |r0.y|, |r0.x|
					max r0.w, |r0.z|, r0.w
					add r0.w, r0.w, -cb1[2].z
					max r0.w, r0.w, l(0.000010)
					mul r0.w, r0.w, cb1[2].w
					div r0.w, cb1[2].y, r0.w
					add r0.w, r0.w, -cb1[2].x
					add r0.w, -r0.w, l(1.000000)
					sample_c_lz r0.x, r0.xyzx, t4.xxxx, s1, r0.w
					add r0.y, -cb2[24].x, l(1.000000)
					mad r0.x, r0.x, r0.y, cb2[24].x
					mul r0.yzw, v6.yyyy, cb0[12].xxyz
					mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
					mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
					add r0.yzw, r0.yyzw, cb0[14].xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					sample r1.xyzw, r0.yyyy, t2.xyzw, s4
					mul r0.x, r0.x, r1.x
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.xyzx
					mov r2.x, v3.w
					mov r2.y, v4.w
					mov r2.z, v5.w
					dp3_sat r0.w, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, -v2.xyzx, r1.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
					dp3 r0.w, r1.xyzx, r2.xyzx
					mul r0.w, r0.w, r0.w
					mul r1.x, r0.w, r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mad r1.y, -r2.w, cb0[9].x, l(1.000000)
					sample r1.xyzw, r1.xyxx, t3.xyzw, s0
					mul r0.w, r1.x, l(16.000000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mad r2.yzw, cb0[4].xxyz, r1.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
					mul r1.xyz, r1.xyzx, cb0[4].xyzx
					mad r2.yzw, r2.xxxx, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
					mad r1.w, -r2.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.wwww, r2.yzwy
					mad r1.xyz, r1.xyzx, r1.wwww, r2.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[3], immediateIndexed
					dcl_constantbuffer CB2[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					sample r0.xyzw, v1.xyxx, t2.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r1.xyz, r0.yyyy, v4.xyzx
					mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
					dp2 r0.x, r0.xyxx, r0.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r0.x, r0.x
					mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
					dp3 r0.w, -v2.xyzx, r0.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
					mov r2.x, v3.w
					mov r2.y, v4.w
					mov r2.z, v5.w
					dp3 r0.w, r1.xyzx, r2.xyzx
					dp3_sat r0.x, r0.xyzx, r2.xyzx
					mul r0.y, r0.w, r0.w
					mul r1.x, r0.y, r0.y
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r1.y, -r2.w, cb0[9].x, l(1.000000)
					sample r1.xyzw, r1.xyxx, t4.xyzw, s0
					mul r0.y, r1.x, l(16.000000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mad r2.yzw, cb0[4].xxyz, r1.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
					mul r1.xyz, r1.xyzx, cb0[4].xyzx
					mad r2.yzw, r2.xxxx, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
					mad r0.z, -r2.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.yyyy, r2.yzwy
					mad r0.yzw, r1.xxyz, r0.zzzz, r2.xxyz
					add r1.xyz, v6.xyzx, -cb1[1].xyzx
					max r1.w, |r1.y|, |r1.x|
					max r1.w, |r1.z|, r1.w
					add r1.w, r1.w, -cb1[2].z
					max r1.w, r1.w, l(0.000010)
					mul r1.w, r1.w, cb1[2].w
					div r1.w, cb1[2].y, r1.w
					add r1.w, r1.w, -cb1[2].x
					add r1.w, -r1.w, l(1.000000)
					sample_c_lz r1.x, r1.xyzx, t5.xxxx, s1, r1.w
					add r1.y, -cb2[24].x, l(1.000000)
					mad r1.x, r1.x, r1.y, cb2[24].x
					mul r1.yzw, v6.yyyy, cb0[12].xxyz
					mad r1.yzw, cb0[11].xxyz, v6.xxxx, r1.yyzw
					mad r1.yzw, cb0[13].xxyz, v6.zzzz, r1.yyzw
					add r1.yzw, r1.yyzw, cb0[14].xxyz
					dp3 r1.y, r1.yzwy, r1.yzwy
					sample r2.xyzw, r1.yyyy, t3.xyzw, s5
					mul r1.x, r1.x, r2.x
					mul r1.xyz, r1.xxxx, cb0[2].xyzx
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul o0.xyz, r0.yzwy, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[3], immediateIndexed
					dcl_constantbuffer CB2[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r1.xyzw, v1.xyxx, t2.xyzw, s3
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xyz, r1.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, -v2.xyzx, r1.xyzx
					add r0.w, r0.w, r0.w
					mad r2.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
					mov r3.x, v3.w
					mov r3.y, v4.w
					mov r3.z, v5.w
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r1.x, r1.xyzx, r3.xyzx
					mul r0.w, r0.w, r0.w
					mul r2.x, r0.w, r0.w
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					mad r2.y, -r3.w, cb0[9].x, l(1.000000)
					sample r2.xyzw, r2.xyxx, t4.xyzw, s0
					mul r0.w, r2.x, l(16.000000)
					mad r1.yzw, r0.xxyz, cb0[4].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
					mul r0.xyz, r0.xyzx, cb0[4].xyzx
					mad r1.yzw, r3.xxxx, r1.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
					mad r2.x, -r3.x, l(0.779084), l(0.779084)
					mul r1.yzw, r0.wwww, r1.yyzw
					mad r0.xyz, r0.xyzx, r2.xxxx, r1.yzwy
					add r1.yzw, v6.xxyz, -cb1[1].xxyz
					max r0.w, |r1.z|, |r1.y|
					max r0.w, |r1.w|, r0.w
					add r0.w, r0.w, -cb1[2].z
					max r0.w, r0.w, l(0.000010)
					mul r0.w, r0.w, cb1[2].w
					div r0.w, cb1[2].y, r0.w
					add r0.w, r0.w, -cb1[2].x
					add r0.w, -r0.w, l(1.000000)
					sample_c_lz r0.w, r1.yzwy, t5.xxxx, s1, r0.w
					add r1.y, -cb2[24].x, l(1.000000)
					mad r0.w, r0.w, r1.y, cb2[24].x
					mul r1.yzw, v6.yyyy, cb0[12].xxyz
					mad r1.yzw, cb0[11].xxyz, v6.xxxx, r1.yyzw
					mad r1.yzw, cb0[13].xxyz, v6.zzzz, r1.yyzw
					add r1.yzw, r1.yyzw, cb0[14].xxyz
					dp3 r1.y, r1.yzwy, r1.yzwy
					sample r2.xyzw, r1.yyyy, t3.xyzw, s5
					mul r0.w, r0.w, r2.x
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					mul r1.xyz, r1.xxxx, r1.yzwy
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[3], immediateIndexed
					dcl_constantbuffer CB2[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					add r0.xyz, v6.xyzx, -cb1[1].xyzx
					max r0.w, |r0.y|, |r0.x|
					max r0.w, |r0.z|, r0.w
					add r0.w, r0.w, -cb1[2].z
					max r0.w, r0.w, l(0.000010)
					mul r0.w, r0.w, cb1[2].w
					div r0.w, cb1[2].y, r0.w
					add r0.w, r0.w, -cb1[2].x
					add r0.w, -r0.w, l(1.000000)
					sample_c_lz r0.x, r0.xyzx, t3.xxxx, s1, r0.w
					add r0.y, -cb2[24].x, l(1.000000)
					mad r0.x, r0.x, r0.y, cb2[24].x
					mul r0.yzw, v6.yyyy, cb0[12].xxyz
					mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
					mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
					add r0.yzw, r0.yyzw, cb0[14].xxyz
					dp3 r0.y, r0.yzwy, r0.yzwy
					sample r1.xyzw, r0.yyyy, t1.xyzw, s3
					mul r0.x, r0.x, r1.x
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.xyzx
					mov r2.x, v3.w
					mov r2.y, v4.w
					mov r2.z, v5.w
					dp3_sat r0.w, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, -v2.xyzx, r1.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
					dp3 r0.w, r1.xyzx, r2.xyzx
					mul r0.w, r0.w, r0.w
					mul r1.x, r0.w, r0.w
					add r1.y, -cb0[8].w, l(1.000000)
					sample r1.xyzw, r1.xyxx, t2.xyzw, s0
					mul r0.w, r1.x, l(16.000000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mul r1.xyz, r1.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[3], immediateIndexed
					dcl_constantbuffer CB2[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					add r0.xyz, v6.xyzx, -cb1[1].xyzx
					max r0.w, |r0.y|, |r0.x|
					max r0.w, |r0.z|, r0.w
					add r0.w, r0.w, -cb1[2].z
					max r0.w, r0.w, l(0.000010)
					mul r0.w, r0.w, cb1[2].w
					div r0.w, cb1[2].y, r0.w
					add r0.w, r0.w, -cb1[2].x
					add r0.w, -r0.w, l(1.000000)
					sample_c_lz r0.x, r0.xyzx, t5.xxxx, s1, r0.w
					add r0.y, -cb2[24].x, l(1.000000)
					mad r0.x, r0.x, r0.y, cb2[24].x
					mul r0.yzw, v6.yyyy, cb0[12].xxyz
					mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
					mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
					add r0.yzw, r0.yyzw, cb0[14].xxyz
					dp3 r1.x, r0.yzwy, r0.yzwy
					sample r2.xyzw, r0.yzwy, t3.xyzw, s4
					sample r1.xyzw, r1.xxxx, t2.xyzw, s5
					mul r0.y, r2.w, r1.x
					mul r0.x, r0.x, r0.y
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					sample r1.xyzw, v1.xyxx, t1.xyzw, s3
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xyz, r1.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
					mov r2.x, v3.w
					mov r2.y, v4.w
					mov r2.z, v5.w
					dp3_sat r0.w, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, -v2.xyzx, r1.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
					dp3 r0.w, r1.xyzx, r2.xyzx
					mul r0.w, r0.w, r0.w
					mul r1.x, r0.w, r0.w
					add r1.y, -cb0[8].w, l(1.000000)
					sample r1.xyzw, r1.xyxx, t4.xyzw, s0
					mul r0.w, r1.x, l(16.000000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mul r1.xyz, r1.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[3], immediateIndexed
					dcl_constantbuffer CB2[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 5
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r1.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mul r0.xyz, r0.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, v5.xyzx
					dp3 r0.w, -v2.xyzx, r2.xyzx
					add r0.w, r0.w, r0.w
					mad r3.xyz, r2.xyzx, -r0.wwww, -v2.xyzx
					mov r4.x, v3.w
					mov r4.y, v4.w
					mov r4.z, v5.w
					dp3 r0.w, r3.xyzx, r4.xyzx
					dp3_sat r1.w, r2.xyzx, r4.xyzx
					mul r0.w, r0.w, r0.w
					mul r2.x, r0.w, r0.w
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t3.xyzw, s0
					mul r0.w, r2.x, l(16.000000)
					mul r1.xyz, r1.xyzx, r0.wwww
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
					add r1.xyz, v6.xyzx, -cb1[1].xyzx
					max r0.w, |r1.y|, |r1.x|
					max r0.w, |r1.z|, r0.w
					add r0.w, r0.w, -cb1[2].z
					max r0.w, r0.w, l(0.000010)
					mul r0.w, r0.w, cb1[2].w
					div r0.w, cb1[2].y, r0.w
					add r0.w, r0.w, -cb1[2].x
					add r0.w, -r0.w, l(1.000000)
					sample_c_lz r0.w, r1.xyzx, t4.xxxx, s1, r0.w
					add r1.x, -cb2[24].x, l(1.000000)
					mad r0.w, r0.w, r1.x, cb2[24].x
					mul r1.xyz, v6.yyyy, cb0[12].xyzx
					mad r1.xyz, cb0[11].xyzx, v6.xxxx, r1.xyzx
					mad r1.xyz, cb0[13].xyzx, v6.zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb0[14].xyzx
					dp3 r2.x, r1.xyzx, r1.xyzx
					sample r3.xyzw, r1.xyzx, t2.xyzw, s3
					sample r2.xyzw, r2.xxxx, t1.xyzw, s4
					mul r1.x, r3.w, r2.x
					mul r0.w, r0.w, r1.x
					mul r1.xyz, r0.wwww, cb0[2].xyzx
					mul r1.xyz, r1.wwww, r1.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[3], immediateIndexed
					dcl_constantbuffer CB2[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texturecube (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					add r0.xyz, v6.xyzx, -cb1[1].xyzx
					max r0.w, |r0.y|, |r0.x|
					max r0.w, |r0.z|, r0.w
					add r0.w, r0.w, -cb1[2].z
					max r0.w, r0.w, l(0.000010)
					mul r0.w, r0.w, cb1[2].w
					div r0.w, cb1[2].y, r0.w
					add r0.w, r0.w, -cb1[2].x
					add r0.w, -r0.w, l(1.000000)
					sample_c_lz r0.x, r0.xyzx, t5.xxxx, s1, r0.w
					add r0.y, -cb2[24].x, l(1.000000)
					mad r0.x, r0.x, r0.y, cb2[24].x
					mul r0.yzw, v6.yyyy, cb0[12].xxyz
					mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
					mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
					add r0.yzw, r0.yyzw, cb0[14].xxyz
					dp3 r1.x, r0.yzwy, r0.yzwy
					sample r2.xyzw, r0.yzwy, t3.xyzw, s4
					sample r1.xyzw, r1.xxxx, t2.xyzw, s5
					mul r0.y, r2.w, r1.x
					mul r0.x, r0.x, r0.y
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.xyzx
					mov r2.x, v3.w
					mov r2.y, v4.w
					mov r2.z, v5.w
					dp3_sat r0.w, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, -v2.xyzx, r1.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
					dp3 r0.w, r1.xyzx, r2.xyzx
					mul r0.w, r0.w, r0.w
					mul r1.x, r0.w, r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mad r1.y, -r2.w, cb0[9].x, l(1.000000)
					sample r1.xyzw, r1.xyxx, t4.xyzw, s0
					mul r0.w, r1.x, l(16.000000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mad r2.yzw, cb0[4].xxyz, r1.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
					mul r1.xyz, r1.xyzx, cb0[4].xyzx
					mad r2.yzw, r2.xxxx, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
					mad r1.w, -r2.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.wwww, r2.yzwy
					mad r1.xyz, r1.xyzx, r1.wwww, r2.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[3], immediateIndexed
					dcl_constantbuffer CB2[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					add r0.xyz, v6.xyzx, -cb1[1].xyzx
					max r0.w, |r0.y|, |r0.x|
					max r0.w, |r0.z|, r0.w
					add r0.w, r0.w, -cb1[2].z
					max r0.w, r0.w, l(0.000010)
					mul r0.w, r0.w, cb1[2].w
					div r0.w, cb1[2].y, r0.w
					add r0.w, r0.w, -cb1[2].x
					add r0.w, -r0.w, l(1.000000)
					sample_c_lz r0.x, r0.xyzx, t6.xxxx, s1, r0.w
					add r0.y, -cb2[24].x, l(1.000000)
					mad r0.x, r0.x, r0.y, cb2[24].x
					mul r0.yzw, v6.yyyy, cb0[12].xxyz
					mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
					mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
					add r0.yzw, r0.yyzw, cb0[14].xxyz
					dp3 r1.x, r0.yzwy, r0.yzwy
					sample r2.xyzw, r0.yzwy, t4.xyzw, s5
					sample r1.xyzw, r1.xxxx, t3.xyzw, s6
					mul r0.y, r2.w, r1.x
					mul r0.x, r0.x, r0.y
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					sample r1.xyzw, v1.xyxx, t2.xyzw, s3
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xyz, r1.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
					mov r2.x, v3.w
					mov r2.y, v4.w
					mov r2.z, v5.w
					dp3_sat r0.w, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, -v2.xyzx, r1.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
					dp3 r0.w, r1.xyzx, r2.xyzx
					mul r0.w, r0.w, r0.w
					mul r1.x, r0.w, r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r1.y, -r2.w, cb0[9].x, l(1.000000)
					sample r1.xyzw, r1.xyxx, t5.xyzw, s0
					mul r0.w, r1.x, l(16.000000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mad r2.yzw, cb0[4].xxyz, r1.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
					mul r1.xyz, r1.xyzx, cb0[4].xyzx
					mad r2.yzw, r2.xxxx, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
					mad r1.w, -r2.x, l(0.779084), l(0.779084)
					mul r2.xyz, r0.wwww, r2.yzwy
					mad r1.xyz, r1.xyzx, r1.wwww, r2.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[3], immediateIndexed
					dcl_constantbuffer CB2[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r1.xyzw, v1.xyxx, t2.xyzw, s3
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xyz, r1.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
					dp2 r0.w, r1.xyxx, r1.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, -v2.xyzx, r1.xyzx
					add r0.w, r0.w, r0.w
					mad r2.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
					mov r3.x, v3.w
					mov r3.y, v4.w
					mov r3.z, v5.w
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r1.x, r1.xyzx, r3.xyzx
					mul r0.w, r0.w, r0.w
					mul r2.x, r0.w, r0.w
					sample r3.xyzw, v1.xyxx, t1.xyzw, s4
					mad r2.y, -r3.w, cb0[9].x, l(1.000000)
					sample r2.xyzw, r2.xyxx, t5.xyzw, s0
					mul r0.w, r2.x, l(16.000000)
					mad r1.yzw, r0.xxyz, cb0[4].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
					mul r0.xyz, r0.xyzx, cb0[4].xyzx
					mad r1.yzw, r3.xxxx, r1.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
					mad r2.x, -r3.x, l(0.779084), l(0.779084)
					mul r1.yzw, r0.wwww, r1.yyzw
					mad r0.xyz, r0.xyzx, r2.xxxx, r1.yzwy
					add r1.yzw, v6.xxyz, -cb1[1].xxyz
					max r0.w, |r1.z|, |r1.y|
					max r0.w, |r1.w|, r0.w
					add r0.w, r0.w, -cb1[2].z
					max r0.w, r0.w, l(0.000010)
					mul r0.w, r0.w, cb1[2].w
					div r0.w, cb1[2].y, r0.w
					add r0.w, r0.w, -cb1[2].x
					add r0.w, -r0.w, l(1.000000)
					sample_c_lz r0.w, r1.yzwy, t6.xxxx, s1, r0.w
					add r1.y, -cb2[24].x, l(1.000000)
					mad r0.w, r0.w, r1.y, cb2[24].x
					mul r1.yzw, v6.yyyy, cb0[12].xxyz
					mad r1.yzw, cb0[11].xxyz, v6.xxxx, r1.yyzw
					mad r1.yzw, cb0[13].xxyz, v6.zzzz, r1.yyzw
					add r1.yzw, r1.yyzw, cb0[14].xxyz
					dp3 r2.x, r1.yzwy, r1.yzwy
					sample r3.xyzw, r1.yzwy, t4.xyzw, s5
					sample r2.xyzw, r2.xxxx, t3.xyzw, s6
					mul r1.y, r3.w, r2.x
					mul r0.w, r0.w, r1.y
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					mul r1.xyz, r1.xxxx, r1.yzwy
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[3], immediateIndexed
					dcl_constantbuffer CB2[25], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texturecube (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					add r0.xyz, v6.xyzx, -cb1[1].xyzx
					max r0.w, |r0.y|, |r0.x|
					max r0.w, |r0.z|, r0.w
					add r0.w, r0.w, -cb1[2].z
					max r0.w, r0.w, l(0.000010)
					mul r0.w, r0.w, cb1[2].w
					div r0.w, cb1[2].y, r0.w
					add r0.w, r0.w, -cb1[2].x
					add r0.w, -r0.w, l(1.000000)
					sample_c_lz r0.x, r0.xyzx, t4.xxxx, s1, r0.w
					add r0.y, -cb2[24].x, l(1.000000)
					mad r0.x, r0.x, r0.y, cb2[24].x
					mul r0.yzw, v6.yyyy, cb0[12].xxyz
					mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
					mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
					add r0.yzw, r0.yyzw, cb0[14].xxyz
					dp3 r1.x, r0.yzwy, r0.yzwy
					sample r2.xyzw, r0.yzwy, t2.xyzw, s3
					sample r1.xyzw, r1.xxxx, t1.xyzw, s4
					mul r0.y, r2.w, r1.x
					mul r0.x, r0.x, r0.y
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, v5.xyzx
					mov r2.x, v3.w
					mov r2.y, v4.w
					mov r2.z, v5.w
					dp3_sat r0.w, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, -v2.xyzx, r1.xyzx
					add r0.w, r0.w, r0.w
					mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
					dp3 r0.w, r1.xyzx, r2.xyzx
					mul r0.w, r0.w, r0.w
					mul r1.x, r0.w, r0.w
					add r1.y, -cb0[8].w, l(1.000000)
					sample r1.xyzw, r1.xyxx, t3.xyzw, s0
					mul r0.w, r1.x, l(16.000000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mul r1.xyz, r1.xyzx, cb0[4].xyzx
					mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mul r2.xyz, r0.wwww, r2.xyzx
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					sample r2.xyzw, v1.xyxx, t1.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r2.yzw, r2.yyyy, v4.xxyz
					mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					mul r3.xyz, v6.yyyy, cb0[12].xyzx
					mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
					mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
					add r3.xyz, r3.xyzx, cb0[14].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					dp3 r2.w, r3.xyzx, r3.xyzx
					sample r3.xyzw, r2.wwww, t2.xyzw, s4
					mul r1.w, r1.w, r3.x
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t3.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture3d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
					dp3 r1.w, v5.xyzx, v5.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, v5.xyzx
					mul r3.xyz, v6.yyyy, cb0[12].xyzx
					mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
					mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
					add r3.xyz, r3.xyzx, cb0[14].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					dp3 r2.w, r3.xyzx, r3.xyzx
					sample r3.xyzw, r2.wwww, t1.xyzw, s3
					mul r1.w, r1.w, r3.x
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					add r2.y, -cb0[8].w, l(1.000000)
					sample r2.xyzw, r2.xyxx, t2.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float      w
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.w
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s3
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					dp3 r0.y, v5.xyzx, v5.xyzx
					rsq r0.y, r0.y
					mul r3.xyz, r0.yyyy, v5.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.y, cb2[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.yyyy, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.y, r5.y, l(0.250000), l(0.750000)
					  mad r0.z, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.z, r0.y
					  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r5.xyzw, cb1[46].xyzw
					dp3 r0.z, r4.xyzx, r4.xyzx
					sample r4.xyzw, r0.zzzz, t2.xyzw, s4
					mul r0.y, r0.y, r4.x
					mul r4.xyz, r0.yyyy, cb0[2].xyzx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.y, r0.y, r0.y
					mad r5.xyz, r3.xyzx, -r0.yyyy, -v2.xyzx
					mov r6.x, v3.w
					mov r6.y, v4.w
					mov r6.z, v5.w
					dp3_sat r0.y, r3.xyzx, r6.xyzx
					dp3 r0.z, r5.xyzx, r6.xyzx
					mul r0.z, r0.z, r0.z
					mul r3.x, r0.z, r0.z
					mad r3.y, -r0.w, cb0[9].x, l(1.000000)
					sample r3.xyzw, r3.xyxx, t3.xyzw, s1
					mul r0.z, r3.x, l(16.000000)
					mul r1.xyz, r1.xyzx, r0.zzzz
					mad r0.xzw, r2.xxyz, r0.xxxx, r1.xxyz
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul o0.xyz, r0.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v1.xyxx, t1.xyzw, s4
					sample r1.xyzw, v1.xyxx, t0.xyzw, s2
					mul r2.xyz, r1.xyzx, cb0[4].xyzx
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r1.xyz, r0.xxxx, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.x, -r0.x, l(0.779084), l(0.779084)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r0.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
					dp2 r1.w, r0.yzyy, r0.yzyy
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r0.zzzz, v4.xyzx
					mad r3.xyz, v3.xyzx, r0.yyyy, r3.xyzx
					mad r3.xyz, v5.xyzx, r1.wwww, r3.xyzx
					mul r4.xyz, v6.yyyy, cb0[12].xyzx
					mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[14].xyzx
					eq r0.y, cb2[0].x, l(1.000000)
					if_nz r0.y
					  eq r0.y, cb2[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb2[2].xyzx
					  mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb2[4].xyzx
					  movc r5.xyz, r0.yyyy, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb2[6].xyzx
					  mul r5.yzw, r5.xxyz, cb2[5].xxyz
					  mad r0.y, r5.y, l(0.250000), l(0.750000)
					  mad r0.z, cb2[0].z, l(0.500000), l(0.750000)
					  max r5.x, r0.z, r0.y
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.y, r5.xyzw, cb1[46].xyzw
					dp3 r0.z, r4.xyzx, r4.xyzx
					sample r4.xyzw, r0.zzzz, t3.xyzw, s5
					mul r0.y, r0.y, r4.x
					mul r4.xyz, r0.yyyy, cb0[2].xyzx
					dp3 r0.y, -v2.xyzx, r3.xyzx
					add r0.y, r0.y, r0.y
					mad r5.xyz, r3.xyzx, -r0.yyyy, -v2.xyzx
					mov r6.x, v3.w
					mov r6.y, v4.w
					mov r6.z, v5.w
					dp3_sat r0.y, r3.xyzx, r6.xyzx
					dp3 r0.z, r5.xyzx, r6.xyzx
					mul r0.z, r0.z, r0.z
					mul r3.x, r0.z, r0.z
					mad r3.y, -r0.w, cb0[9].x, l(1.000000)
					sample r3.xyzw, r3.xyxx, t4.xyzw, s1
					mul r0.z, r3.x, l(16.000000)
					mul r1.xyz, r1.xyzx, r0.zzzz
					mad r0.xzw, r2.xxyz, r0.xxxx, r1.xxyz
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul o0.xyz, r0.xzwx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_NORMALMAP" "_ALPHATEST_ON" "_METALLICGLOSSMAP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyz         7     NONE   float       
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[15], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r1.xyz, r0.xyzx, cb0[4].xyzx
					mad r0.w, r0.w, cb0[4].w, -cb0[5].x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					sample r2.xyzw, v1.xyxx, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r0.xyz, r2.xxxx, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -r2.x, l(0.779084), l(0.779084)
					sample r3.xyzw, v1.xyxx, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.w, r1.w
					mul r3.xyz, r2.yyyy, v4.xyzx
					mad r2.xyz, v3.xyzx, r2.xxxx, r3.xyzx
					mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
					mul r3.xyz, v6.yyyy, cb0[12].xyzx
					mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
					mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
					add r3.xyz, r3.xyzx, cb0[14].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r3.w
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					dp3 r3.x, r3.xyzx, r3.xyzx
					sample r3.xyzw, r3.xxxx, t3.xyzw, s5
					mul r1.w, r1.w, r3.x
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r1.w, -v2.xyzx, r2.xyzx
					add r1.w, r1.w, r1.w
					mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
					mov r5.x, v3.w
					mov r5.y, v4.w
					mov r5.z, v5.w
					dp3_sat r1.w, r2.xyzx, r5.xyzx
					dp3 r2.x, r4.xyzx, r5.xyzx
					mul r2.x, r2.x, r2.x
					mul r2.x, r2.x, r2.x
					mad r2.y, -r2.w, cb0[9].x, l(1.000000)
					sample r2.xyzw, r2.xyxx, t4.xyzw, s1
					mul r2.x, r2.x, l(16.000000)
					mul r0.xyz, r0.xyzx, r2.xxxx
					mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mul r1.xyz, r1.wwww, r3.xyzx
					mul o0.xyz, r0.xyzx, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "ShadowCaster"
			LOD 150
			Tags { "LIGHTMODE" = "SHADOWCASTER" "PerformanceChecks" = "False" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			GpuProgramID 471165
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_output_siv o0.xyzw, position
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					div r1.x, cb1[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r0.x, r0.z
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[6], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb3[1].xyzw
					mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb2[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb2[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb2[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					mad o1.xy, v2.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[1], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_output_siv o0.xyzw, position
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb2[4].xyzx
					dp3 r0.y, v1.xyzx, cb2[5].xyzx
					dp3 r0.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb1[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb1[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "_ALPHATEST_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[6], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 3
					dp3 r0.x, v1.xyzx, cb3[4].xyzx
					dp3 r0.y, v1.xyzx, cb3[5].xyzx
					dp3 r0.z, v1.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb3[1].xyzw
					mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb2[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb2[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					div r1.x, cb2[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb2[5].y, r0.x, r0.z
					mad o1.xy, v2.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.x, r0.w, cb0[2].w, -cb0[3].x
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_output o0.xyzw
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "_ALPHATEST_ON" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.x, r0.w, cb0[2].w, -cb0[3].x
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "VertexLit"
	CustomEditor "StandardShaderGUI"
}