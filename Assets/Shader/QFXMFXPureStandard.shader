Shader "QFX/MFX/Pure/Standard" {
	Properties {
		[HDR] _EmissionColor ("Emission Color", Vector) = (0,0,0,0)
		_EmissionMap ("Emission Texture", 2D) = "white" {}
		[HDR] _EmissionColor2 ("Emission Color 2", Vector) = (1,1,1,1)
		_EmissionMap2 ("Emission Texture 2", 2D) = "white" {}
		_EmissionMap2_Scroll ("Emission Texture 2 Scroll", Vector) = (0,0,0,0)
		_EmissionSize2 ("Emission Size 2", Range(0, 1)) = 0.32633
		[Toggle] _EmissionSmooth2 ("EmissionSmooth2?", Float) = 1
		[HDR] _EdgeColor ("Edge Color", Vector) = (1,1,1,1)
		_EdgeRampMap1 ("Edge Ramp Map", 2D) = "white" {}
		_EdgeRampMap1_Scroll ("Edge Ramp Map Scroll", Vector) = (0,0,0,0)
		_EdgeSize ("Edge Size", Range(0, 2)) = 0.5
		_DissolveMap1 ("Dissolve Map", 2D) = "white" {}
		_DissolveMap1_Scroll ("Dissolve Map Scroll", Vector) = (0,0,0,0)
		_DissolveSize ("Dissolve Size", Range(0, 5)) = 2
		[HDR] _DissolveEdgeColor ("Dissolve Edge Color", Vector) = (1,1,1,1)
		_DissolveEdgeSize ("Dissolve Edge Size", Range(0, 2)) = 0
		_MaskOffset ("Mask Offset", Float) = 1.04
		[Toggle] _Invert ("Invert", Float) = 0
		[KeywordEnum(None,AxisLocal,AxisGlobal,Global)] _MaskType ("Mask Type", Float) = 2
		[KeywordEnum(X,Y,Z)] _CutoffAxis ("Cutoff Axis", Float) = 1
		_WorldPositionOffset ("World Position Offset", Vector) = (0,0,0,0)
		_MaskWorldPosition ("Mask World Position", Vector) = (0,0,0,0)
		_BumpMap ("Normal Map", 2D) = "bump" {}
		_BumpScale ("Bump Scale", Float) = 1
		[HDR] _Color2 ("Albedo Color 2", Vector) = (0,0,0,1)
		_MainTex2 ("Albedo 2", 2D) = "white" {}
		_BumpMap2 ("Normal Map 2", 2D) = "bump" {}
		[HDR] _Color ("Albedo Color", Vector) = (1,1,1,1)
		[Toggle(_METALLICGLOSSMAP_ON)] _METALLICGLOSSMAP ("METALLICGLOSSMAP", Float) = 0
		[KeywordEnum(MetallicAlpha,AlbedoAlpha)] _SmoothnessTextureChannel ("Smoothness Texture Channel", Float) = 0
		_MainTex ("Albedo", 2D) = "white" {}
		_Cutoff ("Mask Clip Value", Float) = 0.1
		_GlossMapScale ("Smoothness Scale", Range(0, 1)) = 0
		_Glossiness ("Smoothness", Range(0, 1)) = 0
		_Metallic ("Metallic", Range(0, 1)) = 0
		_MetallicGlossMap ("Metallic Texture", 2D) = "white" {}
		_OcclusionMap ("Occlusion", 2D) = "white" {}
		_OcclusionStrength ("Occlusion", Range(0, 1)) = 0
		[HideInInspector] _texcoord ("", 2D) = "white" {}
		[HideInInspector] _texcoord2 ("", 2D) = "white" {}
		[HideInInspector] __dirty ("", Float) = 1
	}
	SubShader {
		Tags { "IGNOREPROJECTOR" = "true" "IsEmissive" = "true" "QUEUE" = "Geometry+0" "RenderType" = "TransparentCutout" }
		Pass {
			Name "FORWARD"
			Tags { "IGNOREPROJECTOR" = "true" "IsEmissive" = "true" "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Geometry+0" "RenderType" = "TransparentCutout" "SHADOWSUPPORT" = "true" }
			GpuProgramID 47831
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r0.zzzz, r0.xwxx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r0.zzzz, r0.xwxx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mov o2.x, r2.z
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyzw, r0.xxxx, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb3[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.z, r3.w
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o5.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mov o2.x, r2.z
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyzw, r0.xxxx, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb3[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.z, r3.y
					mov o4.z, r3.w
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o5.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.x, r1.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyzw, r1.wwww, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.w, r0.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.w, r0.y
					mov o3.z, r2.y
					mov o4.w, r0.z
					mov o4.z, r2.w
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.ywzx, r2.xyzw
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
					mad o5.xyz, r0.xyzx, r1.xyzx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o2.x, r1.z
					mul r0.w, v1.w, cb2[9].w
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyzw, r1.wwww, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r0.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.w, r0.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.w, r0.y
					mov o3.z, r2.y
					mov o4.w, r0.z
					mov o4.z, r2.w
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.ywzx, r2.xyzw
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
					mad o5.xyz, r0.xyzx, r1.xyzx, r2.xyzx
					mov o6.xyzw, l(0,0,0,0)
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r0.zzzz, r0.xwxx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r4.xyz, r0.xxxx, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r4.y
					mov o4.y, r4.z
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r0.zzzz, r0.xwxx
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.x, r2.z
					mul r0.w, v1.w, cb3[9].w
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyzw, r2.wwww, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.w, r0.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.w, r0.y
					mov o3.z, r3.y
					mov o4.w, r0.z
					mov o4.z, r3.w
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r3.xyzw, r3.ywzx, r3.xyzw
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r3.xyz, cb2[45].xyzx, r0.wwww, r4.xyzx
					mad o5.xyz, r0.xyzx, r2.xyzx, r3.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mul r2.xyz, v1.yyyy, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.x, r2.z
					mul r0.w, v1.w, cb3[9].w
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyzw, r2.wwww, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.w, r0.x
					mov o2.z, r3.x
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.y, r4.y
					mov o4.y, r4.z
					mov o3.w, r0.y
					mov o3.z, r3.y
					mov o4.w, r0.z
					mov o4.z, r3.w
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r3.xyzw, r3.ywzx, r3.xyzw
					dp4 r4.x, cb2[42].xyzw, r3.xyzw
					dp4 r4.y, cb2[43].xyzw, r3.xyzw
					dp4 r4.z, cb2[44].xyzw, r3.xyzw
					mad r3.xyz, cb2[45].xyzx, r0.wwww, r4.xyzx
					mad o5.xyz, r0.xyzx, r2.xyzx, r3.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float       
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_resource_texture3d (float,float,float,float) t11
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r3.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					mad r1.w, cb0[8].w, l(-2.000000), l(1.000000)
					mad r2.w, -r1.w, cb0[9].x, r1.w
					mad r4.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[9].yzyy, r4.xyxx
					add r4.xy, r4.xyxx, v1.xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s4
					mad r4.x, r1.w, cb0[9].x, -r4.x
					add r4.x, r2.w, -r4.x
					round_pi r4.y, r4.x
					add_sat r4.y, -r4.y, l(1.000000)
					sample r5.xyzw, r3.xyxx, t1.xyzw, s2
					mul r5.x, r5.w, r5.x
					mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r3.xyxx, cb0[4].xxxx
					dp2 r3.x, r5.xyxx, r5.xyxx
					min r3.x, r3.x, l(1.000000)
					add r3.x, -r3.x, l(1.000000)
					sqrt r5.z, r3.x
					sample r3.xyzw, r3.zwzz, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					add r3.xyz, -r5.xyzx, r3.xyzx
					mad r3.xyz, r4.yyyy, r3.xyzx, r5.xyzx
					mad r4.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r5.xyzw, r4.zwzz, t3.xyzw, s5
					mad r6.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mul r5.xyz, r5.xyzx, cb0[11].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s6
					mad r6.xyz, cb0[13].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r4.yyyy, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[15].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s7
					mad r3.w, r1.w, cb0[9].x, -r6.x
					add r3.w, r2.w, -r3.w
					add r3.w, r3.w, cb0[15].x
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.zw, v1.xxxy, cb0[24].xxxy, cb0[24].zzzw
					mad r6.zw, cb1[0].yyyy, cb0[23].xxxy, r6.zzzw
					sample r7.xyzw, r6.zwzz, t6.xyzw, s9
					add r5.w, -r7.x, l(0.500000)
					mul_sat r5.w, r5.w, l(3.000000)
					mul r7.xyz, r7.xxxx, cb0[22].xyzx
					mul r6.z, r5.w, r5.w
					mul r5.w, r5.w, r6.z
					mad r1.w, -r1.w, cb0[9].x, r2.w
					mad_sat r1.w, cb0[25].x, l(3.000000), r1.w
					mul r1.w, r1.w, r5.w
					mad r8.xyz, cb0[22].xyzx, r1.wwww, -r7.xyzx
					mad r7.xyz, cb0[21].xxxx, r8.xyzx, r7.xyzx
					sample r6.xyzw, r6.xyxx, t7.xyzw, s8
					mul r8.xyz, r6.xyzx, cb0[19].xyzx
					mad r6.xyz, -cb0[19].xyzx, r6.xyzx, r7.xyzx
					mad r6.xyz, r4.yyyy, r6.xyzx, r8.xyzx
					add r7.xy, -cb0[27].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.w, -|r4.x|, l(1.000000)
					add r1.w, -r7.x, r1.w
					mul_sat r1.w, r1.w, l(10.000000)
					mad r2.w, r1.w, l(-2.000000), l(3.000000)
					mul r1.w, r1.w, r1.w
					mad_sat r1.w, r2.w, r1.w, -r4.y
					ge r2.w, cb0[17].x, r3.w
					mad r6.xyz, cb0[26].xyzx, r1.wwww, r6.xyzx
					movc r6.xyz, r2.wwww, cb0[18].xyzx, r6.xyzx
					sample r4.xyzw, r4.zwzz, t8.xyzw, s10
					add r1.w, r4.x, l(-1.000000)
					mad r1.w, cb0[28].x, r1.w, l(1.000000)
					add r2.w, r3.w, -cb0[28].y
					lt r2.w, r2.w, l(0.000000)
					discard_nz r2.w
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t11.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r3.x, r4.xyzx, r4.xyzx
					rsq r3.x, r3.x
					mul r3.xyz, r3.xxxx, r4.xyzx
					dp3 r3.w, -r2.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, r3.xyzx, -r3.wwww, -r2.xyzx
					mul r7.xzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb3[2].w
					if_nz r2.w
					  dp3 r2.w, r4.xyzx, r4.xyzx
					  rsq r2.w, r2.w
					  mul r8.xyz, r2.wwww, r4.xyzx
					  add r9.xyz, -r0.xyzx, cb3[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -r0.xyzx, cb3[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r2.w, r9.y, r9.x
					  min r2.w, r9.z, r2.w
					  add r9.xyz, r0.xyzx, -cb3[2].xyzx
					  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
					else 
					  mov r8.xyz, r4.xyzx
					endif 
					mad r2.w, -r7.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r7.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t9.xyzw, s0, r2.w
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb3[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb3[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.w, cb3[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb3[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r10.xyz, r4.wwww, r4.xyzx
					    add r11.xyz, -r0.xyzx, cb3[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb3[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r0.xyz, r0.xyzx, -cb3[6].xyzx
					    mad r4.xyz, r10.xyzx, r4.wwww, r0.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t10.xyzw, s0, r2.w
					  add r0.x, r4.w, l(-1.000000)
					  mad r0.x, cb3[7].w, r0.x, l(1.000000)
					  mul r0.x, r0.x, cb3[7].x
					  mul r0.xyz, r4.xyzx, r0.xxxx
					  mad r4.xyz, r3.wwww, r8.xyzx, -r0.xyzx
					  mad r9.xyz, cb3[1].wwww, r4.xyzx, r0.xyzx
					endif 
					mul r0.xyz, r1.wwww, r9.xyzx
					add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r4.xyz, cb0[27].yyyy, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r3.xyzx, r2.xyzx
					dp3_sat r2.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r2.y, r3.xyzx, r1.xyzx
					dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
					mul r1.y, r1.x, r1.x
					dp2 r1.y, r1.yyyy, r7.yyyy
					add r1.y, r1.y, l(-0.500000)
					add r1.z, -r2.x, l(1.000000)
					mul r2.z, r1.z, r1.z
					mul r2.z, r2.z, r2.z
					mul r1.z, r1.z, r2.z
					mad r1.z, r1.y, r1.z, l(1.000000)
					add r2.z, -|r0.w|, l(1.000000)
					mul r2.w, r2.z, r2.z
					mul r2.w, r2.w, r2.w
					mul r2.z, r2.z, r2.w
					mad r1.y, r1.y, r2.z, l(1.000000)
					mul r1.y, r1.y, r1.z
					mul r1.y, r2.x, r1.y
					mul r1.z, r7.y, r7.y
					max r1.z, r1.z, l(0.002000)
					add r2.w, -r1.z, l(1.000000)
					mad r3.x, |r0.w|, r2.w, r1.z
					mad r2.w, r2.x, r2.w, r1.z
					mul r0.w, |r0.w|, r2.w
					mad r0.w, r2.x, r3.x, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r2.w, r1.z, r1.z
					mad r3.x, r2.y, r2.w, -r2.y
					mad r2.y, r3.x, r2.y, l(1.000000)
					mul r2.w, r2.w, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.w, r2.y
					mul r0.w, r0.w, r2.y
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.x, r0.w
					mul r1.z, r1.z, l(0.280000)
					mad r1.z, -r1.z, r7.y, l(1.000000)
					dp3 r2.x, r4.xyzx, r4.xyzx
					ne r2.x, r2.x, l(0.000000)
					and r2.x, r2.x, l(0x3f800000)
					mul r0.w, r0.w, r2.x
					add r1.w, -r1.w, l(1.000000)
					add_sat r1.w, r1.w, cb0[27].z
					mul r2.xyw, r1.yyyy, r7.xzxw
					mul r3.xyz, r7.xzwx, r0.wwww
					add r0.w, -r1.x, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r0.xyzw, r0.xyzw, r1.zzzx
					add r7.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r7.xyz, r7.xyzx, r0.wwww, r4.xyzx
					mul r3.xyz, r3.xyzx, r7.xyzx
					mad r2.xyw, r5.xyxz, r2.xyxw, r3.xyxz
					add r1.xyz, -r4.xyzx, r1.wwww
					mad r1.xyz, r2.zzzz, r1.xyzx, r4.xyzx
					mad r0.xyz, r0.xyzx, r1.xyzx, r2.xywx
					add o0.xyz, r6.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_resource_texture3d (float,float,float,float) t11
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 15
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r3.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					add r1.w, v3.w, -cb0[7].y
					mad r2.w, cb0[8].w, l(-2.000000), l(1.000000)
					mul r4.x, r2.w, cb0[9].x
					mad r1.w, r1.w, r2.w, -r4.x
					mad r4.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[9].yzyy, r4.xyxx
					add r4.xy, r4.xyxx, v1.xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s4
					mad r4.x, r2.w, cb0[9].x, -r4.x
					add r4.x, r1.w, -r4.x
					round_pi r4.y, r4.x
					add_sat r4.y, -r4.y, l(1.000000)
					sample r5.xyzw, r3.xyxx, t1.xyzw, s2
					mul r5.x, r5.w, r5.x
					mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r3.xyxx, cb0[4].xxxx
					dp2 r3.x, r5.xyxx, r5.xyxx
					min r3.x, r3.x, l(1.000000)
					add r3.x, -r3.x, l(1.000000)
					sqrt r5.z, r3.x
					sample r3.xyzw, r3.zwzz, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					add r3.xyz, -r5.xyzx, r3.xyzx
					mad r3.xyz, r4.yyyy, r3.xyzx, r5.xyzx
					mad r4.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r5.xyzw, r4.zwzz, t3.xyzw, s5
					mad r6.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mul r5.xyz, r5.xyzx, cb0[11].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s6
					mad r6.xyz, cb0[13].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r4.yyyy, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[15].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s7
					mad r3.w, r2.w, cb0[9].x, -r6.x
					add r3.w, r1.w, -r3.w
					add r3.w, r3.w, cb0[15].x
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.zw, v1.xxxy, cb0[24].xxxy, cb0[24].zzzw
					mad r6.zw, cb1[0].yyyy, cb0[23].xxxy, r6.zzzw
					sample r7.xyzw, r6.zwzz, t6.xyzw, s9
					add r5.w, -r7.x, l(0.500000)
					mul_sat r5.w, r5.w, l(3.000000)
					mul r7.xyz, r7.xxxx, cb0[22].xyzx
					mul r6.z, r5.w, r5.w
					mul r5.w, r5.w, r6.z
					mad r1.w, -r2.w, cb0[9].x, r1.w
					mad_sat r1.w, cb0[25].x, l(3.000000), r1.w
					mul r1.w, r1.w, r5.w
					mad r8.xyz, cb0[22].xyzx, r1.wwww, -r7.xyzx
					mad r7.xyz, cb0[21].xxxx, r8.xyzx, r7.xyzx
					sample r6.xyzw, r6.xyxx, t7.xyzw, s8
					mul r8.xyz, r6.xyzx, cb0[19].xyzx
					mad r6.xyz, -cb0[19].xyzx, r6.xyzx, r7.xyzx
					mad r6.xyz, r4.yyyy, r6.xyzx, r8.xyzx
					add r7.xy, -cb0[27].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.w, -|r4.x|, l(1.000000)
					add r1.w, -r7.x, r1.w
					mul_sat r1.w, r1.w, l(10.000000)
					mad r2.w, r1.w, l(-2.000000), l(3.000000)
					mul r1.w, r1.w, r1.w
					mad_sat r1.w, r2.w, r1.w, -r4.y
					ge r2.w, cb0[17].x, r3.w
					mad r6.xyz, cb0[26].xyzx, r1.wwww, r6.xyzx
					movc r6.xyz, r2.wwww, cb0[18].xyzx, r6.xyzx
					sample r4.xyzw, r4.zwzz, t8.xyzw, s10
					add r1.w, r4.x, l(-1.000000)
					mad r1.w, cb0[28].x, r1.w, l(1.000000)
					add r2.w, r3.w, -cb0[28].y
					lt r2.w, r2.w, l(0.000000)
					discard_nz r2.w
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t11.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r3.x, r4.xyzx, r4.xyzx
					rsq r3.x, r3.x
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.x, -r2.xyzx, r4.xyzx
					add r3.x, r3.x, r3.x
					mad r3.xyz, r4.xyzx, -r3.xxxx, -r2.xyzx
					mul r7.xzw, r3.wwww, cb0[2].xxyz
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r8.xyz, v3.wwww, cb4[2].xyzx
					  mad r8.xyz, cb4[1].xyzx, v2.wwww, r8.xyzx
					  mad r8.xyz, cb4[3].xyzx, v4.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb4[4].xyzx
					  movc r8.xyz, r2.wwww, r8.xyzx, r0.xyzx
					  add r8.xyz, r8.xyzx, -cb4[6].xyzx
					  mul r8.yzw, r8.xxyz, cb4[5].xxyz
					  mul r2.w, r8.y, l(0.250000)
					  mul r3.w, cb4[0].z, l(0.500000)
					  mad r5.w, -cb4[0].z, l(0.500000), l(0.250000)
					  max r2.w, r2.w, r3.w
					  min r8.x, r5.w, r2.w
					  sample r9.xyzw, r8.xzwx, t11.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t11.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t11.xyzw, s1
					  mov r4.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r4.xyzw
					  dp4 r9.y, r10.xyzw, r4.xyzw
					  dp4 r9.z, r8.xyzw, r4.xyzw
					else 
					  mov r4.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r4.xyzw
					  dp4 r9.y, cb2[40].xyzw, r4.xyzw
					  dp4 r9.z, cb2[41].xyzw, r4.xyzw
					endif 
					add r8.xyz, r9.xyzx, v5.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb3[2].w
					if_nz r2.w
					  dp3 r2.w, r3.xyzx, r3.xyzx
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r3.xyzx
					  add r10.xyz, -r0.xyzx, cb3[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r0.xyzx, cb3[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r0.xyzx, -cb3[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r3.xyzx
					endif 
					mad r2.w, -r7.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r7.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t9.xyzw, s0, r2.w
					add r3.w, r9.w, l(-1.000000)
					mad r3.w, cb3[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb3[3].x
					mul r10.xyz, r9.xyzx, r3.wwww
					lt r4.w, cb3[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb3[6].w
					  if_nz r4.w
					    dp3 r4.w, r3.xyzx, r3.xyzx
					    rsq r4.w, r4.w
					    mul r11.xyz, r3.xyzx, r4.wwww
					    add r12.xyz, -r0.xyzx, cb3[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r0.xyzx, cb3[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.w, r12.y, r12.x
					    min r4.w, r12.z, r4.w
					    add r0.xyz, r0.xyzx, -cb3[6].xyzx
					    mad r3.xyz, r11.xyzx, r4.wwww, r0.xyzx
					  endif 
					  sample_l r11.xyzw, r3.xyzx, t10.xyzw, s0, r2.w
					  add r0.x, r11.w, l(-1.000000)
					  mad r0.x, cb3[7].w, r0.x, l(1.000000)
					  mul r0.x, r0.x, cb3[7].x
					  mul r0.xyz, r11.xyzx, r0.xxxx
					  mad r3.xyz, r3.wwww, r9.xyzx, -r0.xyzx
					  mad r10.xyz, cb3[1].wwww, r3.xyzx, r0.xyzx
					endif 
					mul r0.xyz, r1.wwww, r10.xyzx
					add r3.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r3.xyz, cb0[27].yyyy, r3.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r2.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r5.xyz, r2.wwww, r5.xyzx
					mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r4.xyzx, r2.xyzx
					dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
					dp3_sat r2.y, r4.xyzx, r1.xyzx
					dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
					mul r1.y, r1.x, r1.x
					dp2 r1.y, r1.yyyy, r7.yyyy
					add r1.y, r1.y, l(-0.500000)
					add r1.z, -r2.x, l(1.000000)
					mul r2.z, r1.z, r1.z
					mul r2.z, r2.z, r2.z
					mul r1.z, r1.z, r2.z
					mad r1.z, r1.y, r1.z, l(1.000000)
					add r2.z, -|r0.w|, l(1.000000)
					mul r3.w, r2.z, r2.z
					mul r3.w, r3.w, r3.w
					mul r2.z, r2.z, r3.w
					mad r1.y, r1.y, r2.z, l(1.000000)
					mul r1.y, r1.y, r1.z
					mul r1.y, r2.x, r1.y
					mul r1.z, r7.y, r7.y
					max r1.z, r1.z, l(0.002000)
					add r3.w, -r1.z, l(1.000000)
					mad r4.x, |r0.w|, r3.w, r1.z
					mad r3.w, r2.x, r3.w, r1.z
					mul r0.w, |r0.w|, r3.w
					mad r0.w, r2.x, r4.x, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r3.w, r1.z, r1.z
					mad r4.x, r2.y, r3.w, -r2.y
					mad r2.y, r4.x, r2.y, l(1.000000)
					mul r3.w, r3.w, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r3.w, r2.y
					mul r0.w, r0.w, r2.y
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.x, r0.w
					mul r1.z, r1.z, l(0.280000)
					mad r1.z, -r1.z, r7.y, l(1.000000)
					dp3 r2.x, r3.xyzx, r3.xyzx
					ne r2.x, r2.x, l(0.000000)
					and r2.x, r2.x, l(0x3f800000)
					mul r0.w, r0.w, r2.x
					add r2.x, -r2.w, l(1.000000)
					add_sat r2.x, r2.x, cb0[27].z
					mul r4.xyz, r1.yyyy, r7.xzwx
					mad r4.xyz, r8.xyzx, r1.wwww, r4.xyzx
					mul r7.xyz, r7.xzwx, r0.wwww
					add r0.w, -r1.x, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r0.xyzw, r0.xyzw, r1.zzzx
					add r1.xyw, -r3.xyxz, l(1.000000, 1.000000, 0.000000, 1.000000)
					mad r1.xyw, r1.xyxw, r0.wwww, r3.xyxz
					mul r1.xyw, r1.xyxw, r7.xyxz
					mad r1.xyw, r5.xyxz, r4.xyxz, r1.xyxw
					add r2.xyw, -r3.xyxz, r2.xxxx
					mad r2.xyz, r2.zzzz, r2.xywx, r3.xyzx
					mad r0.xyz, r0.xyzx, r2.xyzx, r1.xywx
					add o0.xyz, r6.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float       
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_resource_texture3d (float,float,float,float) t11
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 15
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r3.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					mad r1.w, cb0[8].w, l(-2.000000), l(1.000000)
					mad r2.w, -r1.w, cb0[9].x, r1.w
					mad r4.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[9].yzyy, r4.xyxx
					add r4.xy, r4.xyxx, v1.xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s4
					mad r4.x, r1.w, cb0[9].x, -r4.x
					add r4.x, r2.w, -r4.x
					round_pi r4.y, r4.x
					add_sat r4.y, -r4.y, l(1.000000)
					sample r5.xyzw, r3.xyxx, t1.xyzw, s2
					mul r5.x, r5.w, r5.x
					mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r3.xyxx, cb0[4].xxxx
					dp2 r3.x, r5.xyxx, r5.xyxx
					min r3.x, r3.x, l(1.000000)
					add r3.x, -r3.x, l(1.000000)
					sqrt r5.z, r3.x
					sample r3.xyzw, r3.zwzz, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					add r3.xyz, -r5.xyzx, r3.xyzx
					mad r3.xyz, r4.yyyy, r3.xyzx, r5.xyzx
					mad r4.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r5.xyzw, r4.zwzz, t3.xyzw, s5
					mad r6.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mul r5.xyz, r5.xyzx, cb0[11].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s6
					mad r6.xyz, cb0[13].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r4.yyyy, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[15].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s7
					mad r3.w, r1.w, cb0[9].x, -r6.x
					add r3.w, r2.w, -r3.w
					add r3.w, r3.w, cb0[15].x
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.zw, v1.xxxy, cb0[24].xxxy, cb0[24].zzzw
					mad r6.zw, cb1[0].yyyy, cb0[23].xxxy, r6.zzzw
					sample r7.xyzw, r6.zwzz, t6.xyzw, s9
					add r5.w, -r7.x, l(0.500000)
					mul_sat r5.w, r5.w, l(3.000000)
					mul r7.xyz, r7.xxxx, cb0[22].xyzx
					mul r6.z, r5.w, r5.w
					mul r5.w, r5.w, r6.z
					mad r1.w, -r1.w, cb0[9].x, r2.w
					mad_sat r1.w, cb0[25].x, l(3.000000), r1.w
					mul r1.w, r1.w, r5.w
					mad r8.xyz, cb0[22].xyzx, r1.wwww, -r7.xyzx
					mad r7.xyz, cb0[21].xxxx, r8.xyzx, r7.xyzx
					sample r6.xyzw, r6.xyxx, t7.xyzw, s8
					mul r8.xyz, r6.xyzx, cb0[19].xyzx
					mad r6.xyz, -cb0[19].xyzx, r6.xyzx, r7.xyzx
					mad r6.xyz, r4.yyyy, r6.xyzx, r8.xyzx
					add r7.xy, -cb0[27].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.w, -|r4.x|, l(1.000000)
					add r1.w, -r7.x, r1.w
					mul_sat r1.w, r1.w, l(10.000000)
					mad r2.w, r1.w, l(-2.000000), l(3.000000)
					mul r1.w, r1.w, r1.w
					mad_sat r1.w, r2.w, r1.w, -r4.y
					ge r2.w, cb0[17].x, r3.w
					mad r6.xyz, cb0[26].xyzx, r1.wwww, r6.xyzx
					movc r6.xyz, r2.wwww, cb0[18].xyzx, r6.xyzx
					sample r4.xyzw, r4.zwzz, t8.xyzw, s10
					add r1.w, r4.x, l(-1.000000)
					mad r1.w, cb0[28].x, r1.w, l(1.000000)
					add r2.w, r3.w, -cb0[28].y
					lt r2.w, r2.w, l(0.000000)
					discard_nz r2.w
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t11.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r3.x, r4.xyzx, r4.xyzx
					rsq r3.x, r3.x
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.x, -r2.xyzx, r4.xyzx
					add r3.x, r3.x, r3.x
					mad r3.xyz, r4.xyzx, -r3.xxxx, -r2.xyzx
					mul r7.xzw, r3.wwww, cb0[2].xxyz
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r8.xyz, v3.wwww, cb4[2].xyzx
					  mad r8.xyz, cb4[1].xyzx, v2.wwww, r8.xyzx
					  mad r8.xyz, cb4[3].xyzx, v4.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb4[4].xyzx
					  movc r8.xyz, r2.wwww, r8.xyzx, r0.xyzx
					  add r8.xyz, r8.xyzx, -cb4[6].xyzx
					  mul r8.yzw, r8.xxyz, cb4[5].xxyz
					  mul r2.w, r8.y, l(0.250000)
					  mul r3.w, cb4[0].z, l(0.500000)
					  mad r5.w, -cb4[0].z, l(0.500000), l(0.250000)
					  max r2.w, r2.w, r3.w
					  min r8.x, r5.w, r2.w
					  sample r9.xyzw, r8.xzwx, t11.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t11.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t11.xyzw, s1
					  mov r4.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r4.xyzw
					  dp4 r9.y, r10.xyzw, r4.xyzw
					  dp4 r9.z, r8.xyzw, r4.xyzw
					else 
					  mov r4.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r4.xyzw
					  dp4 r9.y, cb2[40].xyzw, r4.xyzw
					  dp4 r9.z, cb2[41].xyzw, r4.xyzw
					endif 
					add r8.xyz, r9.xyzx, v5.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb3[2].w
					if_nz r2.w
					  dp3 r2.w, r3.xyzx, r3.xyzx
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r3.xyzx
					  add r10.xyz, -r0.xyzx, cb3[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r0.xyzx, cb3[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r0.xyzx, -cb3[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r3.xyzx
					endif 
					mad r2.w, -r7.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r7.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t9.xyzw, s0, r2.w
					add r3.w, r9.w, l(-1.000000)
					mad r3.w, cb3[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb3[3].x
					mul r10.xyz, r9.xyzx, r3.wwww
					lt r4.w, cb3[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb3[6].w
					  if_nz r4.w
					    dp3 r4.w, r3.xyzx, r3.xyzx
					    rsq r4.w, r4.w
					    mul r11.xyz, r3.xyzx, r4.wwww
					    add r12.xyz, -r0.xyzx, cb3[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r0.xyzx, cb3[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.w, r12.y, r12.x
					    min r4.w, r12.z, r4.w
					    add r0.xyz, r0.xyzx, -cb3[6].xyzx
					    mad r3.xyz, r11.xyzx, r4.wwww, r0.xyzx
					  endif 
					  sample_l r11.xyzw, r3.xyzx, t10.xyzw, s0, r2.w
					  add r0.x, r11.w, l(-1.000000)
					  mad r0.x, cb3[7].w, r0.x, l(1.000000)
					  mul r0.x, r0.x, cb3[7].x
					  mul r0.xyz, r11.xyzx, r0.xxxx
					  mad r3.xyz, r3.wwww, r9.xyzx, -r0.xyzx
					  mad r10.xyz, cb3[1].wwww, r3.xyzx, r0.xyzx
					endif 
					mul r0.xyz, r1.wwww, r10.xyzx
					add r3.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r3.xyz, cb0[27].yyyy, r3.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r2.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r5.xyz, r2.wwww, r5.xyzx
					mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r4.xyzx, r2.xyzx
					dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
					dp3_sat r2.y, r4.xyzx, r1.xyzx
					dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
					mul r1.y, r1.x, r1.x
					dp2 r1.y, r1.yyyy, r7.yyyy
					add r1.y, r1.y, l(-0.500000)
					add r1.z, -r2.x, l(1.000000)
					mul r2.z, r1.z, r1.z
					mul r2.z, r2.z, r2.z
					mul r1.z, r1.z, r2.z
					mad r1.z, r1.y, r1.z, l(1.000000)
					add r2.z, -|r0.w|, l(1.000000)
					mul r3.w, r2.z, r2.z
					mul r3.w, r3.w, r3.w
					mul r2.z, r2.z, r3.w
					mad r1.y, r1.y, r2.z, l(1.000000)
					mul r1.y, r1.y, r1.z
					mul r1.y, r2.x, r1.y
					mul r1.z, r7.y, r7.y
					max r1.z, r1.z, l(0.002000)
					add r3.w, -r1.z, l(1.000000)
					mad r4.x, |r0.w|, r3.w, r1.z
					mad r3.w, r2.x, r3.w, r1.z
					mul r0.w, |r0.w|, r3.w
					mad r0.w, r2.x, r4.x, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r3.w, r1.z, r1.z
					mad r4.x, r2.y, r3.w, -r2.y
					mad r2.y, r4.x, r2.y, l(1.000000)
					mul r3.w, r3.w, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r3.w, r2.y
					mul r0.w, r0.w, r2.y
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.x, r0.w
					mul r1.z, r1.z, l(0.280000)
					mad r1.z, -r1.z, r7.y, l(1.000000)
					dp3 r2.x, r3.xyzx, r3.xyzx
					ne r2.x, r2.x, l(0.000000)
					and r2.x, r2.x, l(0x3f800000)
					mul r0.w, r0.w, r2.x
					add r2.x, -r2.w, l(1.000000)
					add_sat r2.x, r2.x, cb0[27].z
					mul r4.xyz, r1.yyyy, r7.xzwx
					mad r4.xyz, r8.xyzx, r1.wwww, r4.xyzx
					mul r7.xyz, r7.xzwx, r0.wwww
					add r0.w, -r1.x, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r0.xyzw, r0.xyzw, r1.zzzx
					add r1.xyw, -r3.xyxz, l(1.000000, 1.000000, 0.000000, 1.000000)
					mad r1.xyw, r1.xyxw, r0.wwww, r3.xyxz
					mul r1.xyw, r1.xyxw, r7.xyxz
					mad r1.xyw, r5.xyxz, r4.xyxz, r1.xyxw
					add r2.xyw, -r3.xyxz, r2.xxxx
					mad r2.xyz, r2.zzzz, r2.xywx, r3.xyzx
					mad r0.xyz, r0.xyzx, r2.xyzx, r1.xywx
					add o0.xyz, r6.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xy w
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_sampler s11, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_resource_texturecube (float,float,float,float) t11
					dcl_resource_texture3d (float,float,float,float) t12
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r3.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					add r1.w, v3.w, -cb0[7].y
					mad r2.w, cb0[8].w, l(-2.000000), l(1.000000)
					mul r4.x, r2.w, cb0[9].x
					mad r1.w, r1.w, r2.w, -r4.x
					mad r4.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[9].yzyy, r4.xyxx
					add r4.xy, r4.xyxx, v1.xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s5
					mad r4.x, r2.w, cb0[9].x, -r4.x
					add r4.x, r1.w, -r4.x
					round_pi r4.y, r4.x
					add_sat r4.y, -r4.y, l(1.000000)
					sample r5.xyzw, r3.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r3.xyxx, cb0[4].xxxx
					dp2 r3.x, r5.xyxx, r5.xyxx
					min r3.x, r3.x, l(1.000000)
					add r3.x, -r3.x, l(1.000000)
					sqrt r5.z, r3.x
					sample r3.xyzw, r3.zwzz, t2.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					add r3.xyz, -r5.xyzx, r3.xyzx
					mad r3.xyz, r4.yyyy, r3.xyzx, r5.xyzx
					mad r4.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r5.xyzw, r4.zwzz, t3.xyzw, s6
					mad r6.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mul r5.xyz, r5.xyzx, cb0[11].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s7
					mad r6.xyz, cb0[13].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r4.yyyy, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[15].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s8
					mad r3.w, r2.w, cb0[9].x, -r6.x
					add r3.w, r1.w, -r3.w
					add r3.w, r3.w, cb0[15].x
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.zw, v1.xxxy, cb0[24].xxxy, cb0[24].zzzw
					mad r6.zw, cb1[0].yyyy, cb0[23].xxxy, r6.zzzw
					sample r7.xyzw, r6.zwzz, t6.xyzw, s10
					add r5.w, -r7.x, l(0.500000)
					mul_sat r5.w, r5.w, l(3.000000)
					mul r7.xyz, r7.xxxx, cb0[22].xyzx
					mul r6.z, r5.w, r5.w
					mul r5.w, r5.w, r6.z
					mad r1.w, -r2.w, cb0[9].x, r1.w
					mad_sat r1.w, cb0[25].x, l(3.000000), r1.w
					mul r1.w, r1.w, r5.w
					mad r8.xyz, cb0[22].xyzx, r1.wwww, -r7.xyzx
					mad r7.xyz, cb0[21].xxxx, r8.xyzx, r7.xyzx
					sample r6.xyzw, r6.xyxx, t7.xyzw, s9
					mul r8.xyz, r6.xyzx, cb0[19].xyzx
					mad r6.xyz, -cb0[19].xyzx, r6.xyzx, r7.xyzx
					mad r6.xyz, r4.yyyy, r6.xyzx, r8.xyzx
					add r7.xy, -cb0[27].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.w, -|r4.x|, l(1.000000)
					add r1.w, -r7.x, r1.w
					mul_sat r1.w, r1.w, l(10.000000)
					mad r2.w, r1.w, l(-2.000000), l(3.000000)
					mul r1.w, r1.w, r1.w
					mad_sat r1.w, r2.w, r1.w, -r4.y
					ge r2.w, cb0[17].x, r3.w
					mad r6.xyz, cb0[26].xyzx, r1.wwww, r6.xyzx
					movc r6.xyz, r2.wwww, cb0[18].xyzx, r6.xyzx
					sample r4.xyzw, r4.zwzz, t8.xyzw, s11
					add r1.w, r4.x, l(-1.000000)
					mad r1.w, cb0[28].x, r1.w, l(1.000000)
					add r2.w, r3.w, -cb0[28].y
					lt r2.w, r2.w, l(0.000000)
					discard_nz r2.w
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r2.w, r1.xyzx, r4.xyzx
					add r4.xyz, r0.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb6[2].xyzx
					  mad r4.xyz, cb6[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb6[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb6[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb6[6].xyzx
					  mul r4.yzw, r4.xxyz, cb6[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t12.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v5.xyxx, v5.wwww
					sample r4.xyzw, r4.xyxx, t9.xyzw, s2
					add r3.w, r3.w, -r4.x
					mad r2.w, r2.w, r3.w, r4.x
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r3.x, r4.xyzx, r4.xyzx
					rsq r3.x, r3.x
					mul r3.xyz, r3.xxxx, r4.xyzx
					dp3 r3.w, -r2.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, r3.xyzx, -r3.wwww, -r2.xyzx
					mul r7.xzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r4.xyzx, r4.xyzx
					  rsq r2.w, r2.w
					  mul r8.xyz, r2.wwww, r4.xyzx
					  add r9.xyz, -r0.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -r0.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r2.w, r9.y, r9.x
					  min r2.w, r9.z, r2.w
					  add r9.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
					else 
					  mov r8.xyz, r4.xyzx
					endif 
					mad r2.w, -r7.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r7.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t10.xyzw, s0, r2.w
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r10.xyz, r4.wwww, r4.xyzx
					    add r11.xyz, -r0.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r4.xyz, r10.xyzx, r4.wwww, r0.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t11.xyzw, s0, r2.w
					  add r0.x, r4.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r4.xyzx, r0.xxxx
					  mad r4.xyz, r3.wwww, r8.xyzx, -r0.xyzx
					  mad r9.xyz, cb5[1].wwww, r4.xyzx, r0.xyzx
					endif 
					mul r0.xyz, r1.wwww, r9.xyzx
					add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r4.xyz, cb0[27].yyyy, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r3.xyzx, r2.xyzx
					dp3_sat r2.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r2.y, r3.xyzx, r1.xyzx
					dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
					mul r1.y, r1.x, r1.x
					dp2 r1.y, r1.yyyy, r7.yyyy
					add r1.y, r1.y, l(-0.500000)
					add r1.z, -r2.x, l(1.000000)
					mul r2.z, r1.z, r1.z
					mul r2.z, r2.z, r2.z
					mul r1.z, r1.z, r2.z
					mad r1.z, r1.y, r1.z, l(1.000000)
					add r2.z, -|r0.w|, l(1.000000)
					mul r2.w, r2.z, r2.z
					mul r2.w, r2.w, r2.w
					mul r2.z, r2.z, r2.w
					mad r1.y, r1.y, r2.z, l(1.000000)
					mul r1.y, r1.y, r1.z
					mul r1.y, r2.x, r1.y
					mul r1.z, r7.y, r7.y
					max r1.z, r1.z, l(0.002000)
					add r2.w, -r1.z, l(1.000000)
					mad r3.x, |r0.w|, r2.w, r1.z
					mad r2.w, r2.x, r2.w, r1.z
					mul r0.w, |r0.w|, r2.w
					mad r0.w, r2.x, r3.x, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r2.w, r1.z, r1.z
					mad r3.x, r2.y, r2.w, -r2.y
					mad r2.y, r3.x, r2.y, l(1.000000)
					mul r2.w, r2.w, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.w, r2.y
					mul r0.w, r0.w, r2.y
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.x, r0.w
					mul r1.z, r1.z, l(0.280000)
					mad r1.z, -r1.z, r7.y, l(1.000000)
					dp3 r2.x, r4.xyzx, r4.xyzx
					ne r2.x, r2.x, l(0.000000)
					and r2.x, r2.x, l(0x3f800000)
					mul r0.w, r0.w, r2.x
					add r1.w, -r1.w, l(1.000000)
					add_sat r1.w, r1.w, cb0[27].z
					mul r2.xyw, r1.yyyy, r7.xzxw
					mul r3.xyz, r7.xzwx, r0.wwww
					add r0.w, -r1.x, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r0.xyzw, r0.xyzw, r1.zzzx
					add r7.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r7.xyz, r7.xyzx, r0.wwww, r4.xyzx
					mul r3.xyz, r3.xyzx, r7.xyzx
					mad r2.xyw, r5.xyxz, r2.xyxw, r3.xyxz
					add r1.xyz, -r4.xyzx, r1.wwww
					mad r1.xyz, r2.zzzz, r1.xyzx, r4.xyzx
					mad r0.xyz, r0.xyzx, r1.xyzx, r2.xywx
					add o0.xyz, r6.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float   xy w
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_sampler s11, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_resource_texturecube (float,float,float,float) t11
					dcl_resource_texture3d (float,float,float,float) t12
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyw
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r3.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					mad r1.w, cb0[8].w, l(-2.000000), l(1.000000)
					mad r2.w, -r1.w, cb0[9].x, r1.w
					mad r4.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[9].yzyy, r4.xyxx
					add r4.xy, r4.xyxx, v1.xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s5
					mad r4.x, r1.w, cb0[9].x, -r4.x
					add r4.x, r2.w, -r4.x
					round_pi r4.y, r4.x
					add_sat r4.y, -r4.y, l(1.000000)
					sample r5.xyzw, r3.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r3.xyxx, cb0[4].xxxx
					dp2 r3.x, r5.xyxx, r5.xyxx
					min r3.x, r3.x, l(1.000000)
					add r3.x, -r3.x, l(1.000000)
					sqrt r5.z, r3.x
					sample r3.xyzw, r3.zwzz, t2.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					add r3.xyz, -r5.xyzx, r3.xyzx
					mad r3.xyz, r4.yyyy, r3.xyzx, r5.xyzx
					mad r4.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r5.xyzw, r4.zwzz, t3.xyzw, s6
					mad r6.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mul r5.xyz, r5.xyzx, cb0[11].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s7
					mad r6.xyz, cb0[13].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r4.yyyy, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[15].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s8
					mad r3.w, r1.w, cb0[9].x, -r6.x
					add r3.w, r2.w, -r3.w
					add r3.w, r3.w, cb0[15].x
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.zw, v1.xxxy, cb0[24].xxxy, cb0[24].zzzw
					mad r6.zw, cb1[0].yyyy, cb0[23].xxxy, r6.zzzw
					sample r7.xyzw, r6.zwzz, t6.xyzw, s10
					add r5.w, -r7.x, l(0.500000)
					mul_sat r5.w, r5.w, l(3.000000)
					mul r7.xyz, r7.xxxx, cb0[22].xyzx
					mul r6.z, r5.w, r5.w
					mul r5.w, r5.w, r6.z
					mad r1.w, -r1.w, cb0[9].x, r2.w
					mad_sat r1.w, cb0[25].x, l(3.000000), r1.w
					mul r1.w, r1.w, r5.w
					mad r8.xyz, cb0[22].xyzx, r1.wwww, -r7.xyzx
					mad r7.xyz, cb0[21].xxxx, r8.xyzx, r7.xyzx
					sample r6.xyzw, r6.xyxx, t7.xyzw, s9
					mul r8.xyz, r6.xyzx, cb0[19].xyzx
					mad r6.xyz, -cb0[19].xyzx, r6.xyzx, r7.xyzx
					mad r6.xyz, r4.yyyy, r6.xyzx, r8.xyzx
					add r7.xy, -cb0[27].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.w, -|r4.x|, l(1.000000)
					add r1.w, -r7.x, r1.w
					mul_sat r1.w, r1.w, l(10.000000)
					mad r2.w, r1.w, l(-2.000000), l(3.000000)
					mul r1.w, r1.w, r1.w
					mad_sat r1.w, r2.w, r1.w, -r4.y
					ge r2.w, cb0[17].x, r3.w
					mad r6.xyz, cb0[26].xyzx, r1.wwww, r6.xyzx
					movc r6.xyz, r2.wwww, cb0[18].xyzx, r6.xyzx
					sample r4.xyzw, r4.zwzz, t8.xyzw, s11
					add r1.w, r4.x, l(-1.000000)
					mad r1.w, cb0[28].x, r1.w, l(1.000000)
					add r2.w, r3.w, -cb0[28].y
					lt r2.w, r2.w, l(0.000000)
					discard_nz r2.w
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r2.w, r1.xyzx, r4.xyzx
					add r4.xyz, r0.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r3.w, cb6[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb6[2].xyzx
					  mad r4.xyz, cb6[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb6[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb6[4].xyzx
					  movc r4.xyz, r3.wwww, r4.xyzx, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb6[6].xyzx
					  mul r4.yzw, r4.xxyz, cb6[5].xxyz
					  mad r3.w, r4.y, l(0.250000), l(0.750000)
					  mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
					  max r4.x, r3.w, r4.y
					  sample r4.xyzw, r4.xzwx, t12.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v5.xyxx, v5.wwww
					sample r4.xyzw, r4.xyxx, t9.xyzw, s2
					add r3.w, r3.w, -r4.x
					mad r2.w, r2.w, r3.w, r4.x
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r3.x, r4.xyzx, r4.xyzx
					rsq r3.x, r3.x
					mul r3.xyz, r3.xxxx, r4.xyzx
					dp3 r3.w, -r2.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, r3.xyzx, -r3.wwww, -r2.xyzx
					mul r7.xzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r4.xyzx, r4.xyzx
					  rsq r2.w, r2.w
					  mul r8.xyz, r2.wwww, r4.xyzx
					  add r9.xyz, -r0.xyzx, cb5[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -r0.xyzx, cb5[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r2.w, r9.y, r9.x
					  min r2.w, r9.z, r2.w
					  add r9.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
					else 
					  mov r8.xyz, r4.xyzx
					endif 
					mad r2.w, -r7.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r7.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t10.xyzw, s0, r2.w
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r10.xyz, r4.wwww, r4.xyzx
					    add r11.xyz, -r0.xyzx, cb5[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb5[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r4.xyz, r10.xyzx, r4.wwww, r0.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t11.xyzw, s0, r2.w
					  add r0.x, r4.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r4.xyzx, r0.xxxx
					  mad r4.xyz, r3.wwww, r8.xyzx, -r0.xyzx
					  mad r9.xyz, cb5[1].wwww, r4.xyzx, r0.xyzx
					endif 
					mul r0.xyz, r1.wwww, r9.xyzx
					add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r4.xyz, cb0[27].yyyy, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r3.xyzx, r2.xyzx
					dp3_sat r2.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r2.y, r3.xyzx, r1.xyzx
					dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
					mul r1.y, r1.x, r1.x
					dp2 r1.y, r1.yyyy, r7.yyyy
					add r1.y, r1.y, l(-0.500000)
					add r1.z, -r2.x, l(1.000000)
					mul r2.z, r1.z, r1.z
					mul r2.z, r2.z, r2.z
					mul r1.z, r1.z, r2.z
					mad r1.z, r1.y, r1.z, l(1.000000)
					add r2.z, -|r0.w|, l(1.000000)
					mul r2.w, r2.z, r2.z
					mul r2.w, r2.w, r2.w
					mul r2.z, r2.z, r2.w
					mad r1.y, r1.y, r2.z, l(1.000000)
					mul r1.y, r1.y, r1.z
					mul r1.y, r2.x, r1.y
					mul r1.z, r7.y, r7.y
					max r1.z, r1.z, l(0.002000)
					add r2.w, -r1.z, l(1.000000)
					mad r3.x, |r0.w|, r2.w, r1.z
					mad r2.w, r2.x, r2.w, r1.z
					mul r0.w, |r0.w|, r2.w
					mad r0.w, r2.x, r3.x, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r2.w, r1.z, r1.z
					mad r3.x, r2.y, r2.w, -r2.y
					mad r2.y, r3.x, r2.y, l(1.000000)
					mul r2.w, r2.w, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.w, r2.y
					mul r0.w, r0.w, r2.y
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.x, r0.w
					mul r1.z, r1.z, l(0.280000)
					mad r1.z, -r1.z, r7.y, l(1.000000)
					dp3 r2.x, r4.xyzx, r4.xyzx
					ne r2.x, r2.x, l(0.000000)
					and r2.x, r2.x, l(0x3f800000)
					mul r0.w, r0.w, r2.x
					add r1.w, -r1.w, l(1.000000)
					add_sat r1.w, r1.w, cb0[27].z
					mul r2.xyw, r1.yyyy, r7.xzxw
					mul r3.xyz, r7.xzwx, r0.wwww
					add r0.w, -r1.x, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r0.xyzw, r0.xyzw, r1.zzzx
					add r7.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r7.xyz, r7.xyzx, r0.wwww, r4.xyzx
					mul r3.xyz, r3.xyzx, r7.xyzx
					mad r2.xyw, r5.xyxz, r2.xyxw, r3.xyxz
					add r1.xyz, -r4.xyzx, r1.wwww
					mad r1.xyz, r2.zzzz, r1.xyzx, r4.xyzx
					mad r0.xyz, r0.xyzx, r1.xyzx, r2.xywx
					add o0.xyz, r6.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xy w
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_sampler s11, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_resource_texturecube (float,float,float,float) t11
					dcl_resource_texture3d (float,float,float,float) t12
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r3.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					add r1.w, v3.w, -cb0[7].y
					mad r2.w, cb0[8].w, l(-2.000000), l(1.000000)
					mul r4.x, r2.w, cb0[9].x
					mad r1.w, r1.w, r2.w, -r4.x
					mad r4.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[9].yzyy, r4.xyxx
					add r4.xy, r4.xyxx, v1.xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s5
					mad r4.x, r2.w, cb0[9].x, -r4.x
					add r4.x, r1.w, -r4.x
					round_pi r4.y, r4.x
					add_sat r4.y, -r4.y, l(1.000000)
					sample r5.xyzw, r3.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r3.xyxx, cb0[4].xxxx
					dp2 r3.x, r5.xyxx, r5.xyxx
					min r3.x, r3.x, l(1.000000)
					add r3.x, -r3.x, l(1.000000)
					sqrt r5.z, r3.x
					sample r3.xyzw, r3.zwzz, t2.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					add r3.xyz, -r5.xyzx, r3.xyzx
					mad r3.xyz, r4.yyyy, r3.xyzx, r5.xyzx
					mad r4.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r5.xyzw, r4.zwzz, t3.xyzw, s6
					mad r6.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mul r5.xyz, r5.xyzx, cb0[11].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s7
					mad r6.xyz, cb0[13].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r4.yyyy, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[15].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s8
					mad r3.w, r2.w, cb0[9].x, -r6.x
					add r3.w, r1.w, -r3.w
					add r3.w, r3.w, cb0[15].x
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.zw, v1.xxxy, cb0[24].xxxy, cb0[24].zzzw
					mad r6.zw, cb1[0].yyyy, cb0[23].xxxy, r6.zzzw
					sample r7.xyzw, r6.zwzz, t6.xyzw, s10
					add r5.w, -r7.x, l(0.500000)
					mul_sat r5.w, r5.w, l(3.000000)
					mul r7.xyz, r7.xxxx, cb0[22].xyzx
					mul r6.z, r5.w, r5.w
					mul r5.w, r5.w, r6.z
					mad r1.w, -r2.w, cb0[9].x, r1.w
					mad_sat r1.w, cb0[25].x, l(3.000000), r1.w
					mul r1.w, r1.w, r5.w
					mad r8.xyz, cb0[22].xyzx, r1.wwww, -r7.xyzx
					mad r7.xyz, cb0[21].xxxx, r8.xyzx, r7.xyzx
					sample r6.xyzw, r6.xyxx, t7.xyzw, s9
					mul r8.xyz, r6.xyzx, cb0[19].xyzx
					mad r6.xyz, -cb0[19].xyzx, r6.xyzx, r7.xyzx
					mad r6.xyz, r4.yyyy, r6.xyzx, r8.xyzx
					add r7.xy, -cb0[27].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.w, -|r4.x|, l(1.000000)
					add r1.w, -r7.x, r1.w
					mul_sat r1.w, r1.w, l(10.000000)
					mad r2.w, r1.w, l(-2.000000), l(3.000000)
					mul r1.w, r1.w, r1.w
					mad_sat r1.w, r2.w, r1.w, -r4.y
					ge r2.w, cb0[17].x, r3.w
					mad r6.xyz, cb0[26].xyzx, r1.wwww, r6.xyzx
					movc r6.xyz, r2.wwww, cb0[18].xyzx, r6.xyzx
					sample r4.xyzw, r4.zwzz, t8.xyzw, s11
					add r1.w, r4.x, l(-1.000000)
					mad r1.w, cb0[28].x, r1.w, l(1.000000)
					add r2.w, r3.w, -cb0[28].y
					lt r2.w, r2.w, l(0.000000)
					discard_nz r2.w
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r2.w, r1.xyzx, r4.xyzx
					add r4.xyz, r0.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.x, cb6[0].y, l(1.000000)
					  mul r4.yzw, v3.wwww, cb6[2].xxyz
					  mad r4.yzw, cb6[1].xxyz, v2.wwww, r4.yyzw
					  mad r4.yzw, cb6[3].xxyz, v4.wwww, r4.yyzw
					  add r4.yzw, r4.yyzw, cb6[4].xxyz
					  movc r4.xyz, r4.xxxx, r4.yzwy, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb6[6].xyzx
					  mul r4.yzw, r4.xxyz, cb6[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.w
					  sample r4.xyzw, r4.xzwx, t12.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
					div r4.yz, v6.xxyx, v6.wwww
					sample r8.xyzw, r4.yzyy, t9.xyzw, s2
					add r4.x, r4.x, -r8.x
					mad r2.w, r2.w, r4.x, r8.x
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r3.x, r4.xyzx, r4.xyzx
					rsq r3.x, r3.x
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.x, -r2.xyzx, r4.xyzx
					add r3.x, r3.x, r3.x
					mad r3.xyz, r4.xyzx, -r3.xxxx, -r2.xyzx
					mul r7.xzw, r2.wwww, cb0[2].xxyz
					if_nz r3.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r8.xyz, v3.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v2.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v4.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r2.wwww, r8.xyzx, r0.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r2.w, r8.y, l(0.250000)
					  mul r3.w, cb6[0].z, l(0.500000)
					  mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r2.w, r2.w, r3.w
					  min r8.x, r5.w, r2.w
					  sample r9.xyzw, r8.xzwx, t12.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t12.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t12.xyzw, s1
					  mov r4.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r4.xyzw
					  dp4 r9.y, r10.xyzw, r4.xyzw
					  dp4 r9.z, r8.xyzw, r4.xyzw
					else 
					  mov r4.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r4.xyzw
					  dp4 r9.y, cb2[40].xyzw, r4.xyzw
					  dp4 r9.z, cb2[41].xyzw, r4.xyzw
					endif 
					add r8.xyz, r9.xyzx, v5.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r3.xyzx, r3.xyzx
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r3.xyzx
					  add r10.xyz, -r0.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r0.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r3.xyzx
					endif 
					mad r2.w, -r7.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r7.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t10.xyzw, s0, r2.w
					add r3.w, r9.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r3.xyzx, r3.xyzx
					    rsq r4.w, r4.w
					    mul r11.xyz, r3.xyzx, r4.wwww
					    add r12.xyz, -r0.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r0.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.w, r12.y, r12.x
					    min r4.w, r12.z, r4.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r3.xyz, r11.xyzx, r4.wwww, r0.xyzx
					  endif 
					  sample_l r11.xyzw, r3.xyzx, t11.xyzw, s0, r2.w
					  add r0.x, r11.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r11.xyzx, r0.xxxx
					  mad r3.xyz, r3.wwww, r9.xyzx, -r0.xyzx
					  mad r10.xyz, cb5[1].wwww, r3.xyzx, r0.xyzx
					endif 
					mul r0.xyz, r1.wwww, r10.xyzx
					add r3.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r3.xyz, cb0[27].yyyy, r3.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r2.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r5.xyz, r2.wwww, r5.xyzx
					mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r4.xyzx, r2.xyzx
					dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
					dp3_sat r2.y, r4.xyzx, r1.xyzx
					dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
					mul r1.y, r1.x, r1.x
					dp2 r1.y, r1.yyyy, r7.yyyy
					add r1.y, r1.y, l(-0.500000)
					add r1.z, -r2.x, l(1.000000)
					mul r2.z, r1.z, r1.z
					mul r2.z, r2.z, r2.z
					mul r1.z, r1.z, r2.z
					mad r1.z, r1.y, r1.z, l(1.000000)
					add r2.z, -|r0.w|, l(1.000000)
					mul r3.w, r2.z, r2.z
					mul r3.w, r3.w, r3.w
					mul r2.z, r2.z, r3.w
					mad r1.y, r1.y, r2.z, l(1.000000)
					mul r1.y, r1.y, r1.z
					mul r1.y, r2.x, r1.y
					mul r1.z, r7.y, r7.y
					max r1.z, r1.z, l(0.002000)
					add r3.w, -r1.z, l(1.000000)
					mad r4.x, |r0.w|, r3.w, r1.z
					mad r3.w, r2.x, r3.w, r1.z
					mul r0.w, |r0.w|, r3.w
					mad r0.w, r2.x, r4.x, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r3.w, r1.z, r1.z
					mad r4.x, r2.y, r3.w, -r2.y
					mad r2.y, r4.x, r2.y, l(1.000000)
					mul r3.w, r3.w, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r3.w, r2.y
					mul r0.w, r0.w, r2.y
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.x, r0.w
					mul r1.z, r1.z, l(0.280000)
					mad r1.z, -r1.z, r7.y, l(1.000000)
					dp3 r2.x, r3.xyzx, r3.xyzx
					ne r2.x, r2.x, l(0.000000)
					and r2.x, r2.x, l(0x3f800000)
					mul r0.w, r0.w, r2.x
					add r2.x, -r2.w, l(1.000000)
					add_sat r2.x, r2.x, cb0[27].z
					mul r4.xyz, r1.yyyy, r7.xzwx
					mad r4.xyz, r8.xyzx, r1.wwww, r4.xyzx
					mul r7.xyz, r7.xzwx, r0.wwww
					add r0.w, -r1.x, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r0.xyzw, r0.xyzw, r1.zzzx
					add r1.xyw, -r3.xyxz, l(1.000000, 1.000000, 0.000000, 1.000000)
					mad r1.xyw, r1.xyxw, r0.wwww, r3.xyxz
					mul r1.xyw, r1.xyxw, r7.xyxz
					mad r1.xyw, r5.xyxz, r4.xyxz, r1.xyxw
					add r2.xyw, -r3.xyxz, r2.xxxx
					mad r2.xyz, r2.zzzz, r2.xywx, r3.xyzx
					mad r0.xyz, r0.xyzx, r2.xyzx, r1.xywx
					add o0.xyz, r6.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xy w
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[8], immediateIndexed
					dcl_constantbuffer CB6[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_sampler s11, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_resource_texturecube (float,float,float,float) t11
					dcl_resource_texture3d (float,float,float,float) t12
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 15
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r3.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					mad r1.w, cb0[8].w, l(-2.000000), l(1.000000)
					mad r2.w, -r1.w, cb0[9].x, r1.w
					mad r4.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[9].yzyy, r4.xyxx
					add r4.xy, r4.xyxx, v1.xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s5
					mad r4.x, r1.w, cb0[9].x, -r4.x
					add r4.x, r2.w, -r4.x
					round_pi r4.y, r4.x
					add_sat r4.y, -r4.y, l(1.000000)
					sample r5.xyzw, r3.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r3.xyxx, cb0[4].xxxx
					dp2 r3.x, r5.xyxx, r5.xyxx
					min r3.x, r3.x, l(1.000000)
					add r3.x, -r3.x, l(1.000000)
					sqrt r5.z, r3.x
					sample r3.xyzw, r3.zwzz, t2.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					add r3.xyz, -r5.xyzx, r3.xyzx
					mad r3.xyz, r4.yyyy, r3.xyzx, r5.xyzx
					mad r4.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r5.xyzw, r4.zwzz, t3.xyzw, s6
					mad r6.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mul r5.xyz, r5.xyzx, cb0[11].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s7
					mad r6.xyz, cb0[13].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r4.yyyy, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[15].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s8
					mad r3.w, r1.w, cb0[9].x, -r6.x
					add r3.w, r2.w, -r3.w
					add r3.w, r3.w, cb0[15].x
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.zw, v1.xxxy, cb0[24].xxxy, cb0[24].zzzw
					mad r6.zw, cb1[0].yyyy, cb0[23].xxxy, r6.zzzw
					sample r7.xyzw, r6.zwzz, t6.xyzw, s10
					add r5.w, -r7.x, l(0.500000)
					mul_sat r5.w, r5.w, l(3.000000)
					mul r7.xyz, r7.xxxx, cb0[22].xyzx
					mul r6.z, r5.w, r5.w
					mul r5.w, r5.w, r6.z
					mad r1.w, -r1.w, cb0[9].x, r2.w
					mad_sat r1.w, cb0[25].x, l(3.000000), r1.w
					mul r1.w, r1.w, r5.w
					mad r8.xyz, cb0[22].xyzx, r1.wwww, -r7.xyzx
					mad r7.xyz, cb0[21].xxxx, r8.xyzx, r7.xyzx
					sample r6.xyzw, r6.xyxx, t7.xyzw, s9
					mul r8.xyz, r6.xyzx, cb0[19].xyzx
					mad r6.xyz, -cb0[19].xyzx, r6.xyzx, r7.xyzx
					mad r6.xyz, r4.yyyy, r6.xyzx, r8.xyzx
					add r7.xy, -cb0[27].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.w, -|r4.x|, l(1.000000)
					add r1.w, -r7.x, r1.w
					mul_sat r1.w, r1.w, l(10.000000)
					mad r2.w, r1.w, l(-2.000000), l(3.000000)
					mul r1.w, r1.w, r1.w
					mad_sat r1.w, r2.w, r1.w, -r4.y
					ge r2.w, cb0[17].x, r3.w
					mad r6.xyz, cb0[26].xyzx, r1.wwww, r6.xyzx
					movc r6.xyz, r2.wwww, cb0[18].xyzx, r6.xyzx
					sample r4.xyzw, r4.zwzz, t8.xyzw, s11
					add r1.w, r4.x, l(-1.000000)
					mad r1.w, cb0[28].x, r1.w, l(1.000000)
					add r2.w, r3.w, -cb0[28].y
					lt r2.w, r2.w, l(0.000000)
					discard_nz r2.w
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r2.w, r1.xyzx, r4.xyzx
					add r4.xyz, r0.xyzx, -cb3[25].xyzx
					dp3 r3.w, r4.xyzx, r4.xyzx
					sqrt r3.w, r3.w
					add r3.w, -r2.w, r3.w
					mad r2.w, cb3[25].w, r3.w, r2.w
					mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
					eq r3.w, cb6[0].x, l(1.000000)
					if_nz r3.w
					  eq r4.x, cb6[0].y, l(1.000000)
					  mul r4.yzw, v3.wwww, cb6[2].xxyz
					  mad r4.yzw, cb6[1].xxyz, v2.wwww, r4.yyzw
					  mad r4.yzw, cb6[3].xxyz, v4.wwww, r4.yyzw
					  add r4.yzw, r4.yyzw, cb6[4].xxyz
					  movc r4.xyz, r4.xxxx, r4.yzwy, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb6[6].xyzx
					  mul r4.yzw, r4.xxyz, cb6[5].xxyz
					  mad r4.y, r4.y, l(0.250000), l(0.750000)
					  mad r5.w, cb6[0].z, l(0.500000), l(0.750000)
					  max r4.x, r4.y, r5.w
					  sample r4.xyzw, r4.xzwx, t12.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
					div r4.yz, v6.xxyx, v6.wwww
					sample r8.xyzw, r4.yzyy, t9.xyzw, s2
					add r4.x, r4.x, -r8.x
					mad r2.w, r2.w, r4.x, r8.x
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r3.x, r4.xyzx, r4.xyzx
					rsq r3.x, r3.x
					mul r4.xyz, r3.xxxx, r4.xyzx
					dp3 r3.x, -r2.xyzx, r4.xyzx
					add r3.x, r3.x, r3.x
					mad r3.xyz, r4.xyzx, -r3.xxxx, -r2.xyzx
					mul r7.xzw, r2.wwww, cb0[2].xxyz
					if_nz r3.w
					  eq r2.w, cb6[0].y, l(1.000000)
					  mul r8.xyz, v3.wwww, cb6[2].xyzx
					  mad r8.xyz, cb6[1].xyzx, v2.wwww, r8.xyzx
					  mad r8.xyz, cb6[3].xyzx, v4.wwww, r8.xyzx
					  add r8.xyz, r8.xyzx, cb6[4].xyzx
					  movc r8.xyz, r2.wwww, r8.xyzx, r0.xyzx
					  add r8.xyz, r8.xyzx, -cb6[6].xyzx
					  mul r8.yzw, r8.xxyz, cb6[5].xxyz
					  mul r2.w, r8.y, l(0.250000)
					  mul r3.w, cb6[0].z, l(0.500000)
					  mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
					  max r2.w, r2.w, r3.w
					  min r8.x, r5.w, r2.w
					  sample r9.xyzw, r8.xzwx, t12.xyzw, s1
					  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r10.xyzw, r10.xyzx, t12.xyzw, s1
					  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r8.xyzw, r8.xyzx, t12.xyzw, s1
					  mov r4.w, l(1.000000)
					  dp4 r9.x, r9.xyzw, r4.xyzw
					  dp4 r9.y, r10.xyzw, r4.xyzw
					  dp4 r9.z, r8.xyzw, r4.xyzw
					else 
					  mov r4.w, l(1.000000)
					  dp4 r9.x, cb2[39].xyzw, r4.xyzw
					  dp4 r9.y, cb2[40].xyzw, r4.xyzw
					  dp4 r9.z, cb2[41].xyzw, r4.xyzw
					endif 
					add r8.xyz, r9.xyzx, v5.xyzx
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r8.xyz, r8.xyzx
					mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r8.xyz, r8.xyzx
					mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					lt r2.w, l(0.000000), cb5[2].w
					if_nz r2.w
					  dp3 r2.w, r3.xyzx, r3.xyzx
					  rsq r2.w, r2.w
					  mul r9.xyz, r2.wwww, r3.xyzx
					  add r10.xyz, -r0.xyzx, cb5[0].xyzx
					  div r10.xyz, r10.xyzx, r9.xyzx
					  add r11.xyz, -r0.xyzx, cb5[1].xyzx
					  div r11.xyz, r11.xyzx, r9.xyzx
					  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
					  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
					  min r2.w, r10.y, r10.x
					  min r2.w, r10.z, r2.w
					  add r10.xyz, r0.xyzx, -cb5[2].xyzx
					  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
					else 
					  mov r9.xyz, r3.xyzx
					endif 
					mad r2.w, -r7.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r7.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r9.xyzw, r9.xyzx, t10.xyzw, s0, r2.w
					add r3.w, r9.w, l(-1.000000)
					mad r3.w, cb5[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb5[3].x
					mul r10.xyz, r9.xyzx, r3.wwww
					lt r4.w, cb5[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb5[6].w
					  if_nz r4.w
					    dp3 r4.w, r3.xyzx, r3.xyzx
					    rsq r4.w, r4.w
					    mul r11.xyz, r3.xyzx, r4.wwww
					    add r12.xyz, -r0.xyzx, cb5[4].xyzx
					    div r12.xyz, r12.xyzx, r11.xyzx
					    add r13.xyz, -r0.xyzx, cb5[5].xyzx
					    div r13.xyz, r13.xyzx, r11.xyzx
					    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
					    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
					    min r4.w, r12.y, r12.x
					    min r4.w, r12.z, r4.w
					    add r0.xyz, r0.xyzx, -cb5[6].xyzx
					    mad r3.xyz, r11.xyzx, r4.wwww, r0.xyzx
					  endif 
					  sample_l r11.xyzw, r3.xyzx, t11.xyzw, s0, r2.w
					  add r0.x, r11.w, l(-1.000000)
					  mad r0.x, cb5[7].w, r0.x, l(1.000000)
					  mul r0.x, r0.x, cb5[7].x
					  mul r0.xyz, r11.xyzx, r0.xxxx
					  mad r3.xyz, r3.wwww, r9.xyzx, -r0.xyzx
					  mad r10.xyz, cb5[1].wwww, r3.xyzx, r0.xyzx
					endif 
					mul r0.xyz, r1.wwww, r10.xyzx
					add r3.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r3.xyz, cb0[27].yyyy, r3.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r2.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r5.xyz, r2.wwww, r5.xyzx
					mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r4.xyzx, r2.xyzx
					dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
					dp3_sat r2.y, r4.xyzx, r1.xyzx
					dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
					mul r1.y, r1.x, r1.x
					dp2 r1.y, r1.yyyy, r7.yyyy
					add r1.y, r1.y, l(-0.500000)
					add r1.z, -r2.x, l(1.000000)
					mul r2.z, r1.z, r1.z
					mul r2.z, r2.z, r2.z
					mul r1.z, r1.z, r2.z
					mad r1.z, r1.y, r1.z, l(1.000000)
					add r2.z, -|r0.w|, l(1.000000)
					mul r3.w, r2.z, r2.z
					mul r3.w, r3.w, r3.w
					mul r2.z, r2.z, r3.w
					mad r1.y, r1.y, r2.z, l(1.000000)
					mul r1.y, r1.y, r1.z
					mul r1.y, r2.x, r1.y
					mul r1.z, r7.y, r7.y
					max r1.z, r1.z, l(0.002000)
					add r3.w, -r1.z, l(1.000000)
					mad r4.x, |r0.w|, r3.w, r1.z
					mad r3.w, r2.x, r3.w, r1.z
					mul r0.w, |r0.w|, r3.w
					mad r0.w, r2.x, r4.x, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r3.w, r1.z, r1.z
					mad r4.x, r2.y, r3.w, -r2.y
					mad r2.y, r4.x, r2.y, l(1.000000)
					mul r3.w, r3.w, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r3.w, r2.y
					mul r0.w, r0.w, r2.y
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.x, r0.w
					mul r1.z, r1.z, l(0.280000)
					mad r1.z, -r1.z, r7.y, l(1.000000)
					dp3 r2.x, r3.xyzx, r3.xyzx
					ne r2.x, r2.x, l(0.000000)
					and r2.x, r2.x, l(0x3f800000)
					mul r0.w, r0.w, r2.x
					add r2.x, -r2.w, l(1.000000)
					add_sat r2.x, r2.x, cb0[27].z
					mul r4.xyz, r1.yyyy, r7.xzwx
					mad r4.xyz, r8.xyzx, r1.wwww, r4.xyzx
					mul r7.xyz, r7.xzwx, r0.wwww
					add r0.w, -r1.x, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r0.xyzw, r0.xyzw, r1.zzzx
					add r1.xyw, -r3.xyxz, l(1.000000, 1.000000, 0.000000, 1.000000)
					mad r1.xyw, r1.xyxw, r0.wwww, r3.xyxz
					mul r1.xyw, r1.xyxw, r7.xyxz
					mad r1.xyw, r5.xyxz, r4.xyxz, r1.xyxw
					add r2.xyw, -r3.xyxz, r2.xxxx
					mad r2.xyz, r2.zzzz, r2.xywx, r3.xyzx
					mad r0.xyz, r0.xyzx, r2.xyzx, r1.xywx
					add o0.xyz, r6.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        5     NONE   float       
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[8], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_resource_texture3d (float,float,float,float) t11
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 14
					mov r0.x, v2.w
					mov r0.y, v3.w
					mov r0.z, v4.w
					add r1.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r1.xyzx
					mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r3.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					add r1.w, v3.w, -cb0[7].y
					mad r2.w, cb0[8].w, l(-2.000000), l(1.000000)
					mul r4.x, r2.w, cb0[9].x
					mad r1.w, r1.w, r2.w, -r4.x
					mad r4.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[9].yzyy, r4.xyxx
					add r4.xy, r4.xyxx, v1.xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s4
					mad r4.x, r2.w, cb0[9].x, -r4.x
					add r4.x, r1.w, -r4.x
					round_pi r4.y, r4.x
					add_sat r4.y, -r4.y, l(1.000000)
					sample r5.xyzw, r3.xyxx, t1.xyzw, s2
					mul r5.x, r5.w, r5.x
					mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r3.xyxx, cb0[4].xxxx
					dp2 r3.x, r5.xyxx, r5.xyxx
					min r3.x, r3.x, l(1.000000)
					add r3.x, -r3.x, l(1.000000)
					sqrt r5.z, r3.x
					sample r3.xyzw, r3.zwzz, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					add r3.xyz, -r5.xyzx, r3.xyzx
					mad r3.xyz, r4.yyyy, r3.xyzx, r5.xyzx
					mad r4.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r5.xyzw, r4.zwzz, t3.xyzw, s5
					mad r6.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mul r5.xyz, r5.xyzx, cb0[11].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s6
					mad r6.xyz, cb0[13].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r4.yyyy, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[15].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s7
					mad r3.w, r2.w, cb0[9].x, -r6.x
					add r3.w, r1.w, -r3.w
					add r3.w, r3.w, cb0[15].x
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.zw, v1.xxxy, cb0[24].xxxy, cb0[24].zzzw
					mad r6.zw, cb1[0].yyyy, cb0[23].xxxy, r6.zzzw
					sample r7.xyzw, r6.zwzz, t6.xyzw, s9
					add r5.w, -r7.x, l(0.500000)
					mul_sat r5.w, r5.w, l(3.000000)
					mul r7.xyz, r7.xxxx, cb0[22].xyzx
					mul r6.z, r5.w, r5.w
					mul r5.w, r5.w, r6.z
					mad r1.w, -r2.w, cb0[9].x, r1.w
					mad_sat r1.w, cb0[25].x, l(3.000000), r1.w
					mul r1.w, r1.w, r5.w
					mad r8.xyz, cb0[22].xyzx, r1.wwww, -r7.xyzx
					mad r7.xyz, cb0[21].xxxx, r8.xyzx, r7.xyzx
					sample r6.xyzw, r6.xyxx, t7.xyzw, s8
					mul r8.xyz, r6.xyzx, cb0[19].xyzx
					mad r6.xyz, -cb0[19].xyzx, r6.xyzx, r7.xyzx
					mad r6.xyz, r4.yyyy, r6.xyzx, r8.xyzx
					add r7.xy, -cb0[27].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					add r1.w, -|r4.x|, l(1.000000)
					add r1.w, -r7.x, r1.w
					mul_sat r1.w, r1.w, l(10.000000)
					mad r2.w, r1.w, l(-2.000000), l(3.000000)
					mul r1.w, r1.w, r1.w
					mad_sat r1.w, r2.w, r1.w, -r4.y
					ge r2.w, cb0[17].x, r3.w
					mad r6.xyz, cb0[26].xyzx, r1.wwww, r6.xyzx
					movc r6.xyz, r2.wwww, cb0[18].xyzx, r6.xyzx
					sample r4.xyzw, r4.zwzz, t8.xyzw, s10
					add r1.w, r4.x, l(-1.000000)
					mad r1.w, cb0[28].x, r1.w, l(1.000000)
					add r2.w, r3.w, -cb0[28].y
					lt r2.w, r2.w, l(0.000000)
					discard_nz r2.w
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb4[2].xyzx
					  mad r4.xyz, cb4[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb4[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb4[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, r0.xyzx
					  add r4.xyz, r4.xyzx, -cb4[6].xyzx
					  mul r4.yzw, r4.xxyz, cb4[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.w
					  sample r4.xyzw, r4.xzwx, t11.xyzw, s1
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					dp3 r4.x, v2.xyzx, r3.xyzx
					dp3 r4.y, v3.xyzx, r3.xyzx
					dp3 r4.z, v4.xyzx, r3.xyzx
					dp3 r3.x, r4.xyzx, r4.xyzx
					rsq r3.x, r3.x
					mul r3.xyz, r3.xxxx, r4.xyzx
					dp3 r3.w, -r2.xyzx, r3.xyzx
					add r3.w, r3.w, r3.w
					mad r4.xyz, r3.xyzx, -r3.wwww, -r2.xyzx
					mul r7.xzw, r2.wwww, cb0[2].xxyz
					lt r2.w, l(0.000000), cb3[2].w
					if_nz r2.w
					  dp3 r2.w, r4.xyzx, r4.xyzx
					  rsq r2.w, r2.w
					  mul r8.xyz, r2.wwww, r4.xyzx
					  add r9.xyz, -r0.xyzx, cb3[0].xyzx
					  div r9.xyz, r9.xyzx, r8.xyzx
					  add r10.xyz, -r0.xyzx, cb3[1].xyzx
					  div r10.xyz, r10.xyzx, r8.xyzx
					  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
					  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
					  min r2.w, r9.y, r9.x
					  min r2.w, r9.z, r2.w
					  add r9.xyz, r0.xyzx, -cb3[2].xyzx
					  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
					else 
					  mov r8.xyz, r4.xyzx
					endif 
					mad r2.w, -r7.y, l(0.700000), l(1.700000)
					mul r2.w, r2.w, r7.y
					mul r2.w, r2.w, l(6.000000)
					sample_l r8.xyzw, r8.xyzx, t9.xyzw, s0, r2.w
					add r3.w, r8.w, l(-1.000000)
					mad r3.w, cb3[3].w, r3.w, l(1.000000)
					mul r3.w, r3.w, cb3[3].x
					mul r9.xyz, r8.xyzx, r3.wwww
					lt r4.w, cb3[1].w, l(0.999990)
					if_nz r4.w
					  lt r4.w, l(0.000000), cb3[6].w
					  if_nz r4.w
					    dp3 r4.w, r4.xyzx, r4.xyzx
					    rsq r4.w, r4.w
					    mul r10.xyz, r4.wwww, r4.xyzx
					    add r11.xyz, -r0.xyzx, cb3[4].xyzx
					    div r11.xyz, r11.xyzx, r10.xyzx
					    add r12.xyz, -r0.xyzx, cb3[5].xyzx
					    div r12.xyz, r12.xyzx, r10.xyzx
					    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
					    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
					    min r4.w, r11.y, r11.x
					    min r4.w, r11.z, r4.w
					    add r0.xyz, r0.xyzx, -cb3[6].xyzx
					    mad r4.xyz, r10.xyzx, r4.wwww, r0.xyzx
					  endif 
					  sample_l r4.xyzw, r4.xyzx, t10.xyzw, s0, r2.w
					  add r0.x, r4.w, l(-1.000000)
					  mad r0.x, cb3[7].w, r0.x, l(1.000000)
					  mul r0.x, r0.x, cb3[7].x
					  mul r0.xyz, r4.xyzx, r0.xxxx
					  mad r4.xyz, r3.wwww, r8.xyzx, -r0.xyzx
					  mad r9.xyz, cb3[1].wwww, r4.xyzx, r0.xyzx
					endif 
					mul r0.xyz, r1.wwww, r9.xyzx
					add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r4.xyz, cb0[27].yyyy, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r3.xyzx, r2.xyzx
					dp3_sat r2.x, r3.xyzx, cb2[0].xyzx
					dp3_sat r2.y, r3.xyzx, r1.xyzx
					dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
					mul r1.y, r1.x, r1.x
					dp2 r1.y, r1.yyyy, r7.yyyy
					add r1.y, r1.y, l(-0.500000)
					add r1.z, -r2.x, l(1.000000)
					mul r2.z, r1.z, r1.z
					mul r2.z, r2.z, r2.z
					mul r1.z, r1.z, r2.z
					mad r1.z, r1.y, r1.z, l(1.000000)
					add r2.z, -|r0.w|, l(1.000000)
					mul r2.w, r2.z, r2.z
					mul r2.w, r2.w, r2.w
					mul r2.z, r2.z, r2.w
					mad r1.y, r1.y, r2.z, l(1.000000)
					mul r1.y, r1.y, r1.z
					mul r1.y, r2.x, r1.y
					mul r1.z, r7.y, r7.y
					max r1.z, r1.z, l(0.002000)
					add r2.w, -r1.z, l(1.000000)
					mad r3.x, |r0.w|, r2.w, r1.z
					mad r2.w, r2.x, r2.w, r1.z
					mul r0.w, |r0.w|, r2.w
					mad r0.w, r2.x, r3.x, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r2.w, r1.z, r1.z
					mad r3.x, r2.y, r2.w, -r2.y
					mad r2.y, r3.x, r2.y, l(1.000000)
					mul r2.w, r2.w, l(0.318310)
					mad r2.y, r2.y, r2.y, l(0.000000)
					div r2.y, r2.w, r2.y
					mul r0.w, r0.w, r2.y
					mul r0.w, r0.w, l(3.141593)
					max r0.w, r0.w, l(0.000100)
					sqrt r0.w, r0.w
					mul r0.w, r2.x, r0.w
					mul r1.z, r1.z, l(0.280000)
					mad r1.z, -r1.z, r7.y, l(1.000000)
					dp3 r2.x, r4.xyzx, r4.xyzx
					ne r2.x, r2.x, l(0.000000)
					and r2.x, r2.x, l(0x3f800000)
					mul r0.w, r0.w, r2.x
					add r1.w, -r1.w, l(1.000000)
					add_sat r1.w, r1.w, cb0[27].z
					mul r2.xyw, r1.yyyy, r7.xzxw
					mul r3.xyz, r7.xzwx, r0.wwww
					add r0.w, -r1.x, l(1.000000)
					mul r1.x, r0.w, r0.w
					mul r1.x, r1.x, r1.x
					mul r0.xyzw, r0.xyzw, r1.zzzx
					add r7.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r7.xyz, r7.xyzx, r0.wwww, r4.xyzx
					mul r3.xyz, r3.xyzx, r7.xyzx
					mad r2.xyw, r5.xyxz, r2.xyxw, r3.xyxz
					add r1.xyz, -r4.xyzx, r1.wwww
					mad r1.xyz, r2.zzzz, r1.xyzx, r4.xyzx
					mad r0.xyz, r0.xyzx, r1.xyzx, r2.xywx
					add o0.xyz, r6.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD"
			Tags { "IGNOREPROJECTOR" = "true" "IsEmissive" = "true" "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Geometry+0" "RenderType" = "TransparentCutout" "SHADOWSUPPORT" = "true" }
			Blend One One, One One
			ZWrite Off
			GpuProgramID 68064
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyz, r0.yyyy, cb0[5].xyzx
					mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
					mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					dp3 r0.y, v2.xyzx, cb1[4].xyzx
					dp3 r0.z, v2.xyzx, cb1[5].xyzx
					dp3 r0.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, v1.yyyy, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
					mul r0.w, v1.w, cb1[9].w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o2.y, r2.x
					mov o2.x, r1.z
					mov o2.z, r0.y
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.z, r0.z
					mov o4.z, r0.x
					mov o3.y, r2.y
					mov o4.y, r2.z
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyzw, r0.yyyy, cb0[5].xyzw
					mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
					mad o6.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyzw, r0.yyyy, cb0[5].xyzw
					mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
					mad o6.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyz, r0.yyyy, cb0[5].xyzx
					mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
					mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyz, r0.yyyy, cb0[5].xyzx
					mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
					mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xy, r0.yyyy, cb0[5].xyxx
					mad r0.xy, cb0[4].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[6].xyxx, r0.zzzz, r0.xyxx
					mad o6.xy, cb0[7].xyxx, r0.wwww, r0.xyxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xy, r0.yyyy, cb0[5].xyxx
					mad r0.xy, cb0[4].xyxx, r0.xxxx, r1.xyxx
					mad r0.xy, cb0[6].xyxx, r0.zzzz, r0.xyxx
					mad o6.xy, cb0[7].xyxx, r0.wwww, r0.xyxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyzw, r0.yyyy, cb0[5].xyzw
					mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
					mad o6.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyzw, r0.yyyy, cb0[5].xyzw
					mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
					mad o6.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[40], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[38].xyxx, cb0[38].zwzz
					mad o1.zw, v4.xxxy, cb0[39].xxxy, cb0[39].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyzw, r0.yyyy, cb0[10].xyzw
					mad r1.xyzw, cb0[9].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.zzzz, r1.xyzw
					mad o6.xyzw, cb0[12].xyzw, r0.wwww, r1.xyzw
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[40], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[38].xyxx, cb0[38].zwzz
					mad o1.zw, v4.xxxy, cb0[39].xxxy, cb0[39].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyzw, r0.yyyy, cb0[10].xyzw
					mad r1.xyzw, cb0[9].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb0[11].xyzw, r0.zzzz, r1.xyzw
					mad o6.xyzw, cb0[12].xyzw, r0.wwww, r1.xyzw
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o6.zw, r0.zzzw
					add o6.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					dp3 r1.y, v2.xyzx, cb2[4].xyzx
					dp3 r1.z, v2.xyzx, cb2[5].xyzx
					dp3 r1.x, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb2[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o6.zw, r0.zzzw
					add o6.xy, r1.zzzz, r1.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r2.w, v1.w, cb2[9].w
					mul r4.xyz, r2.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.y, r4.y
					mov o4.y, r4.z
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xy, r0.yyyy, cb0[5].xyxx
					mad r0.xy, cb0[4].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[6].xyxx, r0.zzzz, r0.xyxx
					mad o6.xy, cb0[7].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o7.zw, r1.zzzw
					add o7.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r2.y, v2.xyzx, cb2[4].xyzx
					dp3 r2.z, v2.xyzx, cb2[5].xyzx
					dp3 r2.x, v2.xyzx, cb2[6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, v1.yyyy, cb2[1].yzxy
					mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r2.w, r3.xyzx, r3.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r2.w, v1.w, cb2[9].w
					mul r4.xyz, r2.wwww, r4.xyzx
					mov o2.y, r4.x
					mov o2.x, r3.z
					mov o2.z, r2.y
					mov o3.x, r3.x
					mov o4.x, r3.y
					mov o3.z, r2.z
					mov o4.z, r2.x
					mov o3.y, r4.y
					mov o4.y, r4.z
					mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
					mul r2.xy, r0.yyyy, cb0[5].xyxx
					mad r0.xy, cb0[4].xyxx, r0.xxxx, r2.xyxx
					mad r0.xy, cb0[6].xyxx, r0.zzzz, r0.xyxx
					mad o6.xy, cb0[7].xyxx, r0.wwww, r0.xyxx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o7.zw, r1.zzzw
					add o7.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyz, r0.yyyy, cb0[5].xyzx
					mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
					mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyz, r0.yyyy, cb0[5].xyzx
					mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
					mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyz, r0.yyyy, cb0[5].xyzx
					mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
					mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyz, r0.yyyy, cb0[5].xyzx
					mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
					mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyz, r0.yyyy, cb0[5].xyzx
					mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
					mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyz, r0.yyyy, cb0[5].xyzx
					mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
					mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyz, r0.yyyy, cb0[5].xyzx
					mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
					mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyz, r0.yyyy, cb0[5].xyzx
					mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
					mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[33].xyxx, cb0[33].zwzz
					mad o1.zw, v4.xxxy, cb0[34].xxxy, cb0[34].zzzw
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r1.w, v1.w, cb1[9].w
					mul r3.xyz, r1.wwww, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.y, r3.y
					mov o4.y, r3.z
					mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
					mul r1.xyz, r0.yyyy, cb0[5].xyzx
					mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
					mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mad r3.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r3.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					mad r1.w, cb0[12].w, l(-2.000000), l(1.000000)
					mad r2.w, -r1.w, cb0[13].x, r1.w
					mad r4.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[13].yzyy, r4.xyxx
					add r4.xy, r4.xyxx, v1.xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s4
					mad r4.x, r1.w, cb0[13].x, -r4.x
					add r4.x, r2.w, -r4.x
					round_pi r4.x, r4.x
					add_sat r4.x, -r4.x, l(1.000000)
					sample r5.xyzw, r3.xyxx, t1.xyzw, s2
					mul r5.x, r5.w, r5.x
					mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r3.xyxx, cb0[8].xxxx
					dp2 r3.x, r5.xyxx, r5.xyxx
					min r3.x, r3.x, l(1.000000)
					add r3.x, -r3.x, l(1.000000)
					sqrt r5.z, r3.x
					sample r3.xyzw, r3.zwzz, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					add r3.xyz, -r5.xyzx, r3.xyzx
					mad r3.xyz, r4.xxxx, r3.xyzx, r5.xyzx
					mad r4.yz, v1.xxyx, cb0[16].xxyx, cb0[16].zzwz
					sample r5.xyzw, r4.yzyy, t3.xyzw, s5
					mad r4.yz, v1.xxyx, cb0[18].xxyx, cb0[18].zzwz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r4.yzyy, t4.xyzw, s6
					mad r4.yzw, cb0[17].xxyz, r6.xxyz, -r5.xxyz
					mad r4.xyz, r4.xxxx, r4.yzwy, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[19].yzyy, r5.xyxx
					sample r5.xyzw, r5.xyxx, t5.xyzw, s7
					mad r1.w, r1.w, cb0[13].x, -r5.x
					add r1.w, -r1.w, r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r5.xyz, v5.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb3[2].xyzx
					  mad r6.xyz, cb3[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb3[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb3[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v5.xyzx
					  add r6.xyz, r6.xyzx, -cb3[6].xyzx
					  mul r6.yzw, r6.xxyz, cb3[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t7.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					dp3 r2.w, r5.xyzx, r5.xyzx
					sample r5.xyzw, r2.wwww, t6.xyzw, s1
					mul r1.w, r1.w, r5.x
					dp3 r5.x, v2.xyzx, r3.xyzx
					dp3 r5.y, v3.xyzx, r3.xyzx
					dp3 r5.z, v4.xyzx, r3.xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r4.xyz, r1.wwww, r4.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r2.xyzx
					dp3_sat r2.x, r3.xyzx, r1.xyzx
					dp3_sat r2.y, r3.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.x, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.x, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.x, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.y, r0.z, -r2.y
					mad r1.x, r1.x, r2.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.xxxx, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r5.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r2.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					add r1.w, v5.y, -cb0[7].y
					mad r3.x, cb0[8].w, l(-2.000000), l(1.000000)
					mul r3.y, r3.x, cb0[9].x
					mad r1.w, r1.w, r3.x, -r3.y
					mad r3.yz, v1.xxyx, cb0[10].xxyx, cb0[10].zzwz
					mad r3.yz, cb1[0].yyyy, cb0[9].yyzy, r3.yyzy
					add r3.yz, r3.yyzy, v1.xxyx
					sample r4.xyzw, r3.yzyy, t0.xyzw, s3
					mad r3.y, r3.x, cb0[9].x, -r4.x
					add r3.y, r1.w, -r3.y
					round_pi r3.y, r3.y
					add_sat r3.y, -r3.y, l(1.000000)
					sample r4.xyzw, r2.xyxx, t1.xyzw, s1
					mul r4.x, r4.w, r4.x
					mad r2.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r2.xyxx, cb0[4].xxxx
					dp2 r2.x, r4.xyxx, r4.xyxx
					min r2.x, r2.x, l(1.000000)
					add r2.x, -r2.x, l(1.000000)
					sqrt r4.z, r2.x
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r2.w, r2.xyxx, r2.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r2.z, r2.w
					add r2.xyz, -r4.xyzx, r2.xyzx
					mad r2.xyz, r3.yyyy, r2.xyzx, r4.xyzx
					mad r3.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r4.xyzw, r3.zwzz, t3.xyzw, s4
					mad r3.zw, v1.xxxy, cb0[14].xxxy, cb0[14].zzzw
					mul r4.xyz, r4.xyzx, cb0[11].xyzx
					sample r5.xyzw, r3.zwzz, t4.xyzw, s5
					mad r5.xyz, cb0[13].xyzx, r5.xyzx, -r4.xyzx
					mad r3.yzw, r3.yyyy, r5.xxyz, r4.xxyz
					mad r4.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[15].yzyy, r4.xyxx
					sample r4.xyzw, r4.xyxx, t5.xyzw, s6
					mad r2.w, r3.x, cb0[9].x, -r4.x
					add r1.w, r1.w, -r2.w
					add r1.w, r1.w, cb0[15].x
					add r1.w, r1.w, -cb0[28].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v5.yyyy, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v5.xxxx, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v5.xyzx
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
					dp3 r4.x, v2.xyzx, r2.xyzx
					dp3 r4.y, v3.xyzx, r2.xyzx
					dp3 r4.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r4.xyzx, r4.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r4.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r5.xyz, r3.yzwy, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r5.xyz, cb0[27].yyyy, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r3.xyz, r1.wwww, r3.yzwy
					add r1.w, -cb0[27].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r1.xyzx
					dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r2.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.x, r1.z, r1.z
					mul r2.x, r2.x, r2.x
					mul r1.z, r1.z, r2.x
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r1.xxxx, r0.yyzy
					dp3 r0.w, r5.xyzx, r5.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r2.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					mad r1.w, cb0[8].w, l(-2.000000), l(1.000000)
					mad r3.x, -r1.w, cb0[9].x, r1.w
					mad r3.yz, v1.xxyx, cb0[10].xxyx, cb0[10].zzwz
					mad r3.yz, cb1[0].yyyy, cb0[9].yyzy, r3.yyzy
					add r3.yz, r3.yyzy, v1.xxyx
					sample r4.xyzw, r3.yzyy, t0.xyzw, s3
					mad r3.y, r1.w, cb0[9].x, -r4.x
					add r3.y, -r3.y, r3.x
					round_pi r3.y, r3.y
					add_sat r3.y, -r3.y, l(1.000000)
					sample r4.xyzw, r2.xyxx, t1.xyzw, s1
					mul r4.x, r4.w, r4.x
					mad r2.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r2.xyxx, cb0[4].xxxx
					dp2 r2.x, r4.xyxx, r4.xyxx
					min r2.x, r2.x, l(1.000000)
					add r2.x, -r2.x, l(1.000000)
					sqrt r4.z, r2.x
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r2.w, r2.xyxx, r2.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r2.z, r2.w
					add r2.xyz, -r4.xyzx, r2.xyzx
					mad r2.xyz, r3.yyyy, r2.xyzx, r4.xyzx
					mad r3.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r4.xyzw, r3.zwzz, t3.xyzw, s4
					mad r3.zw, v1.xxxy, cb0[14].xxxy, cb0[14].zzzw
					mul r4.xyz, r4.xyzx, cb0[11].xyzx
					sample r5.xyzw, r3.zwzz, t4.xyzw, s5
					mad r5.xyz, cb0[13].xyzx, r5.xyzx, -r4.xyzx
					mad r3.yzw, r3.yyyy, r5.xxyz, r4.xxyz
					mad r4.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[15].yzyy, r4.xyxx
					sample r4.xyzw, r4.xyxx, t5.xyzw, s6
					mad r1.w, r1.w, cb0[9].x, -r4.x
					add r1.w, -r1.w, r3.x
					add r1.w, r1.w, cb0[15].x
					add r1.w, r1.w, -cb0[28].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v5.yyyy, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v5.xxxx, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v5.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v5.xyzx
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t6.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
					dp3 r4.x, v2.xyzx, r2.xyzx
					dp3 r4.y, v3.xyzx, r2.xyzx
					dp3 r4.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r4.xyzx, r4.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r4.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r5.xyz, r3.yzwy, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r5.xyz, cb0[27].yyyy, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r3.xyz, r1.wwww, r3.yzwy
					add r1.w, -cb0[27].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r1.xyzx
					dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r2.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.x, r1.z, r1.z
					mul r2.x, r2.x, r2.x
					mul r1.z, r1.z, r2.x
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r1.xxxx, r0.yyzy
					dp3 r0.w, r5.xyzx, r5.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mad r3.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r3.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					add r1.w, v5.y, -cb0[11].y
					mad r2.w, cb0[12].w, l(-2.000000), l(1.000000)
					mul r4.x, r2.w, cb0[13].x
					mad r1.w, r1.w, r2.w, -r4.x
					mad r4.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[13].yzyy, r4.xyxx
					add r4.xy, r4.xyxx, v1.xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s5
					mad r4.x, r2.w, cb0[13].x, -r4.x
					add r4.x, r1.w, -r4.x
					round_pi r4.x, r4.x
					add_sat r4.x, -r4.x, l(1.000000)
					sample r5.xyzw, r3.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r3.xyxx, cb0[8].xxxx
					dp2 r3.x, r5.xyxx, r5.xyxx
					min r3.x, r3.x, l(1.000000)
					add r3.x, -r3.x, l(1.000000)
					sqrt r5.z, r3.x
					sample r3.xyzw, r3.zwzz, t2.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					add r3.xyz, -r5.xyzx, r3.xyzx
					mad r3.xyz, r4.xxxx, r3.xyzx, r5.xyzx
					mad r4.yz, v1.xxyx, cb0[16].xxyx, cb0[16].zzwz
					sample r5.xyzw, r4.yzyy, t3.xyzw, s6
					mad r4.yz, v1.xxyx, cb0[18].xxyx, cb0[18].zzwz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r4.yzyy, t4.xyzw, s7
					mad r4.yzw, cb0[17].xxyz, r6.xxyz, -r5.xxyz
					mad r4.xyz, r4.xxxx, r4.yzwy, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[19].yzyy, r5.xyxx
					sample r5.xyzw, r5.xyxx, t5.xyzw, s8
					mad r2.w, r2.w, cb0[13].x, -r5.x
					add r1.w, r1.w, -r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r5.xyzw, v5.yyyy, cb0[5].xyzw
					mad r5.xyzw, cb0[4].xyzw, v5.xxxx, r5.xyzw
					mad r5.xyzw, cb0[6].xyzw, v5.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb0[7].xyzw
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb3[2].xyzx
					  mad r6.xyz, cb3[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb3[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb3[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v5.xyzx
					  add r6.xyz, r6.xyzx, -cb3[6].xyzx
					  mul r6.yzw, r6.xxyz, cb3[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t8.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					lt r2.w, l(0.000000), r5.z
					and r2.w, r2.w, l(0x3f800000)
					div r6.xy, r5.xyxx, r5.wwww
					add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r6.xyzw, r6.xyxx, t6.xyzw, s1
					mul r2.w, r2.w, r6.w
					dp3 r3.w, r5.xyzx, r5.xyzx
					sample r5.xyzw, r3.wwww, t7.xyzw, s2
					mul r2.w, r2.w, r5.x
					mul r1.w, r1.w, r2.w
					dp3 r5.x, v2.xyzx, r3.xyzx
					dp3 r5.y, v3.xyzx, r3.xyzx
					dp3 r5.z, v4.xyzx, r3.xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r4.xyz, r1.wwww, r4.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r2.xyzx
					dp3_sat r2.x, r3.xyzx, r1.xyzx
					dp3_sat r2.y, r3.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.x, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.x, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.x, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.y, r0.z, -r2.y
					mad r1.x, r1.x, r2.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.xxxx, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r5.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mad r3.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r3.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					mad r1.w, cb0[12].w, l(-2.000000), l(1.000000)
					mad r2.w, -r1.w, cb0[13].x, r1.w
					mad r4.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[13].yzyy, r4.xyxx
					add r4.xy, r4.xyxx, v1.xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s5
					mad r4.x, r1.w, cb0[13].x, -r4.x
					add r4.x, r2.w, -r4.x
					round_pi r4.x, r4.x
					add_sat r4.x, -r4.x, l(1.000000)
					sample r5.xyzw, r3.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r3.xyxx, cb0[8].xxxx
					dp2 r3.x, r5.xyxx, r5.xyxx
					min r3.x, r3.x, l(1.000000)
					add r3.x, -r3.x, l(1.000000)
					sqrt r5.z, r3.x
					sample r3.xyzw, r3.zwzz, t2.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					add r3.xyz, -r5.xyzx, r3.xyzx
					mad r3.xyz, r4.xxxx, r3.xyzx, r5.xyzx
					mad r4.yz, v1.xxyx, cb0[16].xxyx, cb0[16].zzwz
					sample r5.xyzw, r4.yzyy, t3.xyzw, s6
					mad r4.yz, v1.xxyx, cb0[18].xxyx, cb0[18].zzwz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r4.yzyy, t4.xyzw, s7
					mad r4.yzw, cb0[17].xxyz, r6.xxyz, -r5.xxyz
					mad r4.xyz, r4.xxxx, r4.yzwy, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[19].yzyy, r5.xyxx
					sample r5.xyzw, r5.xyxx, t5.xyzw, s8
					mad r1.w, r1.w, cb0[13].x, -r5.x
					add r1.w, -r1.w, r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r5.xyzw, v5.yyyy, cb0[5].xyzw
					mad r5.xyzw, cb0[4].xyzw, v5.xxxx, r5.xyzw
					mad r5.xyzw, cb0[6].xyzw, v5.zzzz, r5.xyzw
					add r5.xyzw, r5.xyzw, cb0[7].xyzw
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb3[2].xyzx
					  mad r6.xyz, cb3[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb3[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb3[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v5.xyzx
					  add r6.xyz, r6.xyzx, -cb3[6].xyzx
					  mul r6.yzw, r6.xxyz, cb3[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t8.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					lt r2.w, l(0.000000), r5.z
					and r2.w, r2.w, l(0x3f800000)
					div r6.xy, r5.xyxx, r5.wwww
					add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r6.xyzw, r6.xyxx, t6.xyzw, s1
					mul r2.w, r2.w, r6.w
					dp3 r3.w, r5.xyzx, r5.xyzx
					sample r5.xyzw, r3.wwww, t7.xyzw, s2
					mul r2.w, r2.w, r5.x
					mul r1.w, r1.w, r2.w
					dp3 r5.x, v2.xyzx, r3.xyzx
					dp3 r5.y, v3.xyzx, r3.xyzx
					dp3 r5.z, v4.xyzx, r3.xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r4.xyz, r1.wwww, r4.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r2.xyzx
					dp3_sat r2.x, r3.xyzx, r1.xyzx
					dp3_sat r2.y, r3.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.x, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.x, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.x, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.y, r0.z, -r2.y
					mad r1.x, r1.x, r2.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.xxxx, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r5.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mad r3.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r3.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					add r1.w, v5.y, -cb0[11].y
					mad r2.w, cb0[12].w, l(-2.000000), l(1.000000)
					mul r4.x, r2.w, cb0[13].x
					mad r1.w, r1.w, r2.w, -r4.x
					mad r4.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[13].yzyy, r4.xyxx
					add r4.xy, r4.xyxx, v1.xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s5
					mad r4.x, r2.w, cb0[13].x, -r4.x
					add r4.x, r1.w, -r4.x
					round_pi r4.x, r4.x
					add_sat r4.x, -r4.x, l(1.000000)
					sample r5.xyzw, r3.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r3.xyxx, cb0[8].xxxx
					dp2 r3.x, r5.xyxx, r5.xyxx
					min r3.x, r3.x, l(1.000000)
					add r3.x, -r3.x, l(1.000000)
					sqrt r5.z, r3.x
					sample r3.xyzw, r3.zwzz, t2.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					add r3.xyz, -r5.xyzx, r3.xyzx
					mad r3.xyz, r4.xxxx, r3.xyzx, r5.xyzx
					mad r4.yz, v1.xxyx, cb0[16].xxyx, cb0[16].zzwz
					sample r5.xyzw, r4.yzyy, t3.xyzw, s6
					mad r4.yz, v1.xxyx, cb0[18].xxyx, cb0[18].zzwz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r4.yzyy, t4.xyzw, s7
					mad r4.yzw, cb0[17].xxyz, r6.xxyz, -r5.xxyz
					mad r4.xyz, r4.xxxx, r4.yzwy, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[19].yzyy, r5.xyxx
					sample r5.xyzw, r5.xyxx, t5.xyzw, s8
					mad r2.w, r2.w, cb0[13].x, -r5.x
					add r1.w, r1.w, -r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r5.xyz, v5.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb3[2].xyzx
					  mad r6.xyz, cb3[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb3[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb3[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v5.xyzx
					  add r6.xyz, r6.xyzx, -cb3[6].xyzx
					  mul r6.yzw, r6.xxyz, cb3[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t8.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					dp3 r2.w, r5.xyzx, r5.xyzx
					sample r6.xyzw, r2.wwww, t6.xyzw, s2
					sample r5.xyzw, r5.xyzx, t7.xyzw, s1
					mul r2.w, r5.w, r6.x
					mul r1.w, r1.w, r2.w
					dp3 r5.x, v2.xyzx, r3.xyzx
					dp3 r5.y, v3.xyzx, r3.xyzx
					dp3 r5.z, v4.xyzx, r3.xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r4.xyz, r1.wwww, r4.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r2.xyzx
					dp3_sat r2.x, r3.xyzx, r1.xyzx
					dp3_sat r2.y, r3.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.x, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.x, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.x, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.y, r0.z, -r2.y
					mad r1.x, r1.x, r2.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.xxxx, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r5.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mad r3.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r3.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					mad r1.w, cb0[12].w, l(-2.000000), l(1.000000)
					mad r2.w, -r1.w, cb0[13].x, r1.w
					mad r4.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[13].yzyy, r4.xyxx
					add r4.xy, r4.xyxx, v1.xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s5
					mad r4.x, r1.w, cb0[13].x, -r4.x
					add r4.x, r2.w, -r4.x
					round_pi r4.x, r4.x
					add_sat r4.x, -r4.x, l(1.000000)
					sample r5.xyzw, r3.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r3.xyxx, cb0[8].xxxx
					dp2 r3.x, r5.xyxx, r5.xyxx
					min r3.x, r3.x, l(1.000000)
					add r3.x, -r3.x, l(1.000000)
					sqrt r5.z, r3.x
					sample r3.xyzw, r3.zwzz, t2.xyzw, s4
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					add r3.xyz, -r5.xyzx, r3.xyzx
					mad r3.xyz, r4.xxxx, r3.xyzx, r5.xyzx
					mad r4.yz, v1.xxyx, cb0[16].xxyx, cb0[16].zzwz
					sample r5.xyzw, r4.yzyy, t3.xyzw, s6
					mad r4.yz, v1.xxyx, cb0[18].xxyx, cb0[18].zzwz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r4.yzyy, t4.xyzw, s7
					mad r4.yzw, cb0[17].xxyz, r6.xxyz, -r5.xxyz
					mad r4.xyz, r4.xxxx, r4.yzwy, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[19].yzyy, r5.xyxx
					sample r5.xyzw, r5.xyxx, t5.xyzw, s8
					mad r1.w, r1.w, cb0[13].x, -r5.x
					add r1.w, -r1.w, r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r5.xyz, v5.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb3[2].xyzx
					  mad r6.xyz, cb3[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb3[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb3[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v5.xyzx
					  add r6.xyz, r6.xyzx, -cb3[6].xyzx
					  mul r6.yzw, r6.xxyz, cb3[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t8.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					dp3 r2.w, r5.xyzx, r5.xyzx
					sample r6.xyzw, r2.wwww, t6.xyzw, s2
					sample r5.xyzw, r5.xyzx, t7.xyzw, s1
					mul r2.w, r5.w, r6.x
					mul r1.w, r1.w, r2.w
					dp3 r5.x, v2.xyzx, r3.xyzx
					dp3 r5.y, v3.xyzx, r3.xyzx
					dp3 r5.z, v4.xyzx, r3.xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r4.xyz, r1.wwww, r4.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r2.xyzx
					dp3_sat r2.x, r3.xyzx, r1.xyzx
					dp3_sat r2.y, r3.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.x, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.x, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.x, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.y, r0.z, -r2.y
					mad r1.x, r1.x, r2.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.xxxx, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r5.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r2.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					add r1.w, v5.y, -cb0[11].y
					mad r3.x, cb0[12].w, l(-2.000000), l(1.000000)
					mul r3.y, r3.x, cb0[13].x
					mad r1.w, r1.w, r3.x, -r3.y
					mad r3.yz, v1.xxyx, cb0[14].xxyx, cb0[14].zzwz
					mad r3.yz, cb1[0].yyyy, cb0[13].yyzy, r3.yyzy
					add r3.yz, r3.yyzy, v1.xxyx
					sample r4.xyzw, r3.yzyy, t0.xyzw, s4
					mad r3.y, r3.x, cb0[13].x, -r4.x
					add r3.y, r1.w, -r3.y
					round_pi r3.y, r3.y
					add_sat r3.y, -r3.y, l(1.000000)
					sample r4.xyzw, r2.xyxx, t1.xyzw, s2
					mul r4.x, r4.w, r4.x
					mad r2.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r2.xyxx, cb0[8].xxxx
					dp2 r2.x, r4.xyxx, r4.xyxx
					min r2.x, r2.x, l(1.000000)
					add r2.x, -r2.x, l(1.000000)
					sqrt r4.z, r2.x
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r2.w, r2.xyxx, r2.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r2.z, r2.w
					add r2.xyz, -r4.xyzx, r2.xyzx
					mad r2.xyz, r3.yyyy, r2.xyzx, r4.xyzx
					mad r3.zw, v1.xxxy, cb0[16].xxxy, cb0[16].zzzw
					sample r4.xyzw, r3.zwzz, t3.xyzw, s5
					mad r3.zw, v1.xxxy, cb0[18].xxxy, cb0[18].zzzw
					mul r4.xyz, r4.xyzx, cb0[15].xyzx
					sample r5.xyzw, r3.zwzz, t4.xyzw, s6
					mad r5.xyz, cb0[17].xyzx, r5.xyzx, -r4.xyzx
					mad r3.yzw, r3.yyyy, r5.xxyz, r4.xxyz
					mad r4.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[19].yzyy, r4.xyxx
					sample r4.xyzw, r4.xyxx, t5.xyzw, s7
					mad r2.w, r3.x, cb0[13].x, -r4.x
					add r1.w, r1.w, -r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r4.xy, v5.yyyy, cb0[5].xyxx
					mad r4.xy, cb0[4].xyxx, v5.xxxx, r4.xyxx
					mad r4.xy, cb0[6].xyxx, v5.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[7].xyxx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t7.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					sample r4.xyzw, r4.xyxx, t6.xyzw, s1
					mul r1.w, r1.w, r4.w
					dp3 r4.x, v2.xyzx, r2.xyzx
					dp3 r4.y, v3.xyzx, r2.xyzx
					dp3 r4.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r4.xyzx, r4.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r4.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r5.xyz, r3.yzwy, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r5.xyz, cb0[31].yyyy, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r3.xyz, r1.wwww, r3.yzwy
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r1.xyzx
					dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r2.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.x, r1.z, r1.z
					mul r2.x, r2.x, r2.x
					mul r1.z, r1.z, r2.x
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r1.xxxx, r0.yyzy
					dp3 r0.w, r5.xyzx, r5.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r2.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					mad r1.w, cb0[12].w, l(-2.000000), l(1.000000)
					mad r3.x, -r1.w, cb0[13].x, r1.w
					mad r3.yz, v1.xxyx, cb0[14].xxyx, cb0[14].zzwz
					mad r3.yz, cb1[0].yyyy, cb0[13].yyzy, r3.yyzy
					add r3.yz, r3.yyzy, v1.xxyx
					sample r4.xyzw, r3.yzyy, t0.xyzw, s4
					mad r3.y, r1.w, cb0[13].x, -r4.x
					add r3.y, -r3.y, r3.x
					round_pi r3.y, r3.y
					add_sat r3.y, -r3.y, l(1.000000)
					sample r4.xyzw, r2.xyxx, t1.xyzw, s2
					mul r4.x, r4.w, r4.x
					mad r2.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r2.xyxx, cb0[8].xxxx
					dp2 r2.x, r4.xyxx, r4.xyxx
					min r2.x, r2.x, l(1.000000)
					add r2.x, -r2.x, l(1.000000)
					sqrt r4.z, r2.x
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r2.w, r2.xyxx, r2.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r2.z, r2.w
					add r2.xyz, -r4.xyzx, r2.xyzx
					mad r2.xyz, r3.yyyy, r2.xyzx, r4.xyzx
					mad r3.zw, v1.xxxy, cb0[16].xxxy, cb0[16].zzzw
					sample r4.xyzw, r3.zwzz, t3.xyzw, s5
					mad r3.zw, v1.xxxy, cb0[18].xxxy, cb0[18].zzzw
					mul r4.xyz, r4.xyzx, cb0[15].xyzx
					sample r5.xyzw, r3.zwzz, t4.xyzw, s6
					mad r5.xyz, cb0[17].xyzx, r5.xyzx, -r4.xyzx
					mad r3.yzw, r3.yyyy, r5.xxyz, r4.xxyz
					mad r4.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[19].yzyy, r4.xyxx
					sample r4.xyzw, r4.xyxx, t5.xyzw, s7
					mad r1.w, r1.w, cb0[13].x, -r4.x
					add r1.w, -r1.w, r3.x
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r4.xy, v5.yyyy, cb0[5].xyxx
					mad r4.xy, cb0[4].xyxx, v5.xxxx, r4.xyxx
					mad r4.xy, cb0[6].xyxx, v5.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[7].xyxx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r1.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r1.w, r5.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r1.w, r2.w
					  sample r5.xyzw, r5.xzwx, t7.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
					sample r4.xyzw, r4.xyxx, t6.xyzw, s1
					mul r1.w, r1.w, r4.w
					dp3 r4.x, v2.xyzx, r2.xyzx
					dp3 r4.y, v3.xyzx, r2.xyzx
					dp3 r4.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r4.xyzx, r4.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r4.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r5.xyz, r3.yzwy, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r5.xyz, cb0[31].yyyy, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r3.xyz, r1.wwww, r3.yzwy
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r1.xyzx
					dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r2.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.x, r1.z, r1.z
					mul r2.x, r2.x, r2.x
					mul r1.z, r1.z, r2.x
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r1.xxxx, r0.yyzy
					dp3 r0.w, r5.xyzx, r5.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r4.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					add r1.w, v5.y, -cb0[11].y
					mad r2.w, cb0[12].w, l(-2.000000), l(1.000000)
					mul r3.w, r2.w, cb0[13].x
					mad r1.w, r1.w, r2.w, -r3.w
					mad r5.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[13].yzyy, r5.xyxx
					add r5.xy, r5.xyxx, v1.xyxx
					sample r5.xyzw, r5.xyxx, t0.xyzw, s6
					mad r3.w, r2.w, cb0[13].x, -r5.x
					add r3.w, r1.w, -r3.w
					round_pi r3.w, r3.w
					add_sat r3.w, -r3.w, l(1.000000)
					sample r5.xyzw, r4.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r4.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[8].xxxx
					dp2 r4.x, r5.xyxx, r5.xyxx
					min r4.x, r4.x, l(1.000000)
					add r4.x, -r4.x, l(1.000000)
					sqrt r5.z, r4.x
					sample r4.xyzw, r4.zwzz, t2.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r4.w, r4.xyxx, r4.xyxx
					min r4.w, r4.w, l(1.000000)
					add r4.w, -r4.w, l(1.000000)
					sqrt r4.z, r4.w
					add r4.xyz, -r5.xyzx, r4.xyzx
					mad r4.xyz, r3.wwww, r4.xyzx, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					sample r5.xyzw, r5.xyxx, t3.xyzw, s7
					mad r6.xy, v1.xyxx, cb0[18].xyxx, cb0[18].zwzz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s8
					mad r6.xyz, cb0[17].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r3.wwww, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[19].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s9
					mad r2.w, r2.w, cb0[13].x, -r6.x
					add r1.w, r1.w, -r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r6.xyzw, v5.yyyy, cb0[5].xyzw
					mad r6.xyzw, cb0[4].xyzw, v5.xxxx, r6.xyzw
					mad r6.xyzw, cb0[6].xyzw, v5.zzzz, r6.xyzw
					add r6.xyzw, r6.xyzw, cb0[7].xyzw
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.x, cb5[0].y, l(1.000000)
					  mul r2.yzw, v5.yyyy, cb5[2].xxyz
					  mad r2.yzw, cb5[1].xxyz, v5.xxxx, r2.yyzw
					  mad r2.yzw, cb5[3].xxyz, v5.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb5[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.w
					  sample r2.xyzw, r2.xzwx, t8.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
					mul r7.xyzw, v5.yyyy, cb3[9].xyzw
					mad r7.xyzw, cb3[8].xyzw, v5.xxxx, r7.xyzw
					mad r7.xyzw, cb3[10].xyzw, v5.zzzz, r7.xyzw
					add r7.xyzw, r7.xyzw, cb3[11].xyzw
					div r2.yzw, r7.xxyz, r7.wwww
					sample_c_lz r2.y, r2.yzyy, t9.xxxx, s1, r2.w
					add r2.z, -cb3[24].x, l(1.000000)
					mad r2.y, r2.y, r2.z, cb3[24].x
					add r2.x, -r2.y, r2.x
					mad r1.w, r1.w, r2.x, r2.y
					lt r2.x, l(0.000000), r6.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r6.xxyx, r6.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r7.xyzw, r2.yzyy, t6.xyzw, s2
					mul r2.x, r2.x, r7.w
					dp3 r2.y, r6.xyzx, r6.xyzx
					sample r6.xyzw, r2.yyyy, t7.xyzw, s3
					mul r2.x, r2.x, r6.x
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v2.xyzx, r4.xyzx
					dp3 r2.y, v3.xyzx, r4.xyzx
					dp3 r2.z, v4.xyzx, r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r2.w, r2.xyzx, r1.xyzx
					dp3_sat r2.x, r2.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.x, r0.z, -r2.x
					mad r1.x, r1.x, r2.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.wwww, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r4.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					mad r1.w, cb0[12].w, l(-2.000000), l(1.000000)
					mad r2.w, -r1.w, cb0[13].x, r1.w
					mad r5.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[13].yzyy, r5.xyxx
					add r5.xy, r5.xyxx, v1.xyxx
					sample r5.xyzw, r5.xyxx, t0.xyzw, s6
					mad r3.w, r1.w, cb0[13].x, -r5.x
					add r3.w, r2.w, -r3.w
					round_pi r3.w, r3.w
					add_sat r3.w, -r3.w, l(1.000000)
					sample r5.xyzw, r4.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r4.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[8].xxxx
					dp2 r4.x, r5.xyxx, r5.xyxx
					min r4.x, r4.x, l(1.000000)
					add r4.x, -r4.x, l(1.000000)
					sqrt r5.z, r4.x
					sample r4.xyzw, r4.zwzz, t2.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r4.w, r4.xyxx, r4.xyxx
					min r4.w, r4.w, l(1.000000)
					add r4.w, -r4.w, l(1.000000)
					sqrt r4.z, r4.w
					add r4.xyz, -r5.xyzx, r4.xyzx
					mad r4.xyz, r3.wwww, r4.xyzx, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					sample r5.xyzw, r5.xyxx, t3.xyzw, s7
					mad r6.xy, v1.xyxx, cb0[18].xyxx, cb0[18].zwzz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s8
					mad r6.xyz, cb0[17].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r3.wwww, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[19].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s9
					mad r1.w, r1.w, cb0[13].x, -r6.x
					add r1.w, -r1.w, r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r6.xyzw, v5.yyyy, cb0[5].xyzw
					mad r6.xyzw, cb0[4].xyzw, v5.xxxx, r6.xyzw
					mad r6.xyzw, cb0[6].xyzw, v5.zzzz, r6.xyzw
					add r6.xyzw, r6.xyzw, cb0[7].xyzw
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.x, cb5[0].y, l(1.000000)
					  mul r2.yzw, v5.yyyy, cb5[2].xxyz
					  mad r2.yzw, cb5[1].xxyz, v5.xxxx, r2.yyzw
					  mad r2.yzw, cb5[3].xxyz, v5.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb5[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.w
					  sample r2.xyzw, r2.xzwx, t8.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
					mul r7.xyzw, v5.yyyy, cb3[9].xyzw
					mad r7.xyzw, cb3[8].xyzw, v5.xxxx, r7.xyzw
					mad r7.xyzw, cb3[10].xyzw, v5.zzzz, r7.xyzw
					add r7.xyzw, r7.xyzw, cb3[11].xyzw
					div r2.yzw, r7.xxyz, r7.wwww
					sample_c_lz r2.y, r2.yzyy, t9.xxxx, s1, r2.w
					add r2.z, -cb3[24].x, l(1.000000)
					mad r2.y, r2.y, r2.z, cb3[24].x
					add r2.x, -r2.y, r2.x
					mad r1.w, r1.w, r2.x, r2.y
					lt r2.x, l(0.000000), r6.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r6.xxyx, r6.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r7.xyzw, r2.yzyy, t6.xyzw, s2
					mul r2.x, r2.x, r7.w
					dp3 r2.y, r6.xyzx, r6.xyzx
					sample r6.xyzw, r2.yyyy, t7.xyzw, s3
					mul r2.x, r2.x, r6.x
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v2.xyzx, r4.xyzx
					dp3 r2.y, v3.xyzx, r4.xyzx
					dp3 r2.z, v4.xyzx, r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r2.w, r2.xyzx, r1.xyzx
					dp3_sat r2.x, r2.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.x, r0.z, -r2.x
					mad r1.x, r1.x, r2.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.wwww, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[38], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mad r4.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r4.zw, v1.zzzw, cb0[15].xxxy, cb0[15].zzzw
					add r1.w, v5.y, -cb0[16].y
					mad r2.w, cb0[17].w, l(-2.000000), l(1.000000)
					mul r3.w, r2.w, cb0[18].x
					mad r1.w, r1.w, r2.w, -r3.w
					mad r5.xy, v1.xyxx, cb0[19].xyxx, cb0[19].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[18].yzyy, r5.xyxx
					add r5.xy, r5.xyxx, v1.xyxx
					sample r5.xyzw, r5.xyxx, t0.xyzw, s6
					mad r3.w, r2.w, cb0[18].x, -r5.x
					add r3.w, r1.w, -r3.w
					round_pi r3.w, r3.w
					add_sat r3.w, -r3.w, l(1.000000)
					sample r5.xyzw, r4.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r4.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[13].xxxx
					dp2 r4.x, r5.xyxx, r5.xyxx
					min r4.x, r4.x, l(1.000000)
					add r4.x, -r4.x, l(1.000000)
					sqrt r5.z, r4.x
					sample r4.xyzw, r4.zwzz, t2.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r4.w, r4.xyxx, r4.xyxx
					min r4.w, r4.w, l(1.000000)
					add r4.w, -r4.w, l(1.000000)
					sqrt r4.z, r4.w
					add r4.xyz, -r5.xyzx, r4.xyzx
					mad r4.xyz, r3.wwww, r4.xyzx, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[21].xyxx, cb0[21].zwzz
					sample r5.xyzw, r5.xyxx, t3.xyzw, s7
					mad r6.xy, v1.xyxx, cb0[23].xyxx, cb0[23].zwzz
					mul r5.xyz, r5.xyzx, cb0[20].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s8
					mad r6.xyz, cb0[22].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r3.wwww, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[25].xyxx, cb0[25].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[24].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s9
					mad r2.w, r2.w, cb0[18].x, -r6.x
					add r1.w, r1.w, -r2.w
					add r1.w, r1.w, cb0[24].x
					add r1.w, r1.w, -cb0[37].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r6.xyzw, v5.yyyy, cb0[10].xyzw
					mad r6.xyzw, cb0[9].xyzw, v5.xxxx, r6.xyzw
					mad r6.xyzw, cb0[11].xyzw, v5.zzzz, r6.xyzw
					add r6.xyzw, r6.xyzw, cb0[12].xyzw
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.x, cb5[0].y, l(1.000000)
					  mul r2.yzw, v5.yyyy, cb5[2].xxyz
					  mad r2.yzw, cb5[1].xxyz, v5.xxxx, r2.yyzw
					  mad r2.yzw, cb5[3].xxyz, v5.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb5[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.w
					  sample r2.xyzw, r2.xzwx, t8.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
					lt r2.y, r1.w, l(0.990000)
					if_nz r2.y
					  mul r7.xyzw, v5.yyyy, cb3[9].xyzw
					  mad r7.xyzw, cb3[8].xyzw, v5.xxxx, r7.xyzw
					  mad r7.xyzw, cb3[10].xyzw, v5.zzzz, r7.xyzw
					  add r7.xyzw, r7.xyzw, cb3[11].xyzw
					  div r2.yzw, r7.xxyz, r7.wwww
					  mad r7.xy, r2.yzyy, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r7.xy, r7.xyxx
					  mad r2.yz, r2.yyzy, cb0[8].zzwz, -r7.xxyx
					  add r8.xyzw, r2.yyzz, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r9.xw, r8.xxxz, r8.xxxz
					  mad r7.zw, r9.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r2.yyyz
					  add r8.xz, -r2.yyzy, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r10.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r8.xz, -r10.xxyx, r10.xxyx, r8.xxzx
					  max r2.yz, r2.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r2.yz, -r2.yyzy, r2.yyzy, r8.yywy
					  mov r10.x, r7.z
					  mov r10.y, r8.x
					  mov r10.z, r2.y
					  mov r10.w, r9.x
					  mul r10.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r9.x, r7.w
					  mov r9.y, r8.z
					  mov r9.z, r2.z
					  mul r8.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r9.xyzw, r10.ywyw, r10.xzxz
					  add r11.xyzw, r8.yyww, r8.xxzz
					  div r2.yz, r10.yywy, r9.zzwz
					  add r2.yz, r2.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
					  div r7.zw, r8.yyyw, r11.yyyw
					  add r7.zw, r7.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r8.xy, r2.yzyy, cb0[8].xxxx
					  mul r8.zw, r7.zzzw, cb0[8].yyyy
					  mul r9.xyzw, r9.xyzw, r11.xyzw
					  mad r10.xyzw, r7.xyxy, cb0[8].xyxy, r8.xzyz
					  sample_c_lz r2.y, r10.xyxx, t9.xxxx, s1, r2.w
					  sample_c_lz r2.z, r10.zwzz, t9.xxxx, s1, r2.w
					  mul r2.z, r2.z, r9.y
					  mad r2.y, r9.x, r2.y, r2.z
					  mad r7.xyzw, r7.xyxy, cb0[8].xyxy, r8.xwyw
					  sample_c_lz r2.z, r7.xyxx, t9.xxxx, s1, r2.w
					  mad r2.y, r9.z, r2.z, r2.y
					  sample_c_lz r2.z, r7.zwzz, t9.xxxx, s1, r2.w
					  mad r2.y, r9.w, r2.z, r2.y
					  add r2.z, -cb3[24].x, l(1.000000)
					  mad r2.y, r2.y, r2.z, cb3[24].x
					else 
					  mov r2.y, l(1.000000)
					endif 
					add r2.x, -r2.y, r2.x
					mad r1.w, r1.w, r2.x, r2.y
					lt r2.x, l(0.000000), r6.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r6.xxyx, r6.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r7.xyzw, r2.yzyy, t6.xyzw, s2
					mul r2.x, r2.x, r7.w
					dp3 r2.y, r6.xyzx, r6.xyzx
					sample r6.xyzw, r2.yyyy, t7.xyzw, s3
					mul r2.x, r2.x, r6.x
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v2.xyzx, r4.xyzx
					dp3 r2.y, v3.xyzx, r4.xyzx
					dp3 r2.z, v4.xyzx, r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[36].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[36].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[36].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r2.w, r2.xyzx, r1.xyzx
					dp3_sat r2.x, r2.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.x, r0.z, -r2.x
					mad r1.x, r1.x, r2.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.wwww, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[38], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 12
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mad r4.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r4.zw, v1.zzzw, cb0[15].xxxy, cb0[15].zzzw
					mad r1.w, cb0[17].w, l(-2.000000), l(1.000000)
					mad r2.w, -r1.w, cb0[18].x, r1.w
					mad r5.xy, v1.xyxx, cb0[19].xyxx, cb0[19].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[18].yzyy, r5.xyxx
					add r5.xy, r5.xyxx, v1.xyxx
					sample r5.xyzw, r5.xyxx, t0.xyzw, s6
					mad r3.w, r1.w, cb0[18].x, -r5.x
					add r3.w, r2.w, -r3.w
					round_pi r3.w, r3.w
					add_sat r3.w, -r3.w, l(1.000000)
					sample r5.xyzw, r4.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r4.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[13].xxxx
					dp2 r4.x, r5.xyxx, r5.xyxx
					min r4.x, r4.x, l(1.000000)
					add r4.x, -r4.x, l(1.000000)
					sqrt r5.z, r4.x
					sample r4.xyzw, r4.zwzz, t2.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r4.w, r4.xyxx, r4.xyxx
					min r4.w, r4.w, l(1.000000)
					add r4.w, -r4.w, l(1.000000)
					sqrt r4.z, r4.w
					add r4.xyz, -r5.xyzx, r4.xyzx
					mad r4.xyz, r3.wwww, r4.xyzx, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[21].xyxx, cb0[21].zwzz
					sample r5.xyzw, r5.xyxx, t3.xyzw, s7
					mad r6.xy, v1.xyxx, cb0[23].xyxx, cb0[23].zwzz
					mul r5.xyz, r5.xyzx, cb0[20].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s8
					mad r6.xyz, cb0[22].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r3.wwww, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[25].xyxx, cb0[25].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[24].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s9
					mad r1.w, r1.w, cb0[18].x, -r6.x
					add r1.w, -r1.w, r2.w
					add r1.w, r1.w, cb0[24].x
					add r1.w, r1.w, -cb0[37].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r6.xyzw, v5.yyyy, cb0[10].xyzw
					mad r6.xyzw, cb0[9].xyzw, v5.xxxx, r6.xyzw
					mad r6.xyzw, cb0[11].xyzw, v5.zzzz, r6.xyzw
					add r6.xyzw, r6.xyzw, cb0[12].xyzw
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.x, cb5[0].y, l(1.000000)
					  mul r2.yzw, v5.yyyy, cb5[2].xxyz
					  mad r2.yzw, cb5[1].xxyz, v5.xxxx, r2.yyzw
					  mad r2.yzw, cb5[3].xxyz, v5.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb5[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.w
					  sample r2.xyzw, r2.xzwx, t8.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
					lt r2.y, r1.w, l(0.990000)
					if_nz r2.y
					  mul r7.xyzw, v5.yyyy, cb3[9].xyzw
					  mad r7.xyzw, cb3[8].xyzw, v5.xxxx, r7.xyzw
					  mad r7.xyzw, cb3[10].xyzw, v5.zzzz, r7.xyzw
					  add r7.xyzw, r7.xyzw, cb3[11].xyzw
					  div r2.yzw, r7.xxyz, r7.wwww
					  mad r7.xy, r2.yzyy, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
					  round_ni r7.xy, r7.xyxx
					  mad r2.yz, r2.yyzy, cb0[8].zzwz, -r7.xxyx
					  add r8.xyzw, r2.yyzz, l(0.500000, 1.000000, 0.500000, 1.000000)
					  mul r9.xw, r8.xxxz, r8.xxxz
					  mad r7.zw, r9.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r2.yyyz
					  add r8.xz, -r2.yyzy, l(1.000000, 0.000000, 1.000000, 0.000000)
					  min r10.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r8.xz, -r10.xxyx, r10.xxyx, r8.xxzx
					  max r2.yz, r2.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  mad r2.yz, -r2.yyzy, r2.yyzy, r8.yywy
					  mov r10.x, r7.z
					  mov r10.y, r8.x
					  mov r10.z, r2.y
					  mov r10.w, r9.x
					  mul r10.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  mov r9.x, r7.w
					  mov r9.y, r8.z
					  mov r9.z, r2.z
					  mul r8.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
					  add r9.xyzw, r10.ywyw, r10.xzxz
					  add r11.xyzw, r8.yyww, r8.xxzz
					  div r2.yz, r10.yywy, r9.zzwz
					  add r2.yz, r2.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
					  div r7.zw, r8.yyyw, r11.yyyw
					  add r7.zw, r7.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
					  mul r8.xy, r2.yzyy, cb0[8].xxxx
					  mul r8.zw, r7.zzzw, cb0[8].yyyy
					  mul r9.xyzw, r9.xyzw, r11.xyzw
					  mad r10.xyzw, r7.xyxy, cb0[8].xyxy, r8.xzyz
					  sample_c_lz r2.y, r10.xyxx, t9.xxxx, s1, r2.w
					  sample_c_lz r2.z, r10.zwzz, t9.xxxx, s1, r2.w
					  mul r2.z, r2.z, r9.y
					  mad r2.y, r9.x, r2.y, r2.z
					  mad r7.xyzw, r7.xyxy, cb0[8].xyxy, r8.xwyw
					  sample_c_lz r2.z, r7.xyxx, t9.xxxx, s1, r2.w
					  mad r2.y, r9.z, r2.z, r2.y
					  sample_c_lz r2.z, r7.zwzz, t9.xxxx, s1, r2.w
					  mad r2.y, r9.w, r2.z, r2.y
					  add r2.z, -cb3[24].x, l(1.000000)
					  mad r2.y, r2.y, r2.z, cb3[24].x
					else 
					  mov r2.y, l(1.000000)
					endif 
					add r2.x, -r2.y, r2.x
					mad r1.w, r1.w, r2.x, r2.y
					lt r2.x, l(0.000000), r6.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r6.xxyx, r6.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r7.xyzw, r2.yzyy, t6.xyzw, s2
					mul r2.x, r2.x, r7.w
					dp3 r2.y, r6.xyzx, r6.xyzx
					sample r6.xyzw, r2.yyyy, t7.xyzw, s3
					mul r2.x, r2.x, r6.x
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v2.xyzx, r4.xyzx
					dp3 r2.y, v3.xyzx, r4.xyzx
					dp3 r2.z, v4.xyzx, r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[36].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[36].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[36].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r2.w, r2.xyzx, r1.xyzx
					dp3_sat r2.x, r2.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.x, r0.z, -r2.x
					mad r1.x, r1.x, r2.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.wwww, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r2.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					add r1.w, v5.y, -cb0[7].y
					mad r3.x, cb0[8].w, l(-2.000000), l(1.000000)
					mul r3.y, r3.x, cb0[9].x
					mad r1.w, r1.w, r3.x, -r3.y
					mad r3.yz, v1.xxyx, cb0[10].xxyx, cb0[10].zzwz
					mad r3.yz, cb1[0].yyyy, cb0[9].yyzy, r3.yyzy
					add r3.yz, r3.yyzy, v1.xxyx
					sample r4.xyzw, r3.yzyy, t0.xyzw, s4
					mad r3.y, r3.x, cb0[9].x, -r4.x
					add r3.y, r1.w, -r3.y
					round_pi r3.y, r3.y
					add_sat r3.y, -r3.y, l(1.000000)
					sample r4.xyzw, r2.xyxx, t1.xyzw, s2
					mul r4.x, r4.w, r4.x
					mad r2.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r2.xyxx, cb0[4].xxxx
					dp2 r2.x, r4.xyxx, r4.xyxx
					min r2.x, r2.x, l(1.000000)
					add r2.x, -r2.x, l(1.000000)
					sqrt r4.z, r2.x
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r2.w, r2.xyxx, r2.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r2.z, r2.w
					add r2.xyz, -r4.xyzx, r2.xyzx
					mad r2.xyz, r3.yyyy, r2.xyzx, r4.xyzx
					mad r3.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r4.xyzw, r3.zwzz, t3.xyzw, s5
					mad r3.zw, v1.xxxy, cb0[14].xxxy, cb0[14].zzzw
					mul r4.xyz, r4.xyzx, cb0[11].xyzx
					sample r5.xyzw, r3.zwzz, t4.xyzw, s6
					mad r5.xyz, cb0[13].xyzx, r5.xyzx, -r4.xyzx
					mad r3.yzw, r3.yyyy, r5.xxyz, r4.xxyz
					mad r4.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[15].yzyy, r4.xyxx
					sample r4.xyzw, r4.xyxx, t5.xyzw, s7
					mad r2.w, r3.x, cb0[9].x, -r4.x
					add r1.w, r1.w, -r2.w
					add r1.w, r1.w, cb0[15].x
					add r1.w, r1.w, -cb0[28].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r1.w, r0.xyzx, r4.xyzx
					add r4.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v5.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v5.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v5.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v5.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.x
					  sample r4.xyzw, r4.xzwx, t7.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v6.xyxx, v6.wwww
					sample r4.xyzw, r4.xyxx, t6.xyzw, s1
					add r2.w, r2.w, -r4.x
					mad r1.w, r1.w, r2.w, r4.x
					dp3 r4.x, v2.xyzx, r2.xyzx
					dp3 r4.y, v3.xyzx, r2.xyzx
					dp3 r4.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r4.xyzx, r4.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r4.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r5.xyz, r3.yzwy, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r5.xyz, cb0[27].yyyy, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r3.xyz, r1.wwww, r3.yzwy
					add r1.w, -cb0[27].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r1.xyzx
					dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r2.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.x, r1.z, r1.z
					mul r2.x, r2.x, r2.x
					mul r1.z, r1.z, r2.x
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r1.xxxx, r0.yyzy
					dp3 r0.w, r5.xyzx, r5.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        6     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r2.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					mad r1.w, cb0[8].w, l(-2.000000), l(1.000000)
					mad r3.x, -r1.w, cb0[9].x, r1.w
					mad r3.yz, v1.xxyx, cb0[10].xxyx, cb0[10].zzwz
					mad r3.yz, cb1[0].yyyy, cb0[9].yyzy, r3.yyzy
					add r3.yz, r3.yyzy, v1.xxyx
					sample r4.xyzw, r3.yzyy, t0.xyzw, s4
					mad r3.y, r1.w, cb0[9].x, -r4.x
					add r3.y, -r3.y, r3.x
					round_pi r3.y, r3.y
					add_sat r3.y, -r3.y, l(1.000000)
					sample r4.xyzw, r2.xyxx, t1.xyzw, s2
					mul r4.x, r4.w, r4.x
					mad r2.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r2.xyxx, cb0[4].xxxx
					dp2 r2.x, r4.xyxx, r4.xyxx
					min r2.x, r2.x, l(1.000000)
					add r2.x, -r2.x, l(1.000000)
					sqrt r4.z, r2.x
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r2.w, r2.xyxx, r2.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r2.z, r2.w
					add r2.xyz, -r4.xyzx, r2.xyzx
					mad r2.xyz, r3.yyyy, r2.xyzx, r4.xyzx
					mad r3.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
					sample r4.xyzw, r3.zwzz, t3.xyzw, s5
					mad r3.zw, v1.xxxy, cb0[14].xxxy, cb0[14].zzzw
					mul r4.xyz, r4.xyzx, cb0[11].xyzx
					sample r5.xyzw, r3.zwzz, t4.xyzw, s6
					mad r5.xyz, cb0[13].xyzx, r5.xyzx, -r4.xyzx
					mad r3.yzw, r3.yyyy, r5.xxyz, r4.xxyz
					mad r4.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[15].yzyy, r4.xyxx
					sample r4.xyzw, r4.xyxx, t5.xyzw, s7
					mad r1.w, r1.w, cb0[9].x, -r4.x
					add r1.w, -r1.w, r3.x
					add r1.w, r1.w, cb0[15].x
					add r1.w, r1.w, -cb0[28].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mov r4.x, cb4[9].z
					mov r4.y, cb4[10].z
					mov r4.z, cb4[11].z
					dp3 r1.w, r0.xyzx, r4.xyzx
					add r4.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.w, r4.xyzx, r4.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v5.yyyy, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v5.xxxx, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v5.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r4.xyz, r2.wwww, r4.xyzx, v5.xyzx
					  add r4.xyz, r4.xyzx, -cb5[6].xyzx
					  mul r4.yzw, r4.xxyz, cb5[5].xxyz
					  mad r2.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r3.x
					  sample r4.xyzw, r4.xzwx, t7.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
					div r4.xy, v6.xyxx, v6.wwww
					sample r4.xyzw, r4.xyxx, t6.xyzw, s1
					add r2.w, r2.w, -r4.x
					mad r1.w, r1.w, r2.w, r4.x
					dp3 r4.x, v2.xyzx, r2.xyzx
					dp3 r4.y, v3.xyzx, r2.xyzx
					dp3 r4.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r4.xyzx, r4.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r4.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r5.xyz, r3.yzwy, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r5.xyz, cb0[27].yyyy, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r3.xyz, r1.wwww, r3.yzwy
					add r1.w, -cb0[27].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r1.xyzx
					dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r2.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.x, r1.z, r1.z
					mul r2.x, r2.x, r2.x
					mul r1.z, r1.z, r2.x
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r1.xxxx, r0.yyzy
					dp3 r0.w, r5.xyzx, r5.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r2.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					add r1.w, v5.y, -cb0[11].y
					mad r3.x, cb0[12].w, l(-2.000000), l(1.000000)
					mul r3.y, r3.x, cb0[13].x
					mad r1.w, r1.w, r3.x, -r3.y
					mad r3.yz, v1.xxyx, cb0[14].xxyx, cb0[14].zzwz
					mad r3.yz, cb1[0].yyyy, cb0[13].yyzy, r3.yyzy
					add r3.yz, r3.yyzy, v1.xxyx
					sample r4.xyzw, r3.yzyy, t0.xyzw, s5
					mad r3.y, r3.x, cb0[13].x, -r4.x
					add r3.y, r1.w, -r3.y
					round_pi r3.y, r3.y
					add_sat r3.y, -r3.y, l(1.000000)
					sample r4.xyzw, r2.xyxx, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r2.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r2.xyxx, cb0[8].xxxx
					dp2 r2.x, r4.xyxx, r4.xyxx
					min r2.x, r2.x, l(1.000000)
					add r2.x, -r2.x, l(1.000000)
					sqrt r4.z, r2.x
					sample r2.xyzw, r2.zwzz, t2.xyzw, s4
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r2.w, r2.xyxx, r2.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r2.z, r2.w
					add r2.xyz, -r4.xyzx, r2.xyzx
					mad r2.xyz, r3.yyyy, r2.xyzx, r4.xyzx
					mad r3.zw, v1.xxxy, cb0[16].xxxy, cb0[16].zzzw
					sample r4.xyzw, r3.zwzz, t3.xyzw, s6
					mad r3.zw, v1.xxxy, cb0[18].xxxy, cb0[18].zzzw
					mul r4.xyz, r4.xyzx, cb0[15].xyzx
					sample r5.xyzw, r3.zwzz, t4.xyzw, s7
					mad r5.xyz, cb0[17].xyzx, r5.xyzx, -r4.xyzx
					mad r3.yzw, r3.yyyy, r5.xxyz, r4.xxyz
					mad r4.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[19].yzyy, r4.xyxx
					sample r4.xyzw, r4.xyxx, t5.xyzw, s8
					mad r2.w, r3.x, cb0[13].x, -r4.x
					add r1.w, r1.w, -r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r4.xy, v5.yyyy, cb0[5].xyxx
					mad r4.xy, cb0[4].xyxx, v5.xxxx, r4.xyxx
					mad r4.xy, cb0[6].xyxx, v5.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[7].xyxx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r0.xyzx, r5.xyzx
					add r5.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.x
					  sample r5.xyzw, r5.xzwx, t8.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v7.xxxy, v7.wwww
					sample r5.xyzw, r4.zwzz, t6.xyzw, s1
					add r2.w, r2.w, -r5.x
					mad r1.w, r1.w, r2.w, r5.x
					sample r4.xyzw, r4.xyxx, t7.xyzw, s2
					mul r1.w, r1.w, r4.w
					dp3 r4.x, v2.xyzx, r2.xyzx
					dp3 r4.y, v3.xyzx, r2.xyzx
					dp3 r4.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r4.xyzx, r4.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r4.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r5.xyz, r3.yzwy, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r5.xyz, cb0[31].yyyy, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r3.xyz, r1.wwww, r3.yzwy
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r1.xyzx
					dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r2.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.x, r1.z, r1.z
					mul r2.x, r2.x, r2.x
					mul r1.z, r1.z, r2.x
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r1.xxxx, r0.yyzy
					dp3 r0.w, r5.xyzx, r5.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 6
					add r0.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r2.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					mad r1.w, cb0[12].w, l(-2.000000), l(1.000000)
					mad r3.x, -r1.w, cb0[13].x, r1.w
					mad r3.yz, v1.xxyx, cb0[14].xxyx, cb0[14].zzwz
					mad r3.yz, cb1[0].yyyy, cb0[13].yyzy, r3.yyzy
					add r3.yz, r3.yyzy, v1.xxyx
					sample r4.xyzw, r3.yzyy, t0.xyzw, s5
					mad r3.y, r1.w, cb0[13].x, -r4.x
					add r3.y, -r3.y, r3.x
					round_pi r3.y, r3.y
					add_sat r3.y, -r3.y, l(1.000000)
					sample r4.xyzw, r2.xyxx, t1.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r2.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r4.xy, r2.xyxx, cb0[8].xxxx
					dp2 r2.x, r4.xyxx, r4.xyxx
					min r2.x, r2.x, l(1.000000)
					add r2.x, -r2.x, l(1.000000)
					sqrt r4.z, r2.x
					sample r2.xyzw, r2.zwzz, t2.xyzw, s4
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r2.w, r2.xyxx, r2.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r2.z, r2.w
					add r2.xyz, -r4.xyzx, r2.xyzx
					mad r2.xyz, r3.yyyy, r2.xyzx, r4.xyzx
					mad r3.zw, v1.xxxy, cb0[16].xxxy, cb0[16].zzzw
					sample r4.xyzw, r3.zwzz, t3.xyzw, s6
					mad r3.zw, v1.xxxy, cb0[18].xxxy, cb0[18].zzzw
					mul r4.xyz, r4.xyzx, cb0[15].xyzx
					sample r5.xyzw, r3.zwzz, t4.xyzw, s7
					mad r5.xyz, cb0[17].xyzx, r5.xyzx, -r4.xyzx
					mad r3.yzw, r3.yyyy, r5.xxyz, r4.xxyz
					mad r4.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[19].yzyy, r4.xyxx
					sample r4.xyzw, r4.xyxx, t5.xyzw, s8
					mad r1.w, r1.w, cb0[13].x, -r4.x
					add r1.w, -r1.w, r3.x
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r4.xy, v5.yyyy, cb0[5].xyxx
					mad r4.xy, cb0[4].xyxx, v5.xxxx, r4.xyxx
					mad r4.xy, cb0[6].xyxx, v5.zzzz, r4.xyxx
					add r4.xy, r4.xyxx, cb0[7].xyxx
					mov r5.x, cb4[9].z
					mov r5.y, cb4[10].z
					mov r5.z, cb4[11].z
					dp3 r1.w, r0.xyzx, r5.xyzx
					add r5.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					sqrt r2.w, r2.w
					add r2.w, -r1.w, r2.w
					mad r1.w, cb3[25].w, r2.w, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.w, cb5[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb5[0].y, l(1.000000)
					  mul r5.xyz, v5.yyyy, cb5[2].xyzx
					  mad r5.xyz, cb5[1].xyzx, v5.xxxx, r5.xyzx
					  mad r5.xyz, cb5[3].xyzx, v5.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb5[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v5.xyzx
					  add r5.xyz, r5.xyzx, -cb5[6].xyzx
					  mul r5.yzw, r5.xxyz, cb5[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.x, cb5[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.x
					  sample r5.xyzw, r5.xzwx, t8.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					div r4.zw, v7.xxxy, v7.wwww
					sample r5.xyzw, r4.zwzz, t6.xyzw, s1
					add r2.w, r2.w, -r5.x
					mad r1.w, r1.w, r2.w, r5.x
					sample r4.xyzw, r4.xyxx, t7.xyzw, s2
					mul r1.w, r1.w, r4.w
					dp3 r4.x, v2.xyzx, r2.xyzx
					dp3 r4.y, v3.xyzx, r2.xyzx
					dp3 r4.z, v4.xyzx, r2.xyzx
					dp3 r2.x, r4.xyzx, r4.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r4.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r5.xyz, r3.yzwy, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r5.xyz, cb0[31].yyyy, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r3.xyz, r1.wwww, r3.yzwy
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r1.xyzx
					dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
					dp3_sat r1.y, r2.xyzx, r0.xyzx
					dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r1.x, l(1.000000)
					mul r1.z, r0.z, r0.z
					mul r1.z, r1.z, r1.z
					mul r0.z, r0.z, r1.z
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.z, -|r0.w|, l(1.000000)
					mul r2.x, r1.z, r1.z
					mul r2.x, r2.x, r2.x
					mul r1.z, r1.z, r2.x
					mad r0.y, r0.y, r1.z, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.z, -r0.z, l(1.000000)
					mad r1.w, |r0.w|, r1.z, r0.z
					mad r1.z, r1.x, r1.z, r0.z
					mul r0.w, |r0.w|, r1.z
					mad r0.w, r1.x, r1.w, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.z, r1.y, r0.z, -r1.y
					mad r1.y, r1.z, r1.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.y, r1.y, r1.y, l(0.000000)
					div r0.z, r0.z, r1.y
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r1.xxxx, r0.yyzy
					dp3 r0.w, r5.xyzx, r5.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r4.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					add r1.w, v5.y, -cb0[11].y
					mad r2.w, cb0[12].w, l(-2.000000), l(1.000000)
					mul r3.w, r2.w, cb0[13].x
					mad r1.w, r1.w, r2.w, -r3.w
					mad r5.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[13].yzyy, r5.xyxx
					add r5.xy, r5.xyxx, v1.xyxx
					sample r5.xyzw, r5.xyxx, t0.xyzw, s5
					mad r3.w, r2.w, cb0[13].x, -r5.x
					add r3.w, r1.w, -r3.w
					round_pi r3.w, r3.w
					add_sat r3.w, -r3.w, l(1.000000)
					sample r5.xyzw, r4.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r4.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[8].xxxx
					dp2 r4.x, r5.xyxx, r5.xyxx
					min r4.x, r4.x, l(1.000000)
					add r4.x, -r4.x, l(1.000000)
					sqrt r5.z, r4.x
					sample r4.xyzw, r4.zwzz, t2.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r4.w, r4.xyxx, r4.xyxx
					min r4.w, r4.w, l(1.000000)
					add r4.w, -r4.w, l(1.000000)
					sqrt r4.z, r4.w
					add r4.xyz, -r5.xyzx, r4.xyzx
					mad r4.xyz, r3.wwww, r4.xyzx, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					sample r5.xyzw, r5.xyxx, t3.xyzw, s6
					mad r6.xy, v1.xyxx, cb0[18].xyxx, cb0[18].zwzz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s7
					mad r6.xyz, cb0[17].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r3.wwww, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[19].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s8
					mad r2.w, r2.w, cb0[13].x, -r6.x
					add r1.w, r1.w, -r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r6.xyz, v5.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v5.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v5.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.x, cb5[0].y, l(1.000000)
					  mul r2.yzw, v5.yyyy, cb5[2].xxyz
					  mad r2.yzw, cb5[1].xxyz, v5.xxxx, r2.yyzw
					  mad r2.yzw, cb5[3].xxyz, v5.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb5[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.w
					  sample r2.xyzw, r2.xzwx, t7.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
					add r2.yzw, v5.xxyz, -cb2[1].xxyz
					max r3.w, |r2.z|, |r2.y|
					max r3.w, |r2.w|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r2.y, r2.yzwy, t8.xxxx, s1, r3.w
					add r2.z, -cb3[24].x, l(1.000000)
					mad r2.y, r2.y, r2.z, cb3[24].x
					add r2.x, -r2.y, r2.x
					mad r1.w, r1.w, r2.x, r2.y
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t6.xyzw, s2
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v2.xyzx, r4.xyzx
					dp3 r2.y, v3.xyzx, r4.xyzx
					dp3 r2.z, v4.xyzx, r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r2.w, r2.xyzx, r1.xyzx
					dp3_sat r2.x, r2.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.x, r0.z, -r2.x
					mad r1.x, r1.x, r2.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.wwww, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r4.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					mad r1.w, cb0[12].w, l(-2.000000), l(1.000000)
					mad r2.w, -r1.w, cb0[13].x, r1.w
					mad r5.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[13].yzyy, r5.xyxx
					add r5.xy, r5.xyxx, v1.xyxx
					sample r5.xyzw, r5.xyxx, t0.xyzw, s5
					mad r3.w, r1.w, cb0[13].x, -r5.x
					add r3.w, r2.w, -r3.w
					round_pi r3.w, r3.w
					add_sat r3.w, -r3.w, l(1.000000)
					sample r5.xyzw, r4.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r4.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[8].xxxx
					dp2 r4.x, r5.xyxx, r5.xyxx
					min r4.x, r4.x, l(1.000000)
					add r4.x, -r4.x, l(1.000000)
					sqrt r5.z, r4.x
					sample r4.xyzw, r4.zwzz, t2.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r4.w, r4.xyxx, r4.xyxx
					min r4.w, r4.w, l(1.000000)
					add r4.w, -r4.w, l(1.000000)
					sqrt r4.z, r4.w
					add r4.xyz, -r5.xyzx, r4.xyzx
					mad r4.xyz, r3.wwww, r4.xyzx, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					sample r5.xyzw, r5.xyxx, t3.xyzw, s6
					mad r6.xy, v1.xyxx, cb0[18].xyxx, cb0[18].zwzz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s7
					mad r6.xyz, cb0[17].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r3.wwww, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[19].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s8
					mad r1.w, r1.w, cb0[13].x, -r6.x
					add r1.w, -r1.w, r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r6.xyz, v5.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v5.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v5.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.x, cb5[0].y, l(1.000000)
					  mul r2.yzw, v5.yyyy, cb5[2].xxyz
					  mad r2.yzw, cb5[1].xxyz, v5.xxxx, r2.yyzw
					  mad r2.yzw, cb5[3].xxyz, v5.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb5[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.w
					  sample r2.xyzw, r2.xzwx, t7.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
					add r2.yzw, v5.xxyz, -cb2[1].xxyz
					max r3.w, |r2.z|, |r2.y|
					max r3.w, |r2.w|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r2.y, r2.yzwy, t8.xxxx, s1, r3.w
					add r2.z, -cb3[24].x, l(1.000000)
					mad r2.y, r2.y, r2.z, cb3[24].x
					add r2.x, -r2.y, r2.x
					mad r1.w, r1.w, r2.x, r2.y
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t6.xyzw, s2
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v2.xyzx, r4.xyzx
					dp3 r2.y, v3.xyzx, r4.xyzx
					dp3 r2.z, v4.xyzx, r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r2.w, r2.xyzx, r1.xyzx
					dp3_sat r2.x, r2.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.x, r0.z, -r2.x
					mad r1.x, r1.x, r2.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.wwww, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r4.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					add r1.w, v5.y, -cb0[11].y
					mad r2.w, cb0[12].w, l(-2.000000), l(1.000000)
					mul r3.w, r2.w, cb0[13].x
					mad r1.w, r1.w, r2.w, -r3.w
					mad r5.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[13].yzyy, r5.xyxx
					add r5.xy, r5.xyxx, v1.xyxx
					sample r5.xyzw, r5.xyxx, t0.xyzw, s5
					mad r3.w, r2.w, cb0[13].x, -r5.x
					add r3.w, r1.w, -r3.w
					round_pi r3.w, r3.w
					add_sat r3.w, -r3.w, l(1.000000)
					sample r5.xyzw, r4.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r4.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[8].xxxx
					dp2 r4.x, r5.xyxx, r5.xyxx
					min r4.x, r4.x, l(1.000000)
					add r4.x, -r4.x, l(1.000000)
					sqrt r5.z, r4.x
					sample r4.xyzw, r4.zwzz, t2.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r4.w, r4.xyxx, r4.xyxx
					min r4.w, r4.w, l(1.000000)
					add r4.w, -r4.w, l(1.000000)
					sqrt r4.z, r4.w
					add r4.xyz, -r5.xyzx, r4.xyzx
					mad r4.xyz, r3.wwww, r4.xyzx, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					sample r5.xyzw, r5.xyxx, t3.xyzw, s6
					mad r6.xy, v1.xyxx, cb0[18].xyxx, cb0[18].zwzz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s7
					mad r6.xyz, cb0[17].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r3.wwww, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[19].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s8
					mad r2.w, r2.w, cb0[13].x, -r6.x
					add r1.w, r1.w, -r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r6.xyz, v5.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v5.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v5.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.x, cb5[0].y, l(1.000000)
					  mul r2.yzw, v5.yyyy, cb5[2].xxyz
					  mad r2.yzw, cb5[1].xxyz, v5.xxxx, r2.yyzw
					  mad r2.yzw, cb5[3].xxyz, v5.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb5[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.w
					  sample r2.xyzw, r2.xzwx, t7.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
					lt r2.y, r1.w, l(0.990000)
					if_nz r2.y
					  add r2.yzw, v5.xxyz, -cb2[1].xxyz
					  max r3.w, |r2.z|, |r2.y|
					  max r3.w, |r2.w|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r7.xyz, r2.yzwy, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.x, r7.xyzx, t8.xxxx, s1, r3.w
					  add r8.xyz, r2.yzwy, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.y, r8.xyzx, t8.xxxx, s1, r3.w
					  add r8.xyz, r2.yzwy, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.z, r8.xyzx, t8.xxxx, s1, r3.w
					  add r2.yzw, r2.yyzw, l(0.000000, 0.007813, -0.007813, -0.007813)
					  sample_c_lz r7.w, r2.yzwy, t8.xxxx, s1, r3.w
					  dp4 r2.y, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.z, -cb3[24].x, l(1.000000)
					  mad r2.y, r2.y, r2.z, cb3[24].x
					else 
					  mov r2.y, l(1.000000)
					endif 
					add r2.x, -r2.y, r2.x
					mad r1.w, r1.w, r2.x, r2.y
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t6.xyzw, s2
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v2.xyzx, r4.xyzx
					dp3 r2.y, v3.xyzx, r4.xyzx
					dp3 r2.z, v4.xyzx, r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r2.w, r2.xyzx, r1.xyzx
					dp3_sat r2.x, r2.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.x, r0.z, -r2.x
					mad r1.x, r1.x, r2.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.wwww, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_resource_texturecube (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r4.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					mad r1.w, cb0[12].w, l(-2.000000), l(1.000000)
					mad r2.w, -r1.w, cb0[13].x, r1.w
					mad r5.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[13].yzyy, r5.xyxx
					add r5.xy, r5.xyxx, v1.xyxx
					sample r5.xyzw, r5.xyxx, t0.xyzw, s5
					mad r3.w, r1.w, cb0[13].x, -r5.x
					add r3.w, r2.w, -r3.w
					round_pi r3.w, r3.w
					add_sat r3.w, -r3.w, l(1.000000)
					sample r5.xyzw, r4.xyxx, t1.xyzw, s3
					mul r5.x, r5.w, r5.x
					mad r4.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[8].xxxx
					dp2 r4.x, r5.xyxx, r5.xyxx
					min r4.x, r4.x, l(1.000000)
					add r4.x, -r4.x, l(1.000000)
					sqrt r5.z, r4.x
					sample r4.xyzw, r4.zwzz, t2.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r4.w, r4.xyxx, r4.xyxx
					min r4.w, r4.w, l(1.000000)
					add r4.w, -r4.w, l(1.000000)
					sqrt r4.z, r4.w
					add r4.xyz, -r5.xyzx, r4.xyzx
					mad r4.xyz, r3.wwww, r4.xyzx, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					sample r5.xyzw, r5.xyxx, t3.xyzw, s6
					mad r6.xy, v1.xyxx, cb0[18].xyxx, cb0[18].zwzz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s7
					mad r6.xyz, cb0[17].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r3.wwww, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[19].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s8
					mad r1.w, r1.w, cb0[13].x, -r6.x
					add r1.w, -r1.w, r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r6.xyz, v5.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v5.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v5.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.x, cb5[0].y, l(1.000000)
					  mul r2.yzw, v5.yyyy, cb5[2].xxyz
					  mad r2.yzw, cb5[1].xxyz, v5.xxxx, r2.yyzw
					  mad r2.yzw, cb5[3].xxyz, v5.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb5[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.w
					  sample r2.xyzw, r2.xzwx, t7.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
					lt r2.y, r1.w, l(0.990000)
					if_nz r2.y
					  add r2.yzw, v5.xxyz, -cb2[1].xxyz
					  max r3.w, |r2.z|, |r2.y|
					  max r3.w, |r2.w|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r7.xyz, r2.yzwy, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.x, r7.xyzx, t8.xxxx, s1, r3.w
					  add r8.xyz, r2.yzwy, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.y, r8.xyzx, t8.xxxx, s1, r3.w
					  add r8.xyz, r2.yzwy, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.z, r8.xyzx, t8.xxxx, s1, r3.w
					  add r2.yzw, r2.yyzw, l(0.000000, 0.007813, -0.007813, -0.007813)
					  sample_c_lz r7.w, r2.yzwy, t8.xxxx, s1, r3.w
					  dp4 r2.y, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.z, -cb3[24].x, l(1.000000)
					  mad r2.y, r2.y, r2.z, cb3[24].x
					else 
					  mov r2.y, l(1.000000)
					endif 
					add r2.x, -r2.y, r2.x
					mad r1.w, r1.w, r2.x, r2.y
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t6.xyzw, s2
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v2.xyzx, r4.xyzx
					dp3 r2.y, v3.xyzx, r4.xyzx
					dp3 r2.z, v4.xyzx, r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r2.w, r2.xyzx, r1.xyzx
					dp3_sat r2.x, r2.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.x, r0.z, -r2.x
					mad r1.x, r1.x, r2.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.wwww, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r4.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					add r1.w, v5.y, -cb0[11].y
					mad r2.w, cb0[12].w, l(-2.000000), l(1.000000)
					mul r3.w, r2.w, cb0[13].x
					mad r1.w, r1.w, r2.w, -r3.w
					mad r5.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[13].yzyy, r5.xyxx
					add r5.xy, r5.xyxx, v1.xyxx
					sample r5.xyzw, r5.xyxx, t0.xyzw, s6
					mad r3.w, r2.w, cb0[13].x, -r5.x
					add r3.w, r1.w, -r3.w
					round_pi r3.w, r3.w
					add_sat r3.w, -r3.w, l(1.000000)
					sample r5.xyzw, r4.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r4.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[8].xxxx
					dp2 r4.x, r5.xyxx, r5.xyxx
					min r4.x, r4.x, l(1.000000)
					add r4.x, -r4.x, l(1.000000)
					sqrt r5.z, r4.x
					sample r4.xyzw, r4.zwzz, t2.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r4.w, r4.xyxx, r4.xyxx
					min r4.w, r4.w, l(1.000000)
					add r4.w, -r4.w, l(1.000000)
					sqrt r4.z, r4.w
					add r4.xyz, -r5.xyzx, r4.xyzx
					mad r4.xyz, r3.wwww, r4.xyzx, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					sample r5.xyzw, r5.xyxx, t3.xyzw, s7
					mad r6.xy, v1.xyxx, cb0[18].xyxx, cb0[18].zwzz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s8
					mad r6.xyz, cb0[17].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r3.wwww, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[19].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s9
					mad r2.w, r2.w, cb0[13].x, -r6.x
					add r1.w, r1.w, -r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r6.xyz, v5.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v5.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v5.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.x, cb5[0].y, l(1.000000)
					  mul r2.yzw, v5.yyyy, cb5[2].xxyz
					  mad r2.yzw, cb5[1].xxyz, v5.xxxx, r2.yyzw
					  mad r2.yzw, cb5[3].xxyz, v5.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb5[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.w
					  sample r2.xyzw, r2.xzwx, t8.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
					add r2.yzw, v5.xxyz, -cb2[1].xxyz
					max r3.w, |r2.z|, |r2.y|
					max r3.w, |r2.w|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r2.y, r2.yzwy, t9.xxxx, s1, r3.w
					add r2.z, -cb3[24].x, l(1.000000)
					mad r2.y, r2.y, r2.z, cb3[24].x
					add r2.x, -r2.y, r2.x
					mad r1.w, r1.w, r2.x, r2.y
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t6.xyzw, s3
					sample r6.xyzw, r6.xyzx, t7.xyzw, s2
					mul r2.x, r2.x, r6.w
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v2.xyzx, r4.xyzx
					dp3 r2.y, v3.xyzx, r4.xyzx
					dp3 r2.z, v4.xyzx, r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r2.w, r2.xyzx, r1.xyzx
					dp3_sat r2.x, r2.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.x, r0.z, -r2.x
					mad r1.x, r1.x, r2.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.wwww, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r4.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					mad r1.w, cb0[12].w, l(-2.000000), l(1.000000)
					mad r2.w, -r1.w, cb0[13].x, r1.w
					mad r5.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[13].yzyy, r5.xyxx
					add r5.xy, r5.xyxx, v1.xyxx
					sample r5.xyzw, r5.xyxx, t0.xyzw, s6
					mad r3.w, r1.w, cb0[13].x, -r5.x
					add r3.w, r2.w, -r3.w
					round_pi r3.w, r3.w
					add_sat r3.w, -r3.w, l(1.000000)
					sample r5.xyzw, r4.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r4.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[8].xxxx
					dp2 r4.x, r5.xyxx, r5.xyxx
					min r4.x, r4.x, l(1.000000)
					add r4.x, -r4.x, l(1.000000)
					sqrt r5.z, r4.x
					sample r4.xyzw, r4.zwzz, t2.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r4.w, r4.xyxx, r4.xyxx
					min r4.w, r4.w, l(1.000000)
					add r4.w, -r4.w, l(1.000000)
					sqrt r4.z, r4.w
					add r4.xyz, -r5.xyzx, r4.xyzx
					mad r4.xyz, r3.wwww, r4.xyzx, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					sample r5.xyzw, r5.xyxx, t3.xyzw, s7
					mad r6.xy, v1.xyxx, cb0[18].xyxx, cb0[18].zwzz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s8
					mad r6.xyz, cb0[17].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r3.wwww, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[19].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s9
					mad r1.w, r1.w, cb0[13].x, -r6.x
					add r1.w, -r1.w, r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r6.xyz, v5.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v5.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v5.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.x, cb5[0].y, l(1.000000)
					  mul r2.yzw, v5.yyyy, cb5[2].xxyz
					  mad r2.yzw, cb5[1].xxyz, v5.xxxx, r2.yyzw
					  mad r2.yzw, cb5[3].xxyz, v5.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb5[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.w
					  sample r2.xyzw, r2.xzwx, t8.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
					add r2.yzw, v5.xxyz, -cb2[1].xxyz
					max r3.w, |r2.z|, |r2.y|
					max r3.w, |r2.w|, r3.w
					add r3.w, r3.w, -cb2[2].z
					max r3.w, r3.w, l(0.000010)
					mul r3.w, r3.w, cb2[2].w
					div r3.w, cb2[2].y, r3.w
					add r3.w, r3.w, -cb2[2].x
					add r3.w, -r3.w, l(1.000000)
					sample_c_lz r2.y, r2.yzwy, t9.xxxx, s1, r3.w
					add r2.z, -cb3[24].x, l(1.000000)
					mad r2.y, r2.y, r2.z, cb3[24].x
					add r2.x, -r2.y, r2.x
					mad r1.w, r1.w, r2.x, r2.y
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t6.xyzw, s3
					sample r6.xyzw, r6.xyzx, t7.xyzw, s2
					mul r2.x, r2.x, r6.w
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v2.xyzx, r4.xyzx
					dp3 r2.y, v3.xyzx, r4.xyzx
					dp3 r2.z, v4.xyzx, r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r2.w, r2.xyzx, r1.xyzx
					dp3_sat r2.x, r2.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.x, r0.z, -r2.x
					mad r1.x, r1.x, r2.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.wwww, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r4.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					add r1.w, v5.y, -cb0[11].y
					mad r2.w, cb0[12].w, l(-2.000000), l(1.000000)
					mul r3.w, r2.w, cb0[13].x
					mad r1.w, r1.w, r2.w, -r3.w
					mad r5.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[13].yzyy, r5.xyxx
					add r5.xy, r5.xyxx, v1.xyxx
					sample r5.xyzw, r5.xyxx, t0.xyzw, s6
					mad r3.w, r2.w, cb0[13].x, -r5.x
					add r3.w, r1.w, -r3.w
					round_pi r3.w, r3.w
					add_sat r3.w, -r3.w, l(1.000000)
					sample r5.xyzw, r4.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r4.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[8].xxxx
					dp2 r4.x, r5.xyxx, r5.xyxx
					min r4.x, r4.x, l(1.000000)
					add r4.x, -r4.x, l(1.000000)
					sqrt r5.z, r4.x
					sample r4.xyzw, r4.zwzz, t2.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r4.w, r4.xyxx, r4.xyxx
					min r4.w, r4.w, l(1.000000)
					add r4.w, -r4.w, l(1.000000)
					sqrt r4.z, r4.w
					add r4.xyz, -r5.xyzx, r4.xyzx
					mad r4.xyz, r3.wwww, r4.xyzx, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					sample r5.xyzw, r5.xyxx, t3.xyzw, s7
					mad r6.xy, v1.xyxx, cb0[18].xyxx, cb0[18].zwzz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s8
					mad r6.xyz, cb0[17].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r3.wwww, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[19].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s9
					mad r2.w, r2.w, cb0[13].x, -r6.x
					add r1.w, r1.w, -r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r6.xyz, v5.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v5.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v5.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.x, cb5[0].y, l(1.000000)
					  mul r2.yzw, v5.yyyy, cb5[2].xxyz
					  mad r2.yzw, cb5[1].xxyz, v5.xxxx, r2.yyzw
					  mad r2.yzw, cb5[3].xxyz, v5.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb5[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.w
					  sample r2.xyzw, r2.xzwx, t8.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
					lt r2.y, r1.w, l(0.990000)
					if_nz r2.y
					  add r2.yzw, v5.xxyz, -cb2[1].xxyz
					  max r3.w, |r2.z|, |r2.y|
					  max r3.w, |r2.w|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r7.xyz, r2.yzwy, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.x, r7.xyzx, t9.xxxx, s1, r3.w
					  add r8.xyz, r2.yzwy, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.y, r8.xyzx, t9.xxxx, s1, r3.w
					  add r8.xyz, r2.yzwy, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.z, r8.xyzx, t9.xxxx, s1, r3.w
					  add r2.yzw, r2.yyzw, l(0.000000, 0.007813, -0.007813, -0.007813)
					  sample_c_lz r7.w, r2.yzwy, t9.xxxx, s1, r3.w
					  dp4 r2.y, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.z, -cb3[24].x, l(1.000000)
					  mad r2.y, r2.y, r2.z, cb3[24].x
					else 
					  mov r2.y, l(1.000000)
					endif 
					add r2.x, -r2.y, r2.x
					mad r1.w, r1.w, r2.x, r2.y
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t6.xyzw, s3
					sample r6.xyzw, r6.xyzx, t7.xyzw, s2
					mul r2.x, r2.x, r6.w
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v2.xyzx, r4.xyzx
					dp3 r2.y, v3.xyzx, r4.xyzx
					dp3 r2.z, v4.xyzx, r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r2.w, r2.xyzx, r1.xyzx
					dp3_sat r2.x, r2.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.x, r0.z, -r2.x
					mad r1.x, r1.x, r2.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.wwww, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_comparison
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texturecube (float,float,float,float) t7
					dcl_resource_texture3d (float,float,float,float) t8
					dcl_resource_texturecube (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r3.xyz, r1.wwww, r2.xyzx
					mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r4.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					mad r1.w, cb0[12].w, l(-2.000000), l(1.000000)
					mad r2.w, -r1.w, cb0[13].x, r1.w
					mad r5.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[13].yzyy, r5.xyxx
					add r5.xy, r5.xyxx, v1.xyxx
					sample r5.xyzw, r5.xyxx, t0.xyzw, s6
					mad r3.w, r1.w, cb0[13].x, -r5.x
					add r3.w, r2.w, -r3.w
					round_pi r3.w, r3.w
					add_sat r3.w, -r3.w, l(1.000000)
					sample r5.xyzw, r4.xyxx, t1.xyzw, s4
					mul r5.x, r5.w, r5.x
					mad r4.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r4.xyxx, cb0[8].xxxx
					dp2 r4.x, r5.xyxx, r5.xyxx
					min r4.x, r4.x, l(1.000000)
					add r4.x, -r4.x, l(1.000000)
					sqrt r5.z, r4.x
					sample r4.xyzw, r4.zwzz, t2.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r4.w, r4.xyxx, r4.xyxx
					min r4.w, r4.w, l(1.000000)
					add r4.w, -r4.w, l(1.000000)
					sqrt r4.z, r4.w
					add r4.xyz, -r5.xyzx, r4.xyzx
					mad r4.xyz, r3.wwww, r4.xyzx, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					sample r5.xyzw, r5.xyxx, t3.xyzw, s7
					mad r6.xy, v1.xyxx, cb0[18].xyxx, cb0[18].zwzz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r6.xyxx, t4.xyzw, s8
					mad r6.xyz, cb0[17].xyzx, r6.xyzx, -r5.xyzx
					mad r5.xyz, r3.wwww, r6.xyzx, r5.xyzx
					mad r6.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r6.xy, cb1[0].yyyy, cb0[19].yzyy, r6.xyxx
					sample r6.xyzw, r6.xyxx, t5.xyzw, s9
					mad r1.w, r1.w, cb0[13].x, -r6.x
					add r1.w, -r1.w, r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r6.xyz, v5.yyyy, cb0[5].xyzx
					mad r6.xyz, cb0[4].xyzx, v5.xxxx, r6.xyzx
					mad r6.xyz, cb0[6].xyzx, v5.zzzz, r6.xyzx
					add r6.xyz, r6.xyzx, cb0[7].xyzx
					mov r7.x, cb4[9].z
					mov r7.y, cb4[10].z
					mov r7.z, cb4[11].z
					dp3 r1.w, r2.xyzx, r7.xyzx
					add r2.xyz, v5.xyzx, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r1.w, r2.x
					mad r1.w, cb3[25].w, r2.x, r1.w
					mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.x, cb5[0].y, l(1.000000)
					  mul r2.yzw, v5.yyyy, cb5[2].xxyz
					  mad r2.yzw, cb5[1].xxyz, v5.xxxx, r2.yyzw
					  mad r2.yzw, cb5[3].xxyz, v5.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb5[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.w
					  sample r2.xyzw, r2.xzwx, t8.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
					lt r2.y, r1.w, l(0.990000)
					if_nz r2.y
					  add r2.yzw, v5.xxyz, -cb2[1].xxyz
					  max r3.w, |r2.z|, |r2.y|
					  max r3.w, |r2.w|, r3.w
					  add r3.w, r3.w, -cb2[2].z
					  max r3.w, r3.w, l(0.000010)
					  mul r3.w, r3.w, cb2[2].w
					  div r3.w, cb2[2].y, r3.w
					  add r3.w, r3.w, -cb2[2].x
					  add r3.w, -r3.w, l(1.000000)
					  add r7.xyz, r2.yzwy, l(0.007813, 0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.x, r7.xyzx, t9.xxxx, s1, r3.w
					  add r8.xyz, r2.yzwy, l(-0.007813, -0.007813, 0.007813, 0.000000)
					  sample_c_lz r7.y, r8.xyzx, t9.xxxx, s1, r3.w
					  add r8.xyz, r2.yzwy, l(-0.007813, 0.007813, -0.007813, 0.000000)
					  sample_c_lz r7.z, r8.xyzx, t9.xxxx, s1, r3.w
					  add r2.yzw, r2.yyzw, l(0.000000, 0.007813, -0.007813, -0.007813)
					  sample_c_lz r7.w, r2.yzwy, t9.xxxx, s1, r3.w
					  dp4 r2.y, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					  add r2.z, -cb3[24].x, l(1.000000)
					  mad r2.y, r2.y, r2.z, cb3[24].x
					else 
					  mov r2.y, l(1.000000)
					endif 
					add r2.x, -r2.y, r2.x
					mad r1.w, r1.w, r2.x, r2.y
					dp3 r2.x, r6.xyzx, r6.xyzx
					sample r2.xyzw, r2.xxxx, t6.xyzw, s3
					sample r6.xyzw, r6.xyzx, t7.xyzw, s2
					mul r2.x, r2.x, r6.w
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v2.xyzx, r4.xyzx
					dp3 r2.y, v3.xyzx, r4.xyzx
					dp3 r2.z, v4.xyzx, r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r4.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r5.xyz, r1.wwww, r5.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r2.xyzx, r3.xyzx
					dp3_sat r2.w, r2.xyzx, r1.xyzx
					dp3_sat r2.x, r2.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.w, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.w, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.w, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.x, r0.z, -r2.x
					mad r1.x, r1.x, r2.x, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.wwww, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r4.xyzx
					mul r0.yzw, r4.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float       
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[33], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v5.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r0.xyzx
					add r2.xyz, -v5.xyzx, cb1[4].xyzx
					dp3 r1.w, r2.xyzx, r2.xyzx
					rsq r1.w, r1.w
					mul r2.xyz, r1.wwww, r2.xyzx
					mad r3.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad r3.zw, v1.zzzw, cb0[10].xxxy, cb0[10].zzzw
					add r1.w, v5.y, -cb0[11].y
					mad r2.w, cb0[12].w, l(-2.000000), l(1.000000)
					mul r4.x, r2.w, cb0[13].x
					mad r1.w, r1.w, r2.w, -r4.x
					mad r4.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[13].yzyy, r4.xyxx
					add r4.xy, r4.xyxx, v1.xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s4
					mad r4.x, r2.w, cb0[13].x, -r4.x
					add r4.x, r1.w, -r4.x
					round_pi r4.x, r4.x
					add_sat r4.x, -r4.x, l(1.000000)
					sample r5.xyzw, r3.xyxx, t1.xyzw, s2
					mul r5.x, r5.w, r5.x
					mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r5.xy, r3.xyxx, cb0[8].xxxx
					dp2 r3.x, r5.xyxx, r5.xyxx
					min r3.x, r3.x, l(1.000000)
					add r3.x, -r3.x, l(1.000000)
					sqrt r5.z, r3.x
					sample r3.xyzw, r3.zwzz, t2.xyzw, s3
					mul r3.x, r3.w, r3.x
					mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					add r3.xyz, -r5.xyzx, r3.xyzx
					mad r3.xyz, r4.xxxx, r3.xyzx, r5.xyzx
					mad r4.yz, v1.xxyx, cb0[16].xxyx, cb0[16].zzwz
					sample r5.xyzw, r4.yzyy, t3.xyzw, s5
					mad r4.yz, v1.xxyx, cb0[18].xxyx, cb0[18].zzwz
					mul r5.xyz, r5.xyzx, cb0[15].xyzx
					sample r6.xyzw, r4.yzyy, t4.xyzw, s6
					mad r4.yzw, cb0[17].xxyz, r6.xxyz, -r5.xxyz
					mad r4.xyz, r4.xxxx, r4.yzwy, r5.xyzx
					mad r5.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					mad r5.xy, cb1[0].yyyy, cb0[19].yzyy, r5.xyxx
					sample r5.xyzw, r5.xyxx, t5.xyzw, s7
					mad r2.w, r2.w, cb0[13].x, -r5.x
					add r1.w, r1.w, -r2.w
					add r1.w, r1.w, cb0[19].x
					add r1.w, r1.w, -cb0[32].y
					lt r1.w, r1.w, l(0.000000)
					discard_nz r1.w
					mul r5.xyz, v5.yyyy, cb0[5].xyzx
					mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
					mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
					add r5.xyz, r5.xyzx, cb0[7].xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r6.xyz, v5.yyyy, cb3[2].xyzx
					  mad r6.xyz, cb3[1].xyzx, v5.xxxx, r6.xyzx
					  mad r6.xyz, cb3[3].xyzx, v5.zzzz, r6.xyzx
					  add r6.xyz, r6.xyzx, cb3[4].xyzx
					  movc r6.xyz, r1.wwww, r6.xyzx, v5.xyzx
					  add r6.xyz, r6.xyzx, -cb3[6].xyzx
					  mul r6.yzw, r6.xxyz, cb3[5].xxyz
					  mad r1.w, r6.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r6.x, r1.w, r2.w
					  sample r6.xyzw, r6.xzwx, t7.xyzw, s0
					else 
					  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
					dp3 r2.w, r5.xyzx, r5.xyzx
					sample r5.xyzw, r2.wwww, t6.xyzw, s1
					mul r1.w, r1.w, r5.x
					dp3 r5.x, v2.xyzx, r3.xyzx
					dp3 r5.y, v3.xyzx, r3.xyzx
					dp3 r5.z, v4.xyzx, r3.xyzx
					dp3 r2.w, r5.xyzx, r5.xyzx
					rsq r2.w, r2.w
					mul r3.xyz, r2.wwww, r5.xyzx
					mul r5.xyz, r1.wwww, cb0[2].xyzx
					add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[31].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r1.w, -cb0[31].y, l(0.779084), l(0.779084)
					mul r4.xyz, r1.wwww, r4.xyzx
					add r1.w, -cb0[31].z, l(1.000000)
					mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					max r0.w, r0.w, l(0.001000)
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r3.xyzx, r2.xyzx
					dp3_sat r2.x, r3.xyzx, r1.xyzx
					dp3_sat r2.y, r3.xyzx, r0.xyzx
					dp3_sat r0.x, r1.xyzx, r0.xyzx
					mul r0.y, r0.x, r0.x
					dp2 r0.y, r0.yyyy, r1.wwww
					add r0.y, r0.y, l(-0.500000)
					add r0.z, -r2.x, l(1.000000)
					mul r1.x, r0.z, r0.z
					mul r1.x, r1.x, r1.x
					mul r0.z, r0.z, r1.x
					mad r0.z, r0.y, r0.z, l(1.000000)
					add r1.x, -|r0.w|, l(1.000000)
					mul r1.y, r1.x, r1.x
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.x, r1.y
					mad r0.y, r0.y, r1.x, l(1.000000)
					mul r0.y, r0.y, r0.z
					mul r0.z, r1.w, r1.w
					max r0.z, r0.z, l(0.002000)
					add r1.x, -r0.z, l(1.000000)
					mad r1.y, |r0.w|, r1.x, r0.z
					mad r1.x, r2.x, r1.x, r0.z
					mul r0.w, |r0.w|, r1.x
					mad r0.w, r2.x, r1.y, r0.w
					add r0.w, r0.w, l(0.000010)
					div r0.w, l(0.500000), r0.w
					mul r0.z, r0.z, r0.z
					mad r1.x, r2.y, r0.z, -r2.y
					mad r1.x, r1.x, r2.y, l(1.000000)
					mul r0.z, r0.z, l(0.318310)
					mad r1.x, r1.x, r1.x, l(0.000000)
					div r0.z, r0.z, r1.x
					mul r0.z, r0.z, r0.w
					mul r0.z, r0.z, l(3.141593)
					max r0.z, r0.z, l(0.000100)
					sqrt r0.z, r0.z
					mul r0.yz, r2.xxxx, r0.yyzy
					dp3 r0.w, r6.xyzx, r6.xyzx
					ne r0.w, r0.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					mul r0.z, r0.w, r0.z
					mul r1.xyz, r0.yyyy, r5.xyzx
					mul r0.yzw, r5.xxyz, r0.zzzz
					add r0.x, -r0.x, l(1.000000)
					mul r1.w, r0.x, r0.x
					mul r1.w, r1.w, r1.w
					mul r0.x, r0.x, r1.w
					add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
					mul r0.xyz, r0.yzwy, r2.xyzx
					mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "DEFERRED"
			Tags { "IGNOREPROJECTOR" = "true" "IsEmissive" = "true" "LIGHTMODE" = "DEFERRED" "QUEUE" = "Geometry+0" "RenderType" = "TransparentCutout" }
			GpuProgramID 173769
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 6   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mov o5.xyzw, l(0,0,0,0)
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 6   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mov o5.xyzw, l(0,0,0,0)
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 6   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mov o5.xyzw, l(0,0,0,0)
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 6   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o2.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb2[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.z, r2.x
					mov o3.x, r1.x
					mov o4.x, r1.y
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o3.z, r2.y
					mov o4.z, r2.w
					mov o5.xyzw, l(0,0,0,0)
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o1.zw, v4.xxxy, cb0[30].xxxy, cb0[30].zzzw
					mov o2.w, r0.x
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mul r2.xyz, v1.yyyy, cb1[1].yzxy
					mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r0.x, v1.w, cb1[9].w
					mul r3.xyz, r0.xxxx, r3.xyzx
					mov o2.y, r3.x
					mov o2.x, r2.z
					mov o2.z, r1.y
					mov o3.x, r2.x
					mov o4.x, r2.y
					mov o3.z, r1.z
					mov o4.z, r1.x
					mov o3.w, r0.y
					mov o4.w, r0.z
					mov o3.y, r3.y
					mov o4.y, r3.z
					mov o5.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 4
					mad r0.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r0.xy, cb1[0].yyyy, cb0[15].yzyy, r0.xyxx
					sample r0.xyzw, r0.xyxx, t5.xyzw, s5
					mad r0.y, cb0[8].w, l(-2.000000), l(1.000000)
					mad r0.x, r0.y, cb0[9].x, -r0.x
					mad r0.z, -r0.y, cb0[9].x, r0.y
					add r0.x, -r0.x, r0.z
					add r0.x, r0.x, cb0[15].x
					add r0.w, r0.x, -cb0[28].y
					ge r0.x, cb0[17].x, r0.x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					sample r1.xyzw, r1.xyxx, t4.xyzw, s4
					mad r2.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r3.xyzw, r2.xyxx, t3.xyzw, s3
					sample r2.xyzw, r2.xyxx, t8.xyzw, s8
					add r0.w, r2.x, l(-1.000000)
					mad o0.w, cb0[28].x, r0.w, l(1.000000)
					mul r2.xyz, r3.xyzx, cb0[11].xyzx
					mad r1.xyz, cb0[13].xyzx, r1.xyzx, -r2.xyzx
					mad r3.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r3.xy, cb1[0].yyyy, cb0[9].yzyy, r3.xyxx
					add r3.xy, r3.xyxx, v1.xyxx
					sample r3.xyzw, r3.xyxx, t0.xyzw, s2
					mad r0.w, r0.y, cb0[9].x, -r3.x
					mad r0.y, -r0.y, cb0[9].x, r0.z
					add r0.z, -r0.w, r0.z
					mad_sat r0.y, cb0[25].x, l(3.000000), r0.y
					round_pi r0.w, r0.z
					add r0.z, -|r0.z|, l(1.000000)
					add_sat r0.w, -r0.w, l(1.000000)
					mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
					mad r1.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul o0.xyz, r1.wwww, r1.xyzx
					add r1.xyz, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[27].yyyy, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mov o1.w, cb0[27].z
					mad r1.xy, v1.zwzz, cb0[6].xyxx, cb0[6].zwzz
					sample r1.xyzw, r1.xyxx, t2.xyzw, s1
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r1.xyxx, r1.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.z, r1.w
					mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r2.xyzw, r2.xyxx, t1.xyzw, s0
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[4].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r2.z, r1.w
					add r1.xyz, r1.xyzx, -r2.xyzx
					mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
					dp3 r2.x, v2.xyzx, r1.xyzx
					dp3 r2.y, v3.xyzx, r1.xyzx
					dp3 r2.z, v4.xyzx, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mad r1.xy, v1.xyxx, cb0[24].xyxx, cb0[24].zwzz
					mad r1.xy, cb1[0].yyyy, cb0[23].xyxx, r1.xyxx
					sample r1.xyzw, r1.xyxx, t6.xyzw, s7
					add r1.y, -r1.x, l(0.500000)
					mul r1.xzw, r1.xxxx, cb0[22].xxyz
					mul_sat r1.y, r1.y, l(3.000000)
					mul r2.x, r1.y, r1.y
					mul r1.y, r1.y, r2.x
					mul r0.y, r0.y, r1.y
					mad r2.xyz, cb0[22].xyzx, r0.yyyy, -r1.xzwx
					mad r1.xyz, cb0[21].xxxx, r2.xyzx, r1.xzwx
					mad r2.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					sample r2.xyzw, r2.xyxx, t7.xyzw, s6
					mad r1.xyz, -cb0[19].xyzx, r2.xyzx, r1.xyzx
					mul r2.xyz, r2.xyzx, cb0[19].xyzx
					mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
					add r0.y, -cb0[27].x, l(1.000000)
					add r0.y, -r0.y, r0.z
					mul_sat r0.y, r0.y, l(10.000000)
					mad r0.z, r0.y, l(-2.000000), l(3.000000)
					mul r0.y, r0.y, r0.y
					mad_sat r0.y, r0.z, r0.y, -r0.w
					mad r0.yzw, cb0[26].xxyz, r0.yyyy, r1.xxyz
					movc r0.xyz, r0.xxxx, cb0[18].xyzx, r0.yzwy
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float       
					// TEXCOORD                 6   xyz         6     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[42], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					mad r0.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r0.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					add r1.x, v3.w, -cb0[7].y
					mad r1.y, cb0[8].w, l(-2.000000), l(1.000000)
					mul r1.z, r1.y, cb0[9].x
					mad r1.x, r1.x, r1.y, -r1.z
					mad r1.zw, v1.xxxy, cb0[10].xxxy, cb0[10].zzzw
					mad r1.zw, cb1[0].yyyy, cb0[9].yyyz, r1.zzzw
					add r1.zw, r1.zzzw, v1.xxxy
					sample r2.xyzw, r1.zwzz, t0.xyzw, s3
					mad r1.z, r1.y, cb0[9].x, -r2.x
					add r1.z, -r1.z, r1.x
					round_pi r1.w, r1.z
					add_sat r1.w, -r1.w, l(1.000000)
					sample r2.xyzw, r0.xyxx, t1.xyzw, s1
					mul r2.x, r2.w, r2.x
					mad r0.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r0.xyxx, cb0[4].xxxx
					dp2 r0.x, r2.xyxx, r2.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r2.z, r0.x
					sample r0.xyzw, r0.zwzz, t2.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r0.xyxx, r0.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.z, r0.w
					add r0.xyz, -r2.xyzx, r0.xyzx
					mad r0.xyz, r1.wwww, r0.xyzx, r2.xyzx
					mad r2.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					mad r2.zw, v1.xxxy, cb0[14].xxxy, cb0[14].zzzw
					mul r3.xyz, r3.xyzx, cb0[11].xyzx
					sample r4.xyzw, r2.zwzz, t4.xyzw, s5
					mad r4.xyz, cb0[13].xyzx, r4.xyzx, -r3.xyzx
					mad r3.xyz, r1.wwww, r4.xyzx, r3.xyzx
					mad r2.zw, v1.xxxy, cb0[16].xxxy, cb0[16].zzzw
					mad r2.zw, cb1[0].yyyy, cb0[15].yyyz, r2.zzzw
					sample r4.xyzw, r2.zwzz, t5.xyzw, s6
					mad r0.w, r1.y, cb0[9].x, -r4.x
					add r0.w, -r0.w, r1.x
					add r0.w, r0.w, cb0[15].x
					mad r2.zw, v1.xxxy, cb0[20].xxxy, cb0[20].zzzw
					mad r4.xy, v1.xyxx, cb0[24].xyxx, cb0[24].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[23].xyxx, r4.xyxx
					sample r4.xyzw, r4.xyxx, t6.xyzw, s8
					add r3.w, -r4.x, l(0.500000)
					mul_sat r3.w, r3.w, l(3.000000)
					mul r4.xyz, r4.xxxx, cb0[22].xyzx
					mul r4.w, r3.w, r3.w
					mul r3.w, r3.w, r4.w
					mad r1.x, -r1.y, cb0[9].x, r1.x
					mad_sat r1.x, cb0[25].x, l(3.000000), r1.x
					mul r1.x, r1.x, r3.w
					mad r5.xyz, cb0[22].xyzx, r1.xxxx, -r4.xyzx
					mad r4.xyz, cb0[21].xxxx, r5.xyzx, r4.xyzx
					sample r5.xyzw, r2.zwzz, t7.xyzw, s7
					mul r6.xyz, r5.xyzx, cb0[19].xyzx
					mad r4.xyz, -cb0[19].xyzx, r5.xyzx, r4.xyzx
					mad r4.xyz, r1.wwww, r4.xyzx, r6.xyzx
					add r1.x, -cb0[27].x, l(1.000000)
					add r1.y, -|r1.z|, l(1.000000)
					add r1.x, -r1.x, r1.y
					mul_sat r1.x, r1.x, l(10.000000)
					mad r1.y, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mad_sat r1.x, r1.y, r1.x, -r1.w
					ge r1.y, cb0[17].x, r0.w
					mad r1.xzw, cb0[26].xxyz, r1.xxxx, r4.xxyz
					movc r1.xyz, r1.yyyy, cb0[18].xyzx, r1.xzwx
					sample r2.xyzw, r2.xyxx, t8.xyzw, s9
					add r1.w, r2.x, l(-1.000000)
					mad r2.w, cb0[28].x, r1.w, l(1.000000)
					add r0.w, r0.w, -cb0[28].y
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					dp3 r4.x, v2.xyzx, r0.xyzx
					dp3 r4.y, v3.xyzx, r0.xyzx
					dp3 r4.z, v4.xyzx, r0.xyzx
					dp3 r0.x, r4.xyzx, r4.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r4.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v2.w
					  mov r5.z, v3.w
					  mov r5.w, v4.w
					  movc r4.xyz, r1.wwww, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r3.w, cb3[0].z, l(0.500000)
					  mad r4.y, -cb3[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r3.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t9.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t9.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t9.xyzw, s0
					  mov r0.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r0.xyzw
					  dp4 r5.y, r6.xyzw, r0.xyzw
					  dp4 r5.z, r4.xyzw, r0.xyzw
					else 
					  mov r0.w, l(1.000000)
					  dp4 r5.x, cb2[39].xyzw, r0.xyzw
					  dp4 r5.y, cb2[40].xyzw, r0.xyzw
					  dp4 r5.z, cb2[41].xyzw, r0.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r4.xyz, r4.xyzx
					mul r4.xyz, r4.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r4.xyz, r4.xyzx
					mad r4.xyz, r4.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r4.xyz, r2.wwww, r4.xyzx
					add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[27].yyyy, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r2.xyz, r0.wwww, r3.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mad r0.xyz, r2.xyzx, r4.xyzx, r1.xyzx
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, r2.xyzw
					mov o1.w, cb0[27].z
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float       
					// TEXCOORD                 6   xyz         6     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[42], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					mad r0.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r0.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					mad r1.x, cb0[8].w, l(-2.000000), l(1.000000)
					mad r1.y, -r1.x, cb0[9].x, r1.x
					mad r1.zw, v1.xxxy, cb0[10].xxxy, cb0[10].zzzw
					mad r1.zw, cb1[0].yyyy, cb0[9].yyyz, r1.zzzw
					add r1.zw, r1.zzzw, v1.xxxy
					sample r2.xyzw, r1.zwzz, t0.xyzw, s3
					mad r1.z, r1.x, cb0[9].x, -r2.x
					add r1.z, -r1.z, r1.y
					round_pi r1.w, r1.z
					add_sat r1.w, -r1.w, l(1.000000)
					sample r2.xyzw, r0.xyxx, t1.xyzw, s1
					mul r2.x, r2.w, r2.x
					mad r0.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r0.xyxx, cb0[4].xxxx
					dp2 r0.x, r2.xyxx, r2.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r2.z, r0.x
					sample r0.xyzw, r0.zwzz, t2.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r0.xyxx, r0.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.z, r0.w
					add r0.xyz, -r2.xyzx, r0.xyzx
					mad r0.xyz, r1.wwww, r0.xyzx, r2.xyzx
					mad r2.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					mad r2.zw, v1.xxxy, cb0[14].xxxy, cb0[14].zzzw
					mul r3.xyz, r3.xyzx, cb0[11].xyzx
					sample r4.xyzw, r2.zwzz, t4.xyzw, s5
					mad r4.xyz, cb0[13].xyzx, r4.xyzx, -r3.xyzx
					mad r3.xyz, r1.wwww, r4.xyzx, r3.xyzx
					mad r2.zw, v1.xxxy, cb0[16].xxxy, cb0[16].zzzw
					mad r2.zw, cb1[0].yyyy, cb0[15].yyyz, r2.zzzw
					sample r4.xyzw, r2.zwzz, t5.xyzw, s6
					mad r0.w, r1.x, cb0[9].x, -r4.x
					add r0.w, -r0.w, r1.y
					add r0.w, r0.w, cb0[15].x
					mad r2.zw, v1.xxxy, cb0[20].xxxy, cb0[20].zzzw
					mad r4.xy, v1.xyxx, cb0[24].xyxx, cb0[24].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[23].xyxx, r4.xyxx
					sample r4.xyzw, r4.xyxx, t6.xyzw, s8
					add r3.w, -r4.x, l(0.500000)
					mul_sat r3.w, r3.w, l(3.000000)
					mul r4.xyz, r4.xxxx, cb0[22].xyzx
					mul r4.w, r3.w, r3.w
					mul r3.w, r3.w, r4.w
					mad r1.x, -r1.x, cb0[9].x, r1.y
					mad_sat r1.x, cb0[25].x, l(3.000000), r1.x
					mul r1.x, r1.x, r3.w
					mad r5.xyz, cb0[22].xyzx, r1.xxxx, -r4.xyzx
					mad r4.xyz, cb0[21].xxxx, r5.xyzx, r4.xyzx
					sample r5.xyzw, r2.zwzz, t7.xyzw, s7
					mul r6.xyz, r5.xyzx, cb0[19].xyzx
					mad r4.xyz, -cb0[19].xyzx, r5.xyzx, r4.xyzx
					mad r4.xyz, r1.wwww, r4.xyzx, r6.xyzx
					add r1.x, -cb0[27].x, l(1.000000)
					add r1.y, -|r1.z|, l(1.000000)
					add r1.x, -r1.x, r1.y
					mul_sat r1.x, r1.x, l(10.000000)
					mad r1.y, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mad_sat r1.x, r1.y, r1.x, -r1.w
					ge r1.y, cb0[17].x, r0.w
					mad r1.xzw, cb0[26].xxyz, r1.xxxx, r4.xxyz
					movc r1.xyz, r1.yyyy, cb0[18].xyzx, r1.xzwx
					sample r2.xyzw, r2.xyxx, t8.xyzw, s9
					add r1.w, r2.x, l(-1.000000)
					mad r2.w, cb0[28].x, r1.w, l(1.000000)
					add r0.w, r0.w, -cb0[28].y
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					dp3 r4.x, v2.xyzx, r0.xyzx
					dp3 r4.y, v3.xyzx, r0.xyzx
					dp3 r4.z, v4.xyzx, r0.xyzx
					dp3 r0.x, r4.xyzx, r4.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r4.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v2.w
					  mov r5.z, v3.w
					  mov r5.w, v4.w
					  movc r4.xyz, r1.wwww, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r3.w, cb3[0].z, l(0.500000)
					  mad r4.y, -cb3[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r3.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t9.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t9.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t9.xyzw, s0
					  mov r0.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r0.xyzw
					  dp4 r5.y, r6.xyzw, r0.xyzw
					  dp4 r5.z, r4.xyzw, r0.xyzw
					else 
					  mov r0.w, l(1.000000)
					  dp4 r5.x, cb2[39].xyzw, r0.xyzw
					  dp4 r5.y, cb2[40].xyzw, r0.xyzw
					  dp4 r5.z, cb2[41].xyzw, r0.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r4.xyz, r4.xyzx
					mul r4.xyz, r4.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r4.xyz, r4.xyzx
					mad r4.xyz, r4.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r4.xyz, r2.wwww, r4.xyzx
					add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[27].yyyy, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r2.xyz, r0.wwww, r3.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mad r0.xyz, r2.xyzx, r4.xyzx, r1.xyzx
					exp o3.xyz, -r0.xyzx
					mov o0.xyzw, r2.xyzw
					mov o1.w, cb0[27].z
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 4
					mad r0.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r0.xy, cb1[0].yyyy, cb0[15].yzyy, r0.xyxx
					sample r0.xyzw, r0.xyxx, t5.xyzw, s5
					mad r0.y, cb0[8].w, l(-2.000000), l(1.000000)
					mad r0.x, r0.y, cb0[9].x, -r0.x
					add r0.z, v3.w, -cb0[7].y
					mul r0.w, r0.y, cb0[9].x
					mad r0.z, r0.z, r0.y, -r0.w
					add r0.x, -r0.x, r0.z
					add r0.x, r0.x, cb0[15].x
					add r0.w, r0.x, -cb0[28].y
					ge r0.x, cb0[17].x, r0.x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r1.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r1.xy, cb1[0].yyyy, cb0[9].yzyy, r1.xyxx
					add r1.xy, r1.xyxx, v1.xyxx
					sample r1.xyzw, r1.xyxx, t0.xyzw, s2
					mad r0.w, r0.y, cb0[9].x, -r1.x
					mad r0.y, -r0.y, cb0[9].x, r0.z
					add r0.z, -r0.w, r0.z
					mad_sat r0.y, cb0[25].x, l(3.000000), r0.y
					round_pi r0.w, r0.z
					add r0.z, -|r0.z|, l(1.000000)
					add_sat r0.w, -r0.w, l(1.000000)
					mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					sample r1.xyzw, r1.xyxx, t4.xyzw, s4
					mad r2.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r3.xyzw, r2.xyxx, t3.xyzw, s3
					sample r2.xyzw, r2.xyxx, t8.xyzw, s8
					add r1.w, r2.x, l(-1.000000)
					mad o0.w, cb0[28].x, r1.w, l(1.000000)
					mul r2.xyz, r3.xyzx, cb0[11].xyzx
					mad r1.xyz, cb0[13].xyzx, r1.xyzx, -r2.xyzx
					mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
					mad r1.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul o0.xyz, r1.wwww, r1.xyzx
					add r1.xyz, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[27].yyyy, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mov o1.w, cb0[27].z
					mad r1.xy, v1.zwzz, cb0[6].xyxx, cb0[6].zwzz
					sample r1.xyzw, r1.xyxx, t2.xyzw, s1
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r1.xyxx, r1.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.z, r1.w
					mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r2.xyzw, r2.xyxx, t1.xyzw, s0
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[4].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r2.z, r1.w
					add r1.xyz, r1.xyzx, -r2.xyzx
					mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
					dp3 r2.x, v2.xyzx, r1.xyzx
					dp3 r2.y, v3.xyzx, r1.xyzx
					dp3 r2.z, v4.xyzx, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mad r1.xy, v1.xyxx, cb0[24].xyxx, cb0[24].zwzz
					mad r1.xy, cb1[0].yyyy, cb0[23].xyxx, r1.xyxx
					sample r1.xyzw, r1.xyxx, t6.xyzw, s7
					add r1.y, -r1.x, l(0.500000)
					mul r1.xzw, r1.xxxx, cb0[22].xxyz
					mul_sat r1.y, r1.y, l(3.000000)
					mul r2.x, r1.y, r1.y
					mul r1.y, r1.y, r2.x
					mul r0.y, r0.y, r1.y
					mad r2.xyz, cb0[22].xyzx, r0.yyyy, -r1.xzwx
					mad r1.xyz, cb0[21].xxxx, r2.xyzx, r1.xzwx
					mad r2.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					sample r2.xyzw, r2.xyxx, t7.xyzw, s6
					mad r1.xyz, -cb0[19].xyzx, r2.xyzx, r1.xyzx
					mul r2.xyz, r2.xyzx, cb0[19].xyzx
					mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
					add r0.y, -cb0[27].x, l(1.000000)
					add r0.y, -r0.y, r0.z
					mul_sat r0.y, r0.y, l(10.000000)
					mad r0.z, r0.y, l(-2.000000), l(3.000000)
					mul r0.y, r0.y, r0.y
					mad_sat r0.y, r0.z, r0.y, -r0.w
					mad r0.yzw, cb0[26].xxyz, r0.yyyy, r1.xxyz
					movc o3.xyz, r0.xxxx, cb0[18].xyzx, r0.yzwy
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_HDR_ON" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 4
					mad r0.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r0.xy, cb1[0].yyyy, cb0[15].yzyy, r0.xyxx
					sample r0.xyzw, r0.xyxx, t5.xyzw, s5
					mad r0.y, cb0[8].w, l(-2.000000), l(1.000000)
					mad r0.x, r0.y, cb0[9].x, -r0.x
					mad r0.z, -r0.y, cb0[9].x, r0.y
					add r0.x, -r0.x, r0.z
					add r0.x, r0.x, cb0[15].x
					add r0.w, r0.x, -cb0[28].y
					ge r0.x, cb0[17].x, r0.x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					sample r1.xyzw, r1.xyxx, t4.xyzw, s4
					mad r2.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r3.xyzw, r2.xyxx, t3.xyzw, s3
					sample r2.xyzw, r2.xyxx, t8.xyzw, s8
					add r0.w, r2.x, l(-1.000000)
					mad o0.w, cb0[28].x, r0.w, l(1.000000)
					mul r2.xyz, r3.xyzx, cb0[11].xyzx
					mad r1.xyz, cb0[13].xyzx, r1.xyzx, -r2.xyzx
					mad r3.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r3.xy, cb1[0].yyyy, cb0[9].yzyy, r3.xyxx
					add r3.xy, r3.xyxx, v1.xyxx
					sample r3.xyzw, r3.xyxx, t0.xyzw, s2
					mad r0.w, r0.y, cb0[9].x, -r3.x
					mad r0.y, -r0.y, cb0[9].x, r0.z
					add r0.z, -r0.w, r0.z
					mad_sat r0.y, cb0[25].x, l(3.000000), r0.y
					round_pi r0.w, r0.z
					add r0.z, -|r0.z|, l(1.000000)
					add_sat r0.w, -r0.w, l(1.000000)
					mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
					mad r1.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul o0.xyz, r1.wwww, r1.xyzx
					add r1.xyz, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[27].yyyy, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mov o1.w, cb0[27].z
					mad r1.xy, v1.zwzz, cb0[6].xyxx, cb0[6].zwzz
					sample r1.xyzw, r1.xyxx, t2.xyzw, s1
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r1.xyxx, r1.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.z, r1.w
					mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r2.xyzw, r2.xyxx, t1.xyzw, s0
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[4].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r2.z, r1.w
					add r1.xyz, r1.xyzx, -r2.xyzx
					mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
					dp3 r2.x, v2.xyzx, r1.xyzx
					dp3 r2.y, v3.xyzx, r1.xyzx
					dp3 r2.z, v4.xyzx, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mad r1.xy, v1.xyxx, cb0[24].xyxx, cb0[24].zwzz
					mad r1.xy, cb1[0].yyyy, cb0[23].xyxx, r1.xyxx
					sample r1.xyzw, r1.xyxx, t6.xyzw, s7
					add r1.y, -r1.x, l(0.500000)
					mul r1.xzw, r1.xxxx, cb0[22].xxyz
					mul_sat r1.y, r1.y, l(3.000000)
					mul r2.x, r1.y, r1.y
					mul r1.y, r1.y, r2.x
					mul r0.y, r0.y, r1.y
					mad r2.xyz, cb0[22].xyzx, r0.yyyy, -r1.xzwx
					mad r1.xyz, cb0[21].xxxx, r2.xyzx, r1.xzwx
					mad r2.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					sample r2.xyzw, r2.xyxx, t7.xyzw, s6
					mad r1.xyz, -cb0[19].xyzx, r2.xyzx, r1.xyzx
					mul r2.xyz, r2.xyzx, cb0[19].xyzx
					mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
					add r0.y, -cb0[27].x, l(1.000000)
					add r0.y, -r0.y, r0.z
					mul_sat r0.y, r0.y, l(10.000000)
					mad r0.z, r0.y, l(-2.000000), l(3.000000)
					mul r0.y, r0.y, r0.y
					mad_sat r0.y, r0.z, r0.y, -r0.w
					mad r0.yzw, cb0[26].xxyz, r0.yyyy, r1.xxyz
					movc o3.xyz, r0.xxxx, cb0[18].xyzx, r0.yzwy
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float       
					// TEXCOORD                 6   xyz         6     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[42], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					mad r0.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r0.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					add r1.x, v3.w, -cb0[7].y
					mad r1.y, cb0[8].w, l(-2.000000), l(1.000000)
					mul r1.z, r1.y, cb0[9].x
					mad r1.x, r1.x, r1.y, -r1.z
					mad r1.zw, v1.xxxy, cb0[10].xxxy, cb0[10].zzzw
					mad r1.zw, cb1[0].yyyy, cb0[9].yyyz, r1.zzzw
					add r1.zw, r1.zzzw, v1.xxxy
					sample r2.xyzw, r1.zwzz, t0.xyzw, s3
					mad r1.z, r1.y, cb0[9].x, -r2.x
					add r1.z, -r1.z, r1.x
					round_pi r1.w, r1.z
					add_sat r1.w, -r1.w, l(1.000000)
					sample r2.xyzw, r0.xyxx, t1.xyzw, s1
					mul r2.x, r2.w, r2.x
					mad r0.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r0.xyxx, cb0[4].xxxx
					dp2 r0.x, r2.xyxx, r2.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r2.z, r0.x
					sample r0.xyzw, r0.zwzz, t2.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r0.xyxx, r0.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.z, r0.w
					add r0.xyz, -r2.xyzx, r0.xyzx
					mad r0.xyz, r1.wwww, r0.xyzx, r2.xyzx
					mad r2.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					mad r2.zw, v1.xxxy, cb0[14].xxxy, cb0[14].zzzw
					mul r3.xyz, r3.xyzx, cb0[11].xyzx
					sample r4.xyzw, r2.zwzz, t4.xyzw, s5
					mad r4.xyz, cb0[13].xyzx, r4.xyzx, -r3.xyzx
					mad r3.xyz, r1.wwww, r4.xyzx, r3.xyzx
					mad r2.zw, v1.xxxy, cb0[16].xxxy, cb0[16].zzzw
					mad r2.zw, cb1[0].yyyy, cb0[15].yyyz, r2.zzzw
					sample r4.xyzw, r2.zwzz, t5.xyzw, s6
					mad r0.w, r1.y, cb0[9].x, -r4.x
					add r0.w, -r0.w, r1.x
					add r0.w, r0.w, cb0[15].x
					mad r2.zw, v1.xxxy, cb0[20].xxxy, cb0[20].zzzw
					mad r4.xy, v1.xyxx, cb0[24].xyxx, cb0[24].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[23].xyxx, r4.xyxx
					sample r4.xyzw, r4.xyxx, t6.xyzw, s8
					add r3.w, -r4.x, l(0.500000)
					mul_sat r3.w, r3.w, l(3.000000)
					mul r4.xyz, r4.xxxx, cb0[22].xyzx
					mul r4.w, r3.w, r3.w
					mul r3.w, r3.w, r4.w
					mad r1.x, -r1.y, cb0[9].x, r1.x
					mad_sat r1.x, cb0[25].x, l(3.000000), r1.x
					mul r1.x, r1.x, r3.w
					mad r5.xyz, cb0[22].xyzx, r1.xxxx, -r4.xyzx
					mad r4.xyz, cb0[21].xxxx, r5.xyzx, r4.xyzx
					sample r5.xyzw, r2.zwzz, t7.xyzw, s7
					mul r6.xyz, r5.xyzx, cb0[19].xyzx
					mad r4.xyz, -cb0[19].xyzx, r5.xyzx, r4.xyzx
					mad r4.xyz, r1.wwww, r4.xyzx, r6.xyzx
					add r1.x, -cb0[27].x, l(1.000000)
					add r1.y, -|r1.z|, l(1.000000)
					add r1.x, -r1.x, r1.y
					mul_sat r1.x, r1.x, l(10.000000)
					mad r1.y, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mad_sat r1.x, r1.y, r1.x, -r1.w
					ge r1.y, cb0[17].x, r0.w
					mad r1.xzw, cb0[26].xxyz, r1.xxxx, r4.xxyz
					movc r1.xyz, r1.yyyy, cb0[18].xyzx, r1.xzwx
					sample r2.xyzw, r2.xyxx, t8.xyzw, s9
					add r1.w, r2.x, l(-1.000000)
					mad r2.w, cb0[28].x, r1.w, l(1.000000)
					add r0.w, r0.w, -cb0[28].y
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					dp3 r4.x, v2.xyzx, r0.xyzx
					dp3 r4.y, v3.xyzx, r0.xyzx
					dp3 r4.z, v4.xyzx, r0.xyzx
					dp3 r0.x, r4.xyzx, r4.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r4.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v2.w
					  mov r5.z, v3.w
					  mov r5.w, v4.w
					  movc r4.xyz, r1.wwww, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r3.w, cb3[0].z, l(0.500000)
					  mad r4.y, -cb3[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r3.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t9.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t9.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t9.xyzw, s0
					  mov r0.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r0.xyzw
					  dp4 r5.y, r6.xyzw, r0.xyzw
					  dp4 r5.z, r4.xyzw, r0.xyzw
					else 
					  mov r0.w, l(1.000000)
					  dp4 r5.x, cb2[39].xyzw, r0.xyzw
					  dp4 r5.y, cb2[40].xyzw, r0.xyzw
					  dp4 r5.z, cb2[41].xyzw, r0.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r4.xyz, r4.xyzx
					mul r4.xyz, r4.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r4.xyz, r4.xyzx
					mad r4.xyz, r4.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r4.xyz, r2.wwww, r4.xyzx
					add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[27].yyyy, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r2.xyz, r0.wwww, r3.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mad o3.xyz, r2.xyzx, r4.xyzx, r1.xyzx
					mov o0.xyzw, r2.xyzw
					mov o1.w, cb0[27].z
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        5     NONE   float       
					// TEXCOORD                 6   xyz         6     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[42], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 7
					mad r0.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mad r0.zw, v1.zzzw, cb0[6].xxxy, cb0[6].zzzw
					mad r1.x, cb0[8].w, l(-2.000000), l(1.000000)
					mad r1.y, -r1.x, cb0[9].x, r1.x
					mad r1.zw, v1.xxxy, cb0[10].xxxy, cb0[10].zzzw
					mad r1.zw, cb1[0].yyyy, cb0[9].yyyz, r1.zzzw
					add r1.zw, r1.zzzw, v1.xxxy
					sample r2.xyzw, r1.zwzz, t0.xyzw, s3
					mad r1.z, r1.x, cb0[9].x, -r2.x
					add r1.z, -r1.z, r1.y
					round_pi r1.w, r1.z
					add_sat r1.w, -r1.w, l(1.000000)
					sample r2.xyzw, r0.xyxx, t1.xyzw, s1
					mul r2.x, r2.w, r2.x
					mad r0.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r0.xyxx, cb0[4].xxxx
					dp2 r0.x, r2.xyxx, r2.xyxx
					min r0.x, r0.x, l(1.000000)
					add r0.x, -r0.x, l(1.000000)
					sqrt r2.z, r0.x
					sample r0.xyzw, r0.zwzz, t2.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r0.xyxx, r0.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.z, r0.w
					add r0.xyz, -r2.xyzx, r0.xyzx
					mad r0.xyz, r1.wwww, r0.xyzx, r2.xyzx
					mad r2.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					mad r2.zw, v1.xxxy, cb0[14].xxxy, cb0[14].zzzw
					mul r3.xyz, r3.xyzx, cb0[11].xyzx
					sample r4.xyzw, r2.zwzz, t4.xyzw, s5
					mad r4.xyz, cb0[13].xyzx, r4.xyzx, -r3.xyzx
					mad r3.xyz, r1.wwww, r4.xyzx, r3.xyzx
					mad r2.zw, v1.xxxy, cb0[16].xxxy, cb0[16].zzzw
					mad r2.zw, cb1[0].yyyy, cb0[15].yyyz, r2.zzzw
					sample r4.xyzw, r2.zwzz, t5.xyzw, s6
					mad r0.w, r1.x, cb0[9].x, -r4.x
					add r0.w, -r0.w, r1.y
					add r0.w, r0.w, cb0[15].x
					mad r2.zw, v1.xxxy, cb0[20].xxxy, cb0[20].zzzw
					mad r4.xy, v1.xyxx, cb0[24].xyxx, cb0[24].zwzz
					mad r4.xy, cb1[0].yyyy, cb0[23].xyxx, r4.xyxx
					sample r4.xyzw, r4.xyxx, t6.xyzw, s8
					add r3.w, -r4.x, l(0.500000)
					mul_sat r3.w, r3.w, l(3.000000)
					mul r4.xyz, r4.xxxx, cb0[22].xyzx
					mul r4.w, r3.w, r3.w
					mul r3.w, r3.w, r4.w
					mad r1.x, -r1.x, cb0[9].x, r1.y
					mad_sat r1.x, cb0[25].x, l(3.000000), r1.x
					mul r1.x, r1.x, r3.w
					mad r5.xyz, cb0[22].xyzx, r1.xxxx, -r4.xyzx
					mad r4.xyz, cb0[21].xxxx, r5.xyzx, r4.xyzx
					sample r5.xyzw, r2.zwzz, t7.xyzw, s7
					mul r6.xyz, r5.xyzx, cb0[19].xyzx
					mad r4.xyz, -cb0[19].xyzx, r5.xyzx, r4.xyzx
					mad r4.xyz, r1.wwww, r4.xyzx, r6.xyzx
					add r1.x, -cb0[27].x, l(1.000000)
					add r1.y, -|r1.z|, l(1.000000)
					add r1.x, -r1.x, r1.y
					mul_sat r1.x, r1.x, l(10.000000)
					mad r1.y, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mad_sat r1.x, r1.y, r1.x, -r1.w
					ge r1.y, cb0[17].x, r0.w
					mad r1.xzw, cb0[26].xxyz, r1.xxxx, r4.xxyz
					movc r1.xyz, r1.yyyy, cb0[18].xyzx, r1.xzwx
					sample r2.xyzw, r2.xyxx, t8.xyzw, s9
					add r1.w, r2.x, l(-1.000000)
					mad r2.w, cb0[28].x, r1.w, l(1.000000)
					add r0.w, r0.w, -cb0[28].y
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					dp3 r4.x, v2.xyzx, r0.xyzx
					dp3 r4.y, v3.xyzx, r0.xyzx
					dp3 r4.z, v4.xyzx, r0.xyzx
					dp3 r0.x, r4.xyzx, r4.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r4.xyzx
					eq r1.w, cb3[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb3[0].y, l(1.000000)
					  mul r4.xyz, v3.wwww, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v2.wwww, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v4.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  mov r5.y, v2.w
					  mov r5.z, v3.w
					  mov r5.w, v4.w
					  movc r4.xyz, r1.wwww, r4.xyzx, r5.yzwy
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mul r1.w, r4.y, l(0.250000)
					  mul r3.w, cb3[0].z, l(0.500000)
					  mad r4.y, -cb3[0].z, l(0.500000), l(0.250000)
					  max r1.w, r1.w, r3.w
					  min r4.x, r4.y, r1.w
					  sample r5.xyzw, r4.xzwx, t9.xyzw, s0
					  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r6.xyzw, r6.xyzx, t9.xyzw, s0
					  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t9.xyzw, s0
					  mov r0.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r0.xyzw
					  dp4 r5.y, r6.xyzw, r0.xyzw
					  dp4 r5.z, r4.xyzw, r0.xyzw
					else 
					  mov r0.w, l(1.000000)
					  dp4 r5.x, cb2[39].xyzw, r0.xyzw
					  dp4 r5.y, cb2[40].xyzw, r0.xyzw
					  dp4 r5.z, cb2[41].xyzw, r0.xyzw
					endif 
					add r4.xyz, r5.xyzx, v6.xyzx
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r4.xyz, r4.xyzx
					mul r4.xyz, r4.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r4.xyz, r4.xyzx
					mad r4.xyz, r4.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r4.xyz, r2.wwww, r4.xyzx
					add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[27].yyyy, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r0.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul r2.xyz, r0.wwww, r3.xyzx
					mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mad o3.xyz, r2.xyzx, r4.xyzx, r1.xyzx
					mov o0.xyzw, r2.xyzw
					mov o1.w, cb0[27].z
					mov o2.w, l(1.000000)
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        5     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 4
					mad r0.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r0.xy, cb1[0].yyyy, cb0[15].yzyy, r0.xyxx
					sample r0.xyzw, r0.xyxx, t5.xyzw, s5
					mad r0.y, cb0[8].w, l(-2.000000), l(1.000000)
					mad r0.x, r0.y, cb0[9].x, -r0.x
					add r0.z, v3.w, -cb0[7].y
					mul r0.w, r0.y, cb0[9].x
					mad r0.z, r0.z, r0.y, -r0.w
					add r0.x, -r0.x, r0.z
					add r0.x, r0.x, cb0[15].x
					add r0.w, r0.x, -cb0[28].y
					ge r0.x, cb0[17].x, r0.x
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mad r1.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad r1.xy, cb1[0].yyyy, cb0[9].yzyy, r1.xyxx
					add r1.xy, r1.xyxx, v1.xyxx
					sample r1.xyzw, r1.xyxx, t0.xyzw, s2
					mad r0.w, r0.y, cb0[9].x, -r1.x
					mad r0.y, -r0.y, cb0[9].x, r0.z
					add r0.z, -r0.w, r0.z
					mad_sat r0.y, cb0[25].x, l(3.000000), r0.y
					round_pi r0.w, r0.z
					add r0.z, -|r0.z|, l(1.000000)
					add_sat r0.w, -r0.w, l(1.000000)
					mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					sample r1.xyzw, r1.xyxx, t4.xyzw, s4
					mad r2.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
					sample r3.xyzw, r2.xyxx, t3.xyzw, s3
					sample r2.xyzw, r2.xyxx, t8.xyzw, s8
					add r1.w, r2.x, l(-1.000000)
					mad o0.w, cb0[28].x, r1.w, l(1.000000)
					mul r2.xyz, r3.xyzx, cb0[11].xyzx
					mad r1.xyz, cb0[13].xyzx, r1.xyzx, -r2.xyzx
					mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
					mad r1.w, -cb0[27].y, l(0.779084), l(0.779084)
					mul o0.xyz, r1.wwww, r1.xyzx
					add r1.xyz, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad o1.xyz, cb0[27].yyyy, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mov o1.w, cb0[27].z
					mad r1.xy, v1.zwzz, cb0[6].xyxx, cb0[6].zwzz
					sample r1.xyzw, r1.xyxx, t2.xyzw, s1
					mul r1.x, r1.w, r1.x
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r1.xyxx, r1.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r1.z, r1.w
					mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r2.xyzw, r2.xyxx, t1.xyzw, s0
					mul r2.x, r2.w, r2.x
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[4].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r2.z, r1.w
					add r1.xyz, r1.xyzx, -r2.xyzx
					mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
					dp3 r2.x, v2.xyzx, r1.xyzx
					dp3 r2.y, v3.xyzx, r1.xyzx
					dp3 r2.z, v4.xyzx, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov o2.w, l(1.000000)
					mad r1.xy, v1.xyxx, cb0[24].xyxx, cb0[24].zwzz
					mad r1.xy, cb1[0].yyyy, cb0[23].xyxx, r1.xyxx
					sample r1.xyzw, r1.xyxx, t6.xyzw, s7
					add r1.y, -r1.x, l(0.500000)
					mul r1.xzw, r1.xxxx, cb0[22].xxyz
					mul_sat r1.y, r1.y, l(3.000000)
					mul r2.x, r1.y, r1.y
					mul r1.y, r1.y, r2.x
					mul r0.y, r0.y, r1.y
					mad r2.xyz, cb0[22].xyzx, r0.yyyy, -r1.xzwx
					mad r1.xyz, cb0[21].xxxx, r2.xyzx, r1.xzwx
					mad r2.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
					sample r2.xyzw, r2.xyxx, t7.xyzw, s6
					mad r1.xyz, -cb0[19].xyzx, r2.xyzx, r1.xyzx
					mul r2.xyz, r2.xyzx, cb0[19].xyzx
					mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
					add r0.y, -cb0[27].x, l(1.000000)
					add r0.y, -r0.y, r0.z
					mul_sat r0.y, r0.y, l(10.000000)
					mad r0.z, r0.y, l(-2.000000), l(3.000000)
					mul r0.y, r0.y, r0.y
					mad_sat r0.y, r0.z, r0.y, -r0.w
					mad r0.yzw, cb0[26].xxyz, r0.yyyy, r1.xxyz
					movc r0.xyz, r0.xxxx, cb0[18].xyzx, r0.yzwy
					exp o3.xyz, -r0.xyzx
					mov o3.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "ShadowCaster"
			Tags { "IGNOREPROJECTOR" = "true" "IsEmissive" = "true" "LIGHTMODE" = "SHADOWCASTER" "QUEUE" = "Geometry+0" "RenderType" = "TransparentCutout" "SHADOWSUPPORT" = "true" }
			GpuProgramID 239140
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[6], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_temps 3
					dp3 r0.x, v2.xyzx, cb3[4].xyzx
					dp3 r0.y, v2.xyzx, cb3[5].xyzx
					dp3 r0.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb3[1].xyzw
					mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb2[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb2[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					div r1.x, cb2[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb2[5].y, r0.x, r0.z
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad o2.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[6], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_temps 3
					dp3 r0.x, v2.xyzx, cb3[4].xyzx
					dp3 r0.y, v2.xyzx, cb3[5].xyzx
					dp3 r0.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb3[1].xyzw
					mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb2[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb2[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb2[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad o2.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[6], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_temps 3
					dp3 r0.x, v2.xyzx, cb3[4].xyzx
					dp3 r0.y, v2.xyzx, cb3[5].xyzx
					dp3 r0.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb3[1].xyzw
					mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb2[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb2[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb2[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad o2.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[30], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[6], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyz
					dcl_temps 3
					dp3 r0.x, v2.xyzx, cb3[4].xyzx
					dp3 r0.y, v2.xyzx, cb3[5].xyzx
					dp3 r0.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.xyzw, v0.yyyy, cb3[1].xyzw
					mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
					mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
					mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					dp3 r0.w, r0.xyzx, r2.xyzx
					mad r0.w, -r0.w, r0.w, l(1.000000)
					sqrt r0.w, r0.w
					mul r0.w, r0.w, cb2[5].z
					mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
					ne r0.w, cb2[5].z, l(0.000000)
					movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
					mul r2.xyzw, r0.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r0.xxxx, r2.xyzw
					mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r2.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					div r1.x, cb2[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb2[5].y, r0.x, r0.z
					mad o1.xy, v3.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mul r0.xyz, v0.yyyy, cb3[1].xyzx
					mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
					mad o2.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					mad r0.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r0.xy, cb1[0].yyyy, cb0[15].yzyy, r0.xyxx
					sample r0.xyzw, r0.xyxx, t0.xyzw, s0
					mad r0.y, cb0[8].w, l(-2.000000), l(1.000000)
					mad r0.x, r0.y, cb0[9].x, -r0.x
					mad r0.y, -r0.y, cb0[9].x, r0.y
					add r0.x, -r0.x, r0.y
					add r0.x, r0.x, cb0[15].x
					add r0.x, r0.x, -cb0[28].y
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyz         2     NONE   float    y  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.y
					dcl_output o0.xyzw
					dcl_temps 2
					add r0.x, v2.y, -cb0[7].y
					mad r0.y, cb0[8].w, l(-2.000000), l(1.000000)
					mul r0.z, r0.y, cb0[9].x
					mad r0.x, r0.x, r0.y, -r0.z
					mad r0.zw, v1.xxxy, cb0[16].xxxy, cb0[16].zzzw
					mad r0.zw, cb1[0].yyyy, cb0[15].yyyz, r0.zzzw
					sample r1.xyzw, r0.zwzz, t0.xyzw, s0
					mad r0.y, r0.y, cb0[9].x, -r1.x
					add r0.x, -r0.y, r0.x
					add r0.x, r0.x, cb0[15].x
					add r0.x, r0.x, -cb0[28].y
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" "_CUTOFFAXIS_X" "_MASKTYPE_NONE" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyz         2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					mad r0.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
					mad r0.xy, cb1[0].yyyy, cb0[15].yzyy, r0.xyxx
					sample r0.xyzw, r0.xyxx, t0.xyzw, s0
					mad r0.y, cb0[8].w, l(-2.000000), l(1.000000)
					mad r0.x, r0.y, cb0[9].x, -r0.x
					mad r0.y, -r0.y, cb0[9].x, r0.y
					add r0.x, -r0.x, r0.y
					add r0.x, r0.x, cb0[15].x
					add r0.x, r0.x, -cb0[28].y
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" "_CUTOFFAXIS_Y" "_MASKTYPE_AXISGLOBAL" "_SMOOTHNESSTEXTURECHANNEL_METALLICALPHA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 2   xyz         2     NONE   float    y  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[29], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.y
					dcl_output o0.xyzw
					dcl_temps 2
					add r0.x, v2.y, -cb0[7].y
					mad r0.y, cb0[8].w, l(-2.000000), l(1.000000)
					mul r0.z, r0.y, cb0[9].x
					mad r0.x, r0.x, r0.y, -r0.z
					mad r0.zw, v1.xxxy, cb0[16].xxxy, cb0[16].zzzw
					mad r0.zw, cb1[0].yyyy, cb0[15].yyyz, r0.zzzw
					sample r1.xyzw, r0.zwzz, t0.xyzw, s0
					mad r0.y, r0.y, cb0[9].x, -r1.x
					add r0.x, -r0.y, r0.x
					add r0.x, r0.x, cb0[15].x
					add r0.x, r0.x, -cb0[28].y
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "Diffuse"
	CustomEditor "MfxShaderGui"
}